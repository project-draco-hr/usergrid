{
  install(new GuicyFigModule(GraphFig.class));
  bind(EdgeMetadataSerialization.class).to(EdgeMetadataSerializationImpl.class);
  bind(NodeSerialization.class).to(NodeSerializationImpl.class);
  bind(TimeService.class).to(TimeServiceImpl.class);
  install(new FactoryModuleBuilder().implement(GraphManager.class,GraphManagerImpl.class).build(GraphManagerFactory.class));
  bind(NodeShardAllocation.class).to(NodeShardAllocationImpl.class);
  bind(NodeShardApproximation.class).to(NodeShardApproximationImpl.class);
  bind(NodeShardCache.class).to(NodeShardCacheImpl.class);
  bind(NodeShardCounterSerialization.class).to(NodeShardCounterSerializationImpl.class);
  bind(EdgeShardSerialization.class).to(EdgeShardSerializationImpl.class);
  bind(EdgeMetaRepair.class).to(EdgeMetaRepairImpl.class);
  bind(EdgeDeleteRepair.class).to(EdgeDeleteRepairImpl.class);
  bind(NodeDeleteListener.class).to(NodeDeleteListenerImpl.class);
  bind(EdgeDeleteListener.class).to(EdgeDeleteListenerImpl.class);
  Multibinder<Migration> migrationBinding=Multibinder.newSetBinder(binder(),Migration.class);
  migrationBinding.addBinding().to(Key.get(NodeSerialization.class));
  migrationBinding.addBinding().to(Key.get(EdgeMetadataSerialization.class));
  migrationBinding.addBinding().to(Key.get(EdgeSerialization.class,StorageEdgeSerialization.class));
  migrationBinding.addBinding().to(Key.get(EdgeShardSerialization.class));
  migrationBinding.addBinding().to(Key.get(NodeShardCounterSerialization.class));
}
