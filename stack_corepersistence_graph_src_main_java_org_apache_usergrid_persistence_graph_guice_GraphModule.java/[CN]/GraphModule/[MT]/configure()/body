{
  install(new GuicyFigModule(GraphFig.class));
  bind(NodeSerialization.class).to(NodeSerializationImpl.class);
  bind(TimeService.class).to(TimeServiceImpl.class);
  bind(GraphManagerFactory.class).to(GraphManagerFactoryImpl.class);
  bind(EdgesObservable.class).to(EdgesObservableImpl.class);
  bind(TargetIdObservable.class).to(TargetIdObservableImpl.class);
  bind(EdgesObservable.class).to(EdgesObservableImpl.class);
  bind(EdgeMetadataSerialization.class).to(EdgeMetadataSerializationProxyImpl.class);
  bind(NodeShardAllocation.class).to(NodeShardAllocationImpl.class);
  bind(NodeShardApproximation.class).to(NodeShardApproximationImpl.class);
  bind(NodeShardCache.class).to(NodeShardCacheImpl.class);
  bind(NodeShardCounterSerialization.class).to(NodeShardCounterSerializationImpl.class);
  bind(EdgeShardSerialization.class).to(EdgeShardSerializationImpl.class);
  bind(EdgeMetaRepair.class).to(EdgeMetaRepairImpl.class);
  bind(EdgeDeleteRepair.class).to(EdgeDeleteRepairImpl.class);
  Multibinder<DataMigration2<ApplicationScope>> dataMigrationMultibinder=Multibinder.newSetBinder(binder(),new TypeLiteral<DataMigration2<ApplicationScope>>(){
  }
);
  dataMigrationMultibinder.addBinding().to(EdgeDataMigrationImpl.class);
  Multibinder.newSetBinder(binder(),MigrationPlugin.class).addBinding().to(GraphMigrationPlugin.class);
  bind(NodeDeleteListener.class).to(NodeDeleteListenerImpl.class);
  bind(EdgeDeleteListener.class).to(EdgeDeleteListenerImpl.class);
  bind(EdgeSerialization.class).to(EdgeSerializationImpl.class);
  bind(EdgeShardStrategy.class).to(SizebasedEdgeShardStrategy.class);
  bind(ShardedEdgeSerialization.class).to(ShardedEdgeSerializationImpl.class);
  bind(EdgeColumnFamilies.class).to(SizebasedEdgeColumnFamilies.class);
  bind(ShardGroupCompaction.class).to(ShardGroupCompactionImpl.class);
  Multibinder<Migration> migrationBinding=Multibinder.newSetBinder(binder(),Migration.class);
  migrationBinding.addBinding().to(Key.get(NodeSerialization.class));
  migrationBinding.addBinding().to(Key.get(EdgeColumnFamilies.class));
  migrationBinding.addBinding().to(Key.get(EdgeShardSerialization.class));
  migrationBinding.addBinding().to(Key.get(NodeShardCounterSerialization.class));
  migrationBinding.addBinding().to(Key.get(EdgeMetadataSerializationV1Impl.class));
  migrationBinding.addBinding().to(Key.get(EdgeMetadataSerializationV2Impl.class));
  bind(EdgeMetadataSerializationV1Impl.class);
  bind(EdgeMetadataSerializationV2Impl.class);
  bind(EdgeMetadataSerialization.class).annotatedWith(ProxyImpl.class).to(EdgeMetadataSerializationProxyImpl.class);
}
