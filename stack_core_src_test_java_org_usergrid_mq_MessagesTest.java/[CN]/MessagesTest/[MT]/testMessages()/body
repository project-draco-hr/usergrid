{
  logger.info("MessagesTest.testMessages");
  UUID applicationId=createApplication("testMessages");
  assertNotNull(applicationId);
  EntityManager em=getEntityManagerFactory().getEntityManager(applicationId);
  assertNotNull(em);
  logger.info("Creating message #1");
  Message message=new Message();
  message.setStringProperty("foo","bar");
  logger.info(JsonUtils.mapToFormattedJsonString(message));
  logger.info("Posting message #1 to queue /foo/bar");
  QueueManager qm=geQueueManagerFactory().getQueueManager(applicationId);
  qm.postToQueue("/foo/bar",message);
  logger.info("Getting message #1");
  message=qm.getMessage(message.getUuid());
  logger.info(JsonUtils.mapToFormattedJsonString(message));
  logger.info("Getting message from /foo/bar, should be message #1");
  QueueResults messages=qm.getFromQueue("/foo/bar",null);
  logger.info(JsonUtils.mapToFormattedJsonString(messages));
  assertEquals(1,messages.size());
  logger.info("Getting message from /foo/bar, should empty");
  messages=qm.getFromQueue("/foo/bar",null);
  logger.info(JsonUtils.mapToFormattedJsonString(messages));
  assertEquals(0,messages.size());
  message=new Message();
  message.setStringProperty("name","alpha");
  qm.postToQueue("/foo/bar",message);
  message=new Message();
  message.setStringProperty("name","bravo");
  qm.postToQueue("/foo/bar",message);
  messages=qm.getFromQueue("/foo/bar",null);
  logger.info(JsonUtils.mapToFormattedJsonString(messages));
  assertEquals(1,messages.size());
  messages=qm.getFromQueue("/foo/bar",null);
  logger.info(JsonUtils.mapToFormattedJsonString(messages));
  assertEquals(1,messages.size());
  messages=qm.getFromQueue("/foo/bar",null);
  logger.info(JsonUtils.mapToFormattedJsonString(messages));
  assertEquals(0,messages.size());
  messages=qm.getFromQueue("/foo/bar",new QueueQuery().withPosition(QueuePosition.END).withPreviousCount(3));
  logger.info(JsonUtils.mapToFormattedJsonString(messages));
  assertEquals(3,messages.size());
  Map<String,Long> counters=qm.getQueueCounters("/");
  logger.info(JsonUtils.mapToFormattedJsonString(counters));
  assertEquals(1,counters.size());
  assertNotNull(counters.get("/foo/bar/"));
  assertEquals(new Long(3),counters.get("/foo/bar/"));
}
