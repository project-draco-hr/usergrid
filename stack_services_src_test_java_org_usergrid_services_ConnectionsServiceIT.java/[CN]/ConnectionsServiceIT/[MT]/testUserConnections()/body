{
  app.put("username","conn-user1");
  app.put("email","conn-user1@apigee.com");
  Entity user1=app.testRequest(ServiceAction.POST,1,"users").getEntity();
  assertNotNull(user1);
  app.testRequest(ServiceAction.GET,1,"users","conn-user1");
  app.put("username","conn-user2");
  app.put("email","conn-user2@apigee.com");
  Entity user2=app.testRequest(ServiceAction.POST,1,"users").getEntity();
  assertNotNull(user2);
  app.testRequest(ServiceAction.POST,1,"users","conn-user1","manages","users","conn-user2");
  app.testRequest(ServiceAction.POST,1,"users","conn-user1","reports","users","conn-user2");
  app.testRequest(ServiceAction.GET,1,"users","conn-user1");
  app.testRequest(ServiceAction.GET,1,"users","conn-user2");
  app.testRequest(ServiceAction.DELETE,1,"users","conn-user1","manages","users","conn-user2");
  user1=app.testRequest(ServiceAction.GET,1,"users","conn-user1").getEntities().get(0);
  assertFalse(((Map)user1.getMetadata("connections")).containsKey("manages"));
  user2=app.testRequest(ServiceAction.GET,1,"users","conn-user2").getEntities().get(0);
  assertFalse(((Map)user2.getMetadata("connecting")).containsKey("manages"));
  app.testRequest(ServiceAction.DELETE,0,"users","conn-user1","reports","conn-user2");
  user1=app.testRequest(ServiceAction.GET,1,"users","conn-user1").getEntities().get(0);
  assertTrue(((Map)user1.getMetadata("connections")).containsKey("reports"));
  user2=app.testRequest(ServiceAction.GET,1,"users","conn-user2").getEntities().get(0);
  assertTrue(((Map)user2.getMetadata("connecting")).containsKey("reports"));
  app.put("username","conn-user3");
  app.put("email","conn-user3@apigee.com");
  app.testRequest(ServiceAction.POST,1,"users","conn-user1","manages","user");
}
