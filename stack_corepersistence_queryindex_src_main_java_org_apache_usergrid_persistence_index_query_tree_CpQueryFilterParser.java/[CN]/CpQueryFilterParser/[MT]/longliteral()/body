{
  CpQueryFilterParser.longliteral_return retval=new CpQueryFilterParser.longliteral_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LONG5=null;
  Object LONG5_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      LONG5=(Token)match(input,LONG,FOLLOW_LONG_in_longliteral1038);
      LONG5_tree=new LongLiteral(LONG5);
      adaptor.addChild(root_0,LONG5_tree);
    }
    retval.stop=input.LT(-1);
    retval.tree=(Object)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
  finally {
  }
  return retval;
}
