{
  CpQueryFilterParser.uuidliteral_return retval=new CpQueryFilterParser.uuidliteral_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token UUID6=null;
  Object UUID6_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      UUID6=(Token)match(input,UUID,FOLLOW_UUID_in_uuidliteral1052);
      UUID6_tree=new UUIDLiteral(UUID6);
      adaptor.addChild(root_0,UUID6_tree);
    }
    retval.stop=input.LT(-1);
    retval.tree=(Object)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
  finally {
  }
  return retval;
}
