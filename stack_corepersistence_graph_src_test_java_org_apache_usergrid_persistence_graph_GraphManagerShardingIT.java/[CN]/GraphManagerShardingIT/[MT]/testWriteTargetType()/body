{
  GraphManager gm=emf.createEdgeManager(scope);
  final Id targetId=IdGenerator.createId("target");
  final String edgeType="test";
  final long flushCount=graphFig.getCounterFlushCount();
  final long maxShardSize=graphFig.getShardSize();
  final long writeCount=flushCount / 4;
  assertTrue("Shard size must be >= beginFlush Count",maxShardSize >= flushCount);
  Id sourceId=null;
  for (long i=0; i < writeCount; i++) {
    sourceId=IdGenerator.createId("source");
    final Edge edge=createEdge(sourceId,edgeType,targetId);
    gm.writeEdge(edge).toBlocking().last();
  }
  final DirectedEdgeMeta targetMeta=DirectedEdgeMeta.fromTargetNode(targetId,edgeType);
  final Shard shard=new Shard(0l,0l,true);
  long targetWithType=nodeShardApproximation.getCount(scope,shard,targetMeta);
  assertEquals("Shard count for target node should be the same as write count",writeCount,targetWithType);
  final DirectedEdgeMeta targetNodeSource=DirectedEdgeMeta.fromTargetNodeSourceType(targetId,edgeType,"source");
  long shardCount=nodeShardApproximation.getCount(scope,shard,targetNodeSource);
  assertEquals("Shard count for target node should be the same as write count",writeCount,shardCount);
  final DirectedEdgeMeta sourceMeta=DirectedEdgeMeta.fromSourceNode(sourceId,edgeType);
  shardCount=nodeShardApproximation.getCount(scope,shard,sourceMeta);
  assertEquals(1,shardCount);
}
