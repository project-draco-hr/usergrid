{
  Entity user1=new Entity();
  user1.put("username","user1");
  user1.put("email","testuser1@usergrid.com");
  user1.put("fullname","Bob Smith");
  Entity user2=new Entity();
  user2.put("username","user2");
  user2.put("email","testuser2@usergrid.com");
  user2.put("fullname","Fred Smith");
  Entity user3=new Entity();
  user3.put("username","user3");
  user3.put("email","testuser3@usergrid.com");
  user3.put("fullname","Frank Grimes");
  user1=this.app().collection("users").post(user1);
  user2=this.app().collection("users").post(user2);
  user3=this.app().collection("users").post(user3);
  Entity restaurant1=new Entity();
  restaurant1.put("name","Old Major");
  Entity restaurant2=new Entity();
  restaurant2.put("name","tag");
  Entity restaurant3=new Entity();
  restaurant3.put("name","Squeaky Bean");
  Entity restaurant4=new Entity();
  restaurant4.put("name","Lola");
  restaurant1=this.app().collection("restaurants").post(restaurant1);
  restaurant2=this.app().collection("restaurants").post(restaurant2);
  restaurant3=this.app().collection("restaurants").post(restaurant3);
  restaurant4=this.app().collection("restaurants").post(restaurant4);
  this.refreshIndex();
  this.app().collection("users").entity(user1).connection("likes").collection("restaurants").entity(restaurant1).post();
  this.app().collection("users").entity(user1).connection("likes").collection("restaurants").entity(restaurant2).post();
  this.app().collection("users").entity(user2).connection("likes").collection("restaurants").entity(restaurant2).post();
  this.app().collection("users").entity(user2).connection("likes").collection("restaurants").entity(restaurant3).post();
  this.app().collection("users").entity(user3).connection("likes").collection("restaurants").entity(restaurant4).post();
  this.refreshIndex();
  Collection user1likes=this.app().collection("users").entity(user1).connection("likes").get();
  assertEquals(2,user1likes.response.getEntityCount());
  Collection user2likes=this.app().collection("users").entity(user2).connection("likes").get();
  assertEquals(2,user2likes.response.getEntityCount());
  Collection user3likes=this.app().collection("users").entity(user3).connection("likes").get();
  assertEquals(1,user3likes.response.getEntityCount());
}
