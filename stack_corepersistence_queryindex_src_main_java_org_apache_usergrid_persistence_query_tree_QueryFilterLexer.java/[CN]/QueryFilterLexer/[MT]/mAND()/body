{
  try {
    int _type=AND;
    int _channel=DEFAULT_TOKEN_CHANNEL;
    int alt7=2;
    int LA7_0=input.LA(1);
    if ((LA7_0 == 'A' || LA7_0 == 'a')) {
      alt7=1;
    }
 else     if ((LA7_0 == '&')) {
      alt7=2;
    }
 else {
      NoViableAltException nvae=new NoViableAltException("",7,0,input);
      throw nvae;
    }
switch (alt7) {
case 1:
{
        if (input.LA(1) == 'A' || input.LA(1) == 'a') {
          input.consume();
        }
 else {
          MismatchedSetException mse=new MismatchedSetException(null,input);
          recover(mse);
          throw mse;
        }
        if (input.LA(1) == 'N' || input.LA(1) == 'n') {
          input.consume();
        }
 else {
          MismatchedSetException mse=new MismatchedSetException(null,input);
          recover(mse);
          throw mse;
        }
        if (input.LA(1) == 'D' || input.LA(1) == 'd') {
          input.consume();
        }
 else {
          MismatchedSetException mse=new MismatchedSetException(null,input);
          recover(mse);
          throw mse;
        }
      }
    break;
case 2:
{
    match("&&");
  }
break;
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
