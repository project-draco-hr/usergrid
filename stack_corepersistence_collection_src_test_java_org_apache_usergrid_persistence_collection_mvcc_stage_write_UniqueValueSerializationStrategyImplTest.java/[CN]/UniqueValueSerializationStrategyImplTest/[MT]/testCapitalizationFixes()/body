{
  CollectionScope scope=new CollectionScopeImpl(new SimpleId("organization"),new SimpleId("test"),"test");
  StringField field=new StringField("count","MiXeD CaSe");
  Id entityId=new SimpleId(UUIDGenerator.newTimeUUID(),"entity");
  UUID version=UUIDGenerator.newTimeUUID();
  UniqueValue stored=new UniqueValueImpl(field,entityId,version);
  strategy.write(scope,stored).execute();
  UniqueValueSet fields=strategy.load(scope,Collections.<Field>singleton(field));
  UniqueValue value=fields.getValue(field.getName());
  assertEquals(field.getName(),value.getField().getName());
  assertEquals(entityId,value.getEntityId());
  fields=strategy.load(scope,Collections.<Field>singleton(new StringField(field.getName(),"MIXED CASE")));
  value=fields.getValue(field.getName());
  assertEquals(field.getName(),value.getField().getName());
  assertEquals(entityId,value.getEntityId());
  fields=strategy.load(scope,Collections.<Field>singleton(new StringField(field.getName(),"mixed case")));
  value=fields.getValue(field.getName());
  assertEquals(field.getName(),value.getField().getName());
  assertEquals(entityId,value.getEntityId());
  Iterator<UniqueValue> allFieldsWritten=strategy.getAllUniqueFields(scope,entityId);
  assertTrue(allFieldsWritten.hasNext());
  UniqueValue writtenFieldEntry=allFieldsWritten.next();
  Assert.assertNotNull(writtenFieldEntry);
  assertEquals(field.getName(),writtenFieldEntry.getField().getName());
  assertEquals(field.getValue().toLowerCase(),writtenFieldEntry.getField().getValue());
  assertEquals(version,writtenFieldEntry.getEntityVersion());
  assertFalse(allFieldsWritten.hasNext());
}
