{
  byte[] publicBytes=decodeBase64(publicKey);
  X509EncodedKeySpec keySpec=new X509EncodedKeySpec(publicBytes);
  KeyFactory keyFactory=KeyFactory.getInstance("RSA");
  PublicKey pubKey=keyFactory.generatePublic(keySpec);
  Jws<Claims> payload=null;
  try {
    payload=Jwts.parser().setSigningKey(pubKey).parseClaimsJws(token);
    UserInfo userInfo=management.getAdminUserByEmail(payload.getBody().get("email").toString());
    if (userInfo == null) {
      throw new IllegalArgumentException("user " + payload.getBody().get("email").toString() + " doesnt exist");
    }
    return userInfo;
  }
 catch (  SignatureException se) {
    logger.debug("Signature did not match.");
    throw new IllegalArgumentException("Signature did not match for the token.");
  }
catch (  Exception e) {
    logger.debug("Error validating Apigee SSO2 token.");
    e.printStackTrace();
  }
  return null;
}
