{
  final int NUM_DEVICES=10000;
  HashMap<String,Object> properties=new LinkedHashMap<String,Object>();
  String payload="Hello, World!";
  Map<String,String> payloads=new HashMap<String,String>(1);
  payloads.put(notifier.getUuid().toString(),payload);
  properties.put("payloads",payloads);
  properties.put("queued",System.currentTimeMillis());
  properties.put("debug",true);
  Entity e=app.testRequest(ServiceAction.POST,1,"notifications").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifications",e.getUuid());
  Notification notification=app.getEm().get(e.getUuid(),Notification.class);
  assertEquals(notification.getPayloads().get(notifier.getUuid().toString()),payload);
  properties=new LinkedHashMap<String,Object>();
  properties.put(notifier.getName() + NOTIFIER_ID_POSTFIX,PUSH_TOKEN);
  for (int i=0; i < NUM_DEVICES; i++) {
    Entity entity=app.getEm().create("device",properties);
    ns.addDevice(notification,entity);
  }
  long time=System.currentTimeMillis();
  logger.error("START DELIVERY OF {} NOTIFICATIONS",NUM_DEVICES);
  notification=scheduleNotificationAndWait(notification);
  logger.error("END DELIVERY OF {} NOTIFICATIONS ({})",NUM_DEVICES,System.currentTimeMillis() - time);
  checkReceipts(notification,NUM_DEVICES);
  checkStatistics(notification,NUM_DEVICES,0);
}
