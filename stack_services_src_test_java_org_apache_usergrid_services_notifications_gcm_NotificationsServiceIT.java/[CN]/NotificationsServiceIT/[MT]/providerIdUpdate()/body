{
  final String newProviderId="newProviderId";
  ns.providerAdapters.put("google",new MockSuccessfulProviderAdapter(){
    @Override public void sendNotification(    String providerId,    Notifier notifier,    Object payload,    Notification notification,    TaskTracker tracker) throws Exception {
      tracker.completed(newProviderId);
    }
  }
);
  app.clear();
  String payload="Hello, World!";
  Map<String,String> payloads=new HashMap<String,String>(1);
  payloads.put(notifier.getUuid().toString(),payload);
  app.put("payloads",payloads);
  app.put("queued",System.currentTimeMillis());
  app.put("debug",true);
  Entity e=app.testRequest(ServiceAction.POST,1,"devices",device1.getUuid(),"notifications").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifications",e.getUuid());
  Notification notification=app.getEm().get(e.getUuid(),Notification.class);
  assertEquals(notification.getPayloads().get(notifier.getUuid().toString()),payload);
  ns.addDevice(notification,device1);
  notification=scheduleNotificationAndWait(notification);
  checkReceipts(notification,1);
  Device device=(Device)app.getEm().get(device1).toTypedEntity();
  assertEquals(newProviderId,device.getProperty(notifier.getName() + NOTIFIER_ID_POSTFIX));
}
