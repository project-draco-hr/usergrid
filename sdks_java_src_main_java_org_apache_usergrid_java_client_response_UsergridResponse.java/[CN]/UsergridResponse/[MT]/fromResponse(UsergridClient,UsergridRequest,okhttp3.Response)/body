{
  UsergridResponse response;
  JsonNode responseJson;
  try {
    String responseJsonString=requestResponse.body().string();
    responseJson=JsonUtils.mapper.readTree(responseJsonString);
  }
 catch (  Exception e) {
    return UsergridResponse.fromException(client,e);
  }
  if (responseJson.has("error")) {
    response=new UsergridResponse();
    response.responseError=JsonUtils.fromJsonNode(responseJson,UsergridResponseError.class);
  }
 else {
    response=JsonUtils.fromJsonNode(responseJson,UsergridResponse.class);
  }
  response.client=client;
  response.responseJson=responseJson;
  response.statusCode=requestResponse.code();
  Headers responseHeaders=requestResponse.headers();
  HashMap<String,String> headers=new HashMap<>();
  for (int i=0; i < responseHeaders.size(); i++) {
    headers.put(responseHeaders.name(i),responseHeaders.value(i));
  }
  response.headers=headers;
  response.query=request.getQuery();
  return response;
}
