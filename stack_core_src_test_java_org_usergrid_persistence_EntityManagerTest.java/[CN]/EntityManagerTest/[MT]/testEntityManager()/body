{
  logger.info("EntityManagerTest.testEntityManagerTest");
  UUID applicationId=createApplication("testOrganization","testEntityManagerTest");
  assertNotNull(applicationId);
  EntityManager em=emf.getEntityManager(applicationId);
  assertNotNull(em);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  Entity user=em.create("user",properties);
  assertNotNull(user);
  user=em.get(user);
  assertNotNull(user);
  assertEquals("user.username not expected value","edanuff",user.getProperty("username"));
  assertEquals("user.email not expected value","ed@anuff.com",user.getProperty("email"));
  EntityRef userRef=em.getAlias(applicationId,"user","edanuff");
  assertNotNull(userRef);
  assertEquals("userRef.id not expected value",user.getUuid(),userRef.getUuid());
  assertEquals("userRef.type not expected value","user",userRef.getType());
  logger.info("user.username: " + user.getProperty("username"));
  logger.info("user.email: " + user.getProperty("email"));
  Results results=em.searchCollection(em.getApplicationRef(),"users",new Query().addEqualityFilter("username","edanuff"));
  assertNotNull(results);
  assertEquals(1,results.size());
  user=results.getEntity();
  assertNotNull(user);
  assertEquals("user.username not expected value","edanuff",user.getProperty("username"));
  assertEquals("user.email not expected value","ed@anuff.com",user.getProperty("email"));
  logger.info("user.username: " + user.getProperty("username"));
  logger.info("user.email: " + user.getProperty("email"));
  results=em.searchCollection(em.getApplicationRef(),"users",new Query().addEqualityFilter("email","ed@anuff.com"));
  assertNotNull(results);
  assertEquals(1,results.size());
  user=results.getEntity();
  assertNotNull(user);
  assertEquals("user.username not expected value","edanuff",user.getProperty("username"));
  assertEquals("user.email not expected value","ed@anuff.com",user.getProperty("email"));
  logger.info("user.username: " + user.getProperty("username"));
  logger.info("user.email: " + user.getProperty("email"));
}
