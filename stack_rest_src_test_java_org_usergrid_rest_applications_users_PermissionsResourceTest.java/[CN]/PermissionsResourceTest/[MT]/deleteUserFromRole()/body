{
  Map<String,String> data=hashMap("name",ROLE);
  JsonNode node=resource().path("/test-organization/test-app/rolenames").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(JsonNode.class,data);
  assertNull(node.get("error"));
  assertNotNull(node.get("data").get(ROLE));
  node=resource().path("/test-organization/test-app/users/" + USER + "/roles/"+ ROLE).queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(JsonNode.class);
  assertNull(node.get("error"));
  node=resource().path("/test-organization/test-app/users/" + USER + "/rolenames").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(JsonNode.class);
  assertNotNull(node.get("data").get(ROLE));
  node=resource().path("/test-organization/test-app/users/" + USER + "/roles/"+ ROLE).queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).delete(JsonNode.class);
  node=resource().path("/test-organization/test-app/users/" + USER + "/rolenames").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(JsonNode.class);
  assertNull(node.get("data").get(ROLE));
}
