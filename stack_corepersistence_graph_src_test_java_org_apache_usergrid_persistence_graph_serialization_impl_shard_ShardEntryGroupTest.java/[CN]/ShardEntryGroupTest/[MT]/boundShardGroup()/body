{
  final long delta=10000;
  Shard firstShard=new Shard(1000,10000,false);
  Shard secondShard=new Shard(999,9000,false);
  Shard compactedShard1=new Shard(900,8000,true);
  ShardEntryGroup shardEntryGroup=new ShardEntryGroup(delta);
  boolean result=shardEntryGroup.addShard(firstShard);
  assertTrue("Shard added",result);
  result=shardEntryGroup.addShard(secondShard);
  assertTrue(" Shard added",result);
  result=shardEntryGroup.addShard(compactedShard1);
  assertTrue("Shard added",result);
  assertTrue("Shard can be deleted",shardEntryGroup.canBeDeleted(firstShard));
  assertFalse("Compaction shard shard cannot be deleted",shardEntryGroup.canBeDeleted(secondShard));
  assertEquals("Same shard for merge target",secondShard,shardEntryGroup.getCompactionTarget());
  assertFalse("Merge cannot be run within min time",shardEntryGroup.shouldCompact(firstShard.getCreatedTime() + delta));
  assertFalse("Merge cannot be run within min time",shardEntryGroup.shouldCompact(secondShard.getCreatedTime() + delta));
  assertFalse("Merge cannot be run within min time",shardEntryGroup.shouldCompact(secondShard.getCreatedTime() + delta + 1));
  assertTrue("Merge should be run with after min time",shardEntryGroup.shouldCompact(firstShard.getCreatedTime() + delta + 1));
}
