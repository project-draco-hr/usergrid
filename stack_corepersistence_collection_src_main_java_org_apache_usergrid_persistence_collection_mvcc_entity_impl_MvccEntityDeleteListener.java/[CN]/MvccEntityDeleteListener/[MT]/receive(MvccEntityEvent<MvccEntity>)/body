{
  final MvccEntity entity=entityEvent.getData();
  return Observable.create(new ObservableIterator<MvccEntity>("getEdgesToTarget"){
    @Override protected Iterator<MvccEntity> getIterator(){
      return entityMetadataSerialization.loadHistory(entityEvent.getCollectionScope(),entity.getId(),entity.getVersion(),1000);
    }
  }
).subscribeOn(Schedulers.io()).map(new Func1<MvccEntity,MvccEntity>(){
    @Override public MvccEntity call(    MvccEntity mvccEntity){
      try {
        entityMetadataSerialization.delete(entityEvent.getCollectionScope(),entity.getId(),entity.getVersion()).execute();
      }
 catch (      ConnectionException e) {
        throw new RuntimeException("Unable to execute mutation",e);
      }
      return mvccEntity;
    }
  }
);
}
