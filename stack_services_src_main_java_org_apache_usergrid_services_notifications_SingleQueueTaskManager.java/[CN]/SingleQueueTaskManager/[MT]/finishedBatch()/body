{
synchronized (this) {
    long successes=this.successes.getAndSet(0);
    long failures=this.failures.getAndSet(0);
    this.hasFinished=true;
    Notification notification=em.get(this.notification.getUuid(),Notification.class);
    notification.setModified(System.currentTimeMillis());
    Map<String,Object> properties;
    Map<String,Long> stats;
    String statsKey="statistics_batch";
    if (successes + failures > 0) {
      properties=new HashMap<String,Object>(4);
      stats=new HashMap<String,Long>(2);
      stats.put("sent",successes);
      stats.put("errors",failures);
      properties.put(statsKey + "_" + System.currentTimeMillis(),stats);
      properties.put("modified",notification.getModified());
      em.updateProperties(notification,properties);
    }
    properties=em.getProperties(notification);
    long sent=0;
    long errors=0;
    for (    String key : properties.keySet()) {
      if (key.contains(statsKey)) {
        stats=(Map<String,Long>)properties.get(key);
        sent+=stats.get("sent");
        errors+=stats.get("errors");
      }
    }
    stats=new HashMap<String,Long>(2);
    stats.put("sent",sent);
    stats.put("errors",errors);
    notification.setStatistics(stats);
    if (LOG.isInfoEnabled()) {
      StringBuilder sb=new StringBuilder();
      sb.append("notification ").append(notification.getUuid());
      sb.append(" sending to ").append(sent + errors);
      LOG.info(sb.toString());
    }
    if (notification.getExpectedCount() <= (errors + sent)) {
      notification.setFinished(notification.getModified());
      properties.put("finished",notification.getModified());
      properties.put("state",notification.getState());
      if (LOG.isInfoEnabled()) {
        long elapsed=notification.getFinished() - notification.getStarted();
        StringBuilder sb=new StringBuilder();
        sb.append("done sending to devices in ").append(elapsed).append(" ms");
        LOG.info(sb.toString());
      }
    }
    LOG.info("notification finished batch: {}",notification.getUuid());
    em.updateProperties(notification,properties);
    em.update(notification);
  }
  Set<Notifier> notifiers=new HashSet<Notifier>(proxy.getNotifierMap().values());
  proxy.asyncCheckForInactiveDevices(notifiers);
}
