{
  String orgName=this.getClass().getName() + "1";
  String appName=name.getMethodName();
  String userName="Test User";
  String email="test-user-4@mockserver.com";
  String passwd="testpassword";
  OrganizationOwnerInfo orgOwner;
  orgOwner=createOwnerAndOrganization(orgName,appName,userName,email,passwd,false,false);
  assertNotNull(orgOwner);
  ApplicationInfo app=setup.getMgmtSvc().createApplication(orgOwner.getOrganization().getUuid(),appName);
  enableAdminApproval(app.getId());
  User user=setupAppUser(app.getId(),"testAppUserMailUrl","testAppUserMailUrl@test.com",false);
  String subject="Request For User Account Activation testAppUserMailUrl@test.com";
  String activation_url=String.format(setup.get(PROPERTIES_USER_ACTIVATION_URL),orgName,appName,user.getUuid().toString());
  setup.getMgmtSvc().startAppUserActivationFlow(app.getId(),user);
  List<Message> inbox=Mailbox.get(email);
  assertFalse(inbox.isEmpty());
  MockImapClient client=new MockImapClient("usergrid.com","test","somepassword");
  client.processMail();
  Message activation=inbox.get(0);
  assertEquals(subject,activation.getSubject());
  String mailContent=(String)((MimeMultipart)activation.getContent()).getBodyPart(1).getContent();
  LOG.info(mailContent);
  assertTrue(StringUtils.contains(mailContent.toLowerCase(),activation_url.toLowerCase()));
  String token=getTokenFromMessage(activation);
  LOG.info(token);
  ActivationState activeState=setup.getMgmtSvc().handleActivationTokenForAppUser(app.getId(),user.getUuid(),token);
  assertEquals(ActivationState.ACTIVATED,activeState);
  subject="Password Reset";
  String reset_url=String.format(setup.get(PROPERTIES_USER_RESETPW_URL),orgName,appName,user.getUuid().toString());
  setup.getMgmtSvc().startAppUserPasswordResetFlow(app.getId(),user);
  inbox=Mailbox.get("testAppUserMailUrl@test.com");
  assertFalse(inbox.isEmpty());
  client=new MockImapClient("test.com","testAppUserMailUrl","somepassword");
  client.processMail();
  Message reset=inbox.get(1);
  assertEquals(subject,reset.getSubject());
  mailContent=(String)((MimeMultipart)reset.getContent()).getBodyPart(1).getContent();
  LOG.info(mailContent);
  assertTrue(StringUtils.contains(mailContent.toLowerCase(),reset_url.toLowerCase()));
  token=getTokenFromMessage(reset);
  LOG.info(token);
  assertTrue(setup.getMgmtSvc().checkPasswordResetTokenForAppUser(app.getId(),user.getUuid(),token));
  setup.getMgmtSvc().revokeAccessTokenForAppUser(token);
  assertFalse(setup.getMgmtSvc().checkPasswordResetTokenForAppUser(app.getId(),user.getUuid(),token));
}
