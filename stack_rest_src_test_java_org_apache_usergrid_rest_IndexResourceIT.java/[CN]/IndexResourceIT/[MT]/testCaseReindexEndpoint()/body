{
  Map payload=new HashMap<>();
  payload.put("name","wazer wifle!!");
  ApiResponse collectionResponse=clientSetup.getRestClient().pathResource(getOrgAppPath("storelatlons")).post(payload);
  assertNotNull(collectionResponse);
  Token superUserToken=clientSetup.getRestClient().management().token().get(clientSetup.getSuperuserName(),clientSetup.getSuperuserPassword());
  QueryParameters queryParameters=new QueryParameters();
  queryParameters.addParam("access_token",superUserToken.getAccessToken());
  ApiResponse result=clientSetup.getRestClient().pathResource("system/index/rebuild/" + clientSetup.getAppUuid() + "/StOrElaTloNs").post(false,ApiResponse.class,null,queryParameters,true);
  assertNotNull(result);
  queryParameters=new QueryParameters();
  queryParameters.addParam("access_token",clientSetup.getSuperuserToken().getAccessToken());
  result=clientSetup.getRestClient().pathResource("system/index/rebuild/" + clientSetup.getAppUuid() + "/storelatlons").post(false,ApiResponse.class,null,queryParameters,true);
  assertNotNull(result);
  WebResource res=clientSetup.getRestClient().pathResource("system/index/rebuild/" + result.getProperties().get("jobId").toString()).getResource();
  HTTPBasicAuthFilter httpBasicAuthFilter=new HTTPBasicAuthFilter(clientSetup.getSuperuserName(),clientSetup.getSuperuserPassword());
  res.addFilter(httpBasicAuthFilter);
  result=res.get(ApiResponse.class);
  assertNotNull(result);
}
