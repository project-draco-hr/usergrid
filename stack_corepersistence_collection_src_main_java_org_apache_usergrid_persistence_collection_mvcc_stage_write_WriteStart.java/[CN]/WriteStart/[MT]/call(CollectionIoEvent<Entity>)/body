{
{
    final Entity entity=ioEvent.getEvent();
    final CollectionScope collectionScope=ioEvent.getEntityCollection();
    final Id entityId=entity.getId();
    final UUID newVersion=UUIDGenerator.newTimeUUID();
    final MvccLogEntry startEntry=new MvccLogEntryImpl(entityId,newVersion,Stage.ACTIVE,MvccLogEntry.State.COMPLETE);
    MutationBatch write=logStrategy.write(collectionScope,startEntry);
    final MvccEntityImpl nextStage=new MvccEntityImpl(entityId,newVersion,status,entity);
    if (ioEvent.getEvent().hasVersion()) {
      try {
        write.execute();
      }
 catch (      ConnectionException e) {
        LOG.error("Failed to execute write ",e);
        throw new WriteStartException(nextStage,collectionScope,"Failed to execute write ",e);
      }
catch (      NullPointerException e) {
        LOG.error("Failed to execute write ",e);
        throw new WriteStartException(nextStage,collectionScope,"Failed to execute write",e);
      }
    }
    return new CollectionIoEvent<MvccEntity>(collectionScope,nextStage);
  }
}
