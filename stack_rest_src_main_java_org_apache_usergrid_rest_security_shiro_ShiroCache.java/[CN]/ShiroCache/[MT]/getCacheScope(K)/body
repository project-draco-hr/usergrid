{
  PrincipalIdentifier principal;
  if (key instanceof SimplePrincipalCollection) {
    SimplePrincipalCollection spc=(SimplePrincipalCollection)key;
    principal=(PrincipalIdentifier)spc.getPrimaryPrincipal();
  }
 else {
    principal=(PrincipalIdentifier)key;
  }
  UUID applicationId;
  if (principal instanceof UserPrincipal) {
    UserPrincipal p=(UserPrincipal)principal;
    applicationId=p.getApplicationId();
  }
 else   if (principal instanceof ApplicationPrincipal) {
    ApplicationPrincipal p=(ApplicationPrincipal)principal;
    applicationId=p.getApplicationId();
  }
 else   if (principal instanceof OrganizationPrincipal) {
    applicationId=CpNamingUtils.MANAGEMENT_APPLICATION_ID;
  }
 else   if (principal instanceof ApplicationGuestPrincipal) {
    ApplicationGuestPrincipal p=(ApplicationGuestPrincipal)principal;
    applicationId=p.getApplicationId();
  }
 else {
    logger.error("Unknown key type: " + key.getClass().getSimpleName());
    throw new RuntimeException("Unknown key type: " + principal.getClass().getSimpleName());
  }
  CacheScope scope=new CacheScope(new SimpleId(applicationId,"application"));
  ScopedCache<String,V> scopedCache=cacheFactory.getScopedCache(scope);
  return scopedCache;
}
