{
  UUID applicationId;
  if (key instanceof SimplePrincipalCollection) {
    SimplePrincipalCollection spc=(SimplePrincipalCollection)key;
    if (spc.getPrimaryPrincipal() instanceof UserPrincipal) {
      UserPrincipal p=(UserPrincipal)spc.getPrimaryPrincipal();
      applicationId=p.getApplicationId();
    }
 else     if (spc.getPrimaryPrincipal() instanceof ApplicationPrincipal) {
      ApplicationPrincipal p=(ApplicationPrincipal)spc.getPrimaryPrincipal();
      applicationId=p.getApplicationId();
    }
 else     if (spc.getPrimaryPrincipal() instanceof OrganizationPrincipal) {
      applicationId=CpNamingUtils.MANAGEMENT_APPLICATION_ID;
    }
 else     if (spc.getPrimaryPrincipal() instanceof ApplicationGuestPrincipal) {
      ApplicationGuestPrincipal p=(ApplicationGuestPrincipal)spc.getPrimaryPrincipal();
      applicationId=p.getApplicationId();
    }
 else {
      logger.error("Unknown principal type: " + spc.getPrimaryPrincipal().getClass().getSimpleName());
      throw new RuntimeException("Unknown principal type: " + spc.getPrimaryPrincipal().getClass().getSimpleName());
    }
  }
 else   if (key instanceof UserPrincipal) {
    UserPrincipal p=(UserPrincipal)key;
    applicationId=p.getApplicationId();
  }
 else   if (key instanceof ApplicationPrincipal) {
    ApplicationPrincipal p=(ApplicationPrincipal)key;
    applicationId=p.getApplicationId();
  }
 else   if (key instanceof OrganizationPrincipal) {
    applicationId=CpNamingUtils.MANAGEMENT_APPLICATION_ID;
  }
 else   if (key instanceof ApplicationGuestPrincipal) {
    ApplicationGuestPrincipal p=(ApplicationGuestPrincipal)key;
    applicationId=p.getApplicationId();
  }
 else {
    logger.error("Unknown key type: " + key.getClass().getSimpleName());
    throw new RuntimeException("Unknown key type: " + key.getClass().getSimpleName());
  }
  CacheScope scope=new CacheScope(new SimpleId(applicationId,"application"));
  ScopedCache<String,V> scopedCache=cacheFactory.getScopedCache(scope);
  return scopedCache;
}
