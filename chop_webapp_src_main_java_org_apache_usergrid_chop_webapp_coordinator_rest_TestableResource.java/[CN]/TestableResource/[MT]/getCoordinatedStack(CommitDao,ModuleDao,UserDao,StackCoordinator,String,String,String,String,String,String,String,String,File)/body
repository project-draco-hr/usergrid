{
  Commit commit=null;
  Module module=null;
  List<Commit> commits=commitDao.getByModule(artifactId);
  for (  Commit returnedCommit : commits) {
    Module commitModule=moduleDao.get(returnedCommit.getModuleId());
    if (commitModule.getArtifactId().equals(artifactId) && commitModule.getGroupId().equals(groupId) && commitModule.getVersion().equals(version)) {
      commit=returnedCommit;
      module=commitModule;
    }
  }
  if (module == null) {
    module=new BasicModule(groupId,artifactId,version,vcsRepoUrl,testPackage);
    moduleDao.save(module);
  }
  if (commit == null) {
    commit=new BasicCommit(commitId,module.getId(),md5,new Date(),runnerJar.getAbsolutePath());
    commitDao.save(commit);
  }
  Stack stack=CoordinatorUtils.getStackFromRunnerJar(runnerJar);
  User chopUser=userDao.get(username);
  CoordinatedStack coordinatedStack=stackCoordinator.getCoordinatedStack(stack,chopUser,commit,module);
  return coordinatedStack;
}
