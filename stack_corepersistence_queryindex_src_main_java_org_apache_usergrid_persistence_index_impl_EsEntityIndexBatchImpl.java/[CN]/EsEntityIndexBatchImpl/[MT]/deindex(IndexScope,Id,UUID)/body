{
  IndexValidationUtils.validateIndexScope(indexScope);
  ValidationUtils.verifyIdentity(id);
  ValidationUtils.verifyVersion(version);
  final String context=createContextName(indexScope);
  final String entityType=id.getType();
  final String indexId=createIndexDocId(id,version,context);
  if (log.isDebugEnabled()) {
    log.debug("De-indexing entity {}:{} in scope\n   app {}\n   owner {}\n   " + "name {} context{}, type {},",new Object[]{id.getType(),id.getUuid(),applicationScope.getApplication(),indexScope.getOwner(),indexScope.getName(),context,entityType});
  }
  log.debug("De-indexing type {} with documentId '{}'",entityType,indexId);
  final String[] indexes=entityIndex.getIndexes(EntityIndex.AliasType.Read);
  Observable.from(indexes).subscribeOn(Schedulers.io()).forEach(new Action1<String>(){
    @Override public void call(    String index){
      bulkRequest.add(client.prepareDelete(index,entityType,indexId).setRefresh(refresh));
    }
  }
);
  log.debug("Deindexed Entity with index id " + indexId);
  maybeFlush();
  return this;
}
