{
  QueryFilterParser.order_return retval=new QueryFilterParser.order_return();
  retval.start=input.LT(1);
  Object root_0=null;
  QueryFilterParser.property_return property53=null;
  QueryFilterParser.direction_return direction54=null;
  try {
{
      root_0=(Object)adaptor.nil();
{
        pushFollow(FOLLOW_property_in_order1074);
        property53=property();
        state._fsp--;
        adaptor.addChild(root_0,property53.getTree());
        int alt7=2;
switch (input.LA(1)) {
case 27:
case 29:
{
            alt7=1;
          }
        break;
    }
switch (alt7) {
case 1:
{
        pushFollow(FOLLOW_direction_in_order1076);
        direction54=direction();
        state._fsp--;
        adaptor.addChild(root_0,direction54.getTree());
      }
    break;
}
}
String property=(property53 != null ? input.toString(property53.start,property53.stop) : null);
String direction=(direction54 != null ? input.toString(direction54.start,direction54.stop) : null);
query.addSort(new SortPredicate(property,direction));
}
retval.stop=input.LT(-1);
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
