{
  QueryFilterParser.floatliteral_return retval=new QueryFilterParser.floatliteral_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token FLOAT6=null;
  Object FLOAT6_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      FLOAT6=(Token)match(input,FLOAT,FOLLOW_FLOAT_in_floatliteral747);
      FLOAT6_tree=new FloatLiteral(FLOAT6);
      adaptor.addChild(root_0,FLOAT6_tree);
    }
    retval.stop=input.LT(-1);
    retval.tree=(Object)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
