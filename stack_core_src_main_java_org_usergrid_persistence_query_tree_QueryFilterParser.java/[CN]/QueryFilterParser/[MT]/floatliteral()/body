{
  QueryFilterParser.floatliteral_return retval=new QueryFilterParser.floatliteral_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token FLOAT8=null;
  Object FLOAT8_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      FLOAT8=(Token)match(input,FLOAT,FOLLOW_FLOAT_in_floatliteral1080);
      FLOAT8_tree=new FloatLiteral(FLOAT8);
      adaptor.addChild(root_0,FLOAT8_tree);
    }
    retval.stop=input.LT(-1);
    retval.tree=(Object)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
  finally {
  }
  return retval;
}
