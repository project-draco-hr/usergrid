{
  QueryFilterParser.ql_return retval=new QueryFilterParser.ql_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token string_literal69=null;
  Token string_literal71=null;
  Token string_literal73=null;
  Token char_literal75=null;
  QueryFilterParser.select_expr_return select_expr70=null;
  QueryFilterParser.expression_return expression72=null;
  QueryFilterParser.order_return order74=null;
  QueryFilterParser.order_return order76=null;
  Object string_literal69_tree=null;
  Object string_literal71_tree=null;
  Object string_literal73_tree=null;
  Object char_literal75_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      int alt14=2;
switch (input.LA(1)) {
case 34:
{
          alt14=1;
        }
      break;
  }
switch (alt14) {
case 1:
{
      string_literal69=(Token)match(input,34,FOLLOW_34_in_ql1199);
      pushFollow(FOLLOW_select_expr_in_ql1202);
      select_expr70=select_expr();
      state._fsp--;
    }
  break;
}
int alt16=2;
switch (input.LA(1)) {
case ID:
case 21:
case 30:
case 35:
{
  alt16=1;
}
break;
}
switch (alt16) {
case 1:
{
int alt15=2;
switch (input.LA(1)) {
case 35:
{
  alt15=1;
}
break;
}
switch (alt15) {
case 1:
{
string_literal71=(Token)match(input,35,FOLLOW_35_in_ql1208);
}
break;
}
pushFollow(FOLLOW_expression_in_ql1212);
expression72=expression();
state._fsp--;
adaptor.addChild(root_0,expression72.getTree());
}
break;
}
int alt18=2;
switch (input.LA(1)) {
case 33:
{
alt18=1;
}
break;
}
switch (alt18) {
case 1:
{
string_literal73=(Token)match(input,33,FOLLOW_33_in_ql1217);
pushFollow(FOLLOW_order_in_ql1220);
order74=order();
state._fsp--;
loop17: do {
int alt17=2;
switch (input.LA(1)) {
case 24:
{
alt17=1;
}
break;
}
switch (alt17) {
case 1:
{
char_literal75=(Token)match(input,24,FOLLOW_24_in_ql1224);
pushFollow(FOLLOW_order_in_ql1227);
order76=order();
state._fsp--;
}
break;
default :
break loop17;
}
}
 while (true);
}
break;
}
if ((expression72 != null ? ((Object)expression72.tree) : null) instanceof Operand) {
query.setRootOperand((Operand)(expression72 != null ? ((Object)expression72.tree) : null));
}
retval.query=query;
}
retval.stop=input.LT(-1);
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
