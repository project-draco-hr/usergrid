{
  QueryFilterParser.ql_return retval=new QueryFilterParser.ql_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token string_literal46=null;
  Token string_literal48=null;
  Token string_literal50=null;
  Token char_literal52=null;
  QueryFilterParser.select_expr_return select_expr47=null;
  QueryFilterParser.expression_return expression49=null;
  QueryFilterParser.order_return order51=null;
  QueryFilterParser.order_return order53=null;
  Object string_literal46_tree=null;
  Object string_literal48_tree=null;
  Object string_literal50_tree=null;
  Object char_literal52_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      string_literal46=(Token)match(input,36,FOLLOW_36_in_ql1283);
      string_literal46_tree=(Object)adaptor.create(string_literal46);
      adaptor.addChild(root_0,string_literal46_tree);
      pushFollow(FOLLOW_select_expr_in_ql1285);
      select_expr47=select_expr();
      state._fsp--;
      adaptor.addChild(root_0,select_expr47.getTree());
      int alt11=2;
      int LA11_0=input.LA(1);
      if ((LA11_0 == 37)) {
        alt11=1;
      }
switch (alt11) {
case 1:
{
          string_literal48=(Token)match(input,37,FOLLOW_37_in_ql1288);
          string_literal48_tree=(Object)adaptor.create(string_literal48);
          adaptor.addChild(root_0,string_literal48_tree);
          pushFollow(FOLLOW_expression_in_ql1290);
          expression49=expression();
          state._fsp--;
          adaptor.addChild(root_0,expression49.getTree());
        }
      break;
  }
  int alt13=2;
  int LA13_0=input.LA(1);
  if ((LA13_0 == 38)) {
    alt13=1;
  }
switch (alt13) {
case 1:
{
      string_literal50=(Token)match(input,38,FOLLOW_38_in_ql1296);
      string_literal50_tree=(Object)adaptor.create(string_literal50);
      adaptor.addChild(root_0,string_literal50_tree);
      pushFollow(FOLLOW_order_in_ql1298);
      order51=order();
      state._fsp--;
      adaptor.addChild(root_0,order51.getTree());
      loop12:       do {
        int alt12=2;
        int LA12_0=input.LA(1);
        if ((LA12_0 == 23)) {
          alt12=1;
        }
switch (alt12) {
case 1:
{
            char_literal52=(Token)match(input,23,FOLLOW_23_in_ql1301);
            char_literal52_tree=(Object)adaptor.create(char_literal52);
            adaptor.addChild(root_0,char_literal52_tree);
            pushFollow(FOLLOW_order_in_ql1303);
            order53=order();
            state._fsp--;
            adaptor.addChild(root_0,order53.getTree());
          }
        break;
default :
      break loop12;
  }
}
 while (true);
}
break;
}
}
retval.stop=input.LT(-1);
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
