{
  QueryFilterParser.ql_return retval=new QueryFilterParser.ql_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token string_literal54=null;
  Token string_literal56=null;
  Token string_literal58=null;
  Token char_literal60=null;
  QueryFilterParser.select_expr_return select_expr55=null;
  QueryFilterParser.expression_return expression57=null;
  QueryFilterParser.order_return order59=null;
  QueryFilterParser.order_return order61=null;
  Object string_literal54_tree=null;
  Object string_literal56_tree=null;
  Object string_literal58_tree=null;
  Object char_literal60_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      string_literal54=(Token)match(input,36,FOLLOW_36_in_ql1099);
      string_literal54_tree=(Object)adaptor.create(string_literal54);
      adaptor.addChild(root_0,string_literal54_tree);
      pushFollow(FOLLOW_select_expr_in_ql1101);
      select_expr55=select_expr();
      state._fsp--;
      adaptor.addChild(root_0,select_expr55.getTree());
      int alt10=2;
      int LA10_0=input.LA(1);
      if ((LA10_0 == 37)) {
        alt10=1;
      }
switch (alt10) {
case 1:
{
          string_literal56=(Token)match(input,37,FOLLOW_37_in_ql1104);
          string_literal56_tree=(Object)adaptor.create(string_literal56);
          adaptor.addChild(root_0,string_literal56_tree);
          pushFollow(FOLLOW_expression_in_ql1106);
          expression57=expression();
          state._fsp--;
          adaptor.addChild(root_0,expression57.getTree());
        }
      break;
  }
  int alt12=2;
  int LA12_0=input.LA(1);
  if ((LA12_0 == 38)) {
    alt12=1;
  }
switch (alt12) {
case 1:
{
      string_literal58=(Token)match(input,38,FOLLOW_38_in_ql1112);
      string_literal58_tree=(Object)adaptor.create(string_literal58);
      adaptor.addChild(root_0,string_literal58_tree);
      pushFollow(FOLLOW_order_in_ql1114);
      order59=order();
      state._fsp--;
      adaptor.addChild(root_0,order59.getTree());
      loop11:       do {
        int alt11=2;
        int LA11_0=input.LA(1);
        if ((LA11_0 == 23)) {
          alt11=1;
        }
switch (alt11) {
case 1:
{
            char_literal60=(Token)match(input,23,FOLLOW_23_in_ql1117);
            char_literal60_tree=(Object)adaptor.create(char_literal60);
            adaptor.addChild(root_0,char_literal60_tree);
            pushFollow(FOLLOW_order_in_ql1119);
            order61=order();
            state._fsp--;
            adaptor.addChild(root_0,order61.getTree());
          }
        break;
default :
      break loop11;
  }
}
 while (true);
}
break;
}
}
retval.stop=input.LT(-1);
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
