{
  QueryFilterParser.ql_return retval=new QueryFilterParser.ql_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token string_literal51=null;
  Token string_literal53=null;
  Token string_literal55=null;
  Token char_literal57=null;
  QueryFilterParser.select_expr_return select_expr52=null;
  QueryFilterParser.expression_return expression54=null;
  QueryFilterParser.order_return order56=null;
  QueryFilterParser.order_return order58=null;
  Object string_literal51_tree=null;
  Object string_literal53_tree=null;
  Object string_literal55_tree=null;
  Object char_literal57_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      string_literal51=(Token)match(input,36,FOLLOW_36_in_ql1071);
      string_literal51_tree=(Object)adaptor.create(string_literal51);
      adaptor.addChild(root_0,string_literal51_tree);
      pushFollow(FOLLOW_select_expr_in_ql1073);
      select_expr52=select_expr();
      state._fsp--;
      adaptor.addChild(root_0,select_expr52.getTree());
      int alt9=2;
      int LA9_0=input.LA(1);
      if ((LA9_0 == 37)) {
        alt9=1;
      }
switch (alt9) {
case 1:
{
          string_literal53=(Token)match(input,37,FOLLOW_37_in_ql1076);
          string_literal53_tree=(Object)adaptor.create(string_literal53);
          adaptor.addChild(root_0,string_literal53_tree);
          pushFollow(FOLLOW_expression_in_ql1078);
          expression54=expression();
          state._fsp--;
          adaptor.addChild(root_0,expression54.getTree());
        }
      break;
  }
  int alt11=2;
  int LA11_0=input.LA(1);
  if ((LA11_0 == 38)) {
    alt11=1;
  }
switch (alt11) {
case 1:
{
      string_literal55=(Token)match(input,38,FOLLOW_38_in_ql1084);
      string_literal55_tree=(Object)adaptor.create(string_literal55);
      adaptor.addChild(root_0,string_literal55_tree);
      pushFollow(FOLLOW_order_in_ql1086);
      order56=order();
      state._fsp--;
      adaptor.addChild(root_0,order56.getTree());
      loop10:       do {
        int alt10=2;
        int LA10_0=input.LA(1);
        if ((LA10_0 == 23)) {
          alt10=1;
        }
switch (alt10) {
case 1:
{
            char_literal57=(Token)match(input,23,FOLLOW_23_in_ql1089);
            char_literal57_tree=(Object)adaptor.create(char_literal57);
            adaptor.addChild(root_0,char_literal57_tree);
            pushFollow(FOLLOW_order_in_ql1091);
            order58=order();
            state._fsp--;
            adaptor.addChild(root_0,order58.getTree());
          }
        break;
default :
      break loop10;
  }
}
 while (true);
}
break;
}
}
retval.stop=input.LT(-1);
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
