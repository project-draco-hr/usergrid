{
  QueryFilterParser.select_assign_return retval=new QueryFilterParser.select_assign_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token target=null;
  Token source=null;
  Token char_literal56=null;
  Object target_tree=null;
  Object source_tree=null;
  Object char_literal56_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      target=(Token)match(input,ID,FOLLOW_ID_in_select_assign1116);
      target_tree=(Object)adaptor.create(target);
      adaptor.addChild(root_0,target_tree);
      char_literal56=(Token)match(input,25,FOLLOW_25_in_select_assign1118);
      char_literal56_tree=(Object)adaptor.create(char_literal56);
      adaptor.addChild(root_0,char_literal56_tree);
      source=(Token)match(input,ID,FOLLOW_ID_in_select_assign1122);
      source_tree=(Object)adaptor.create(source);
      adaptor.addChild(root_0,source_tree);
      query.addSelect((target != null ? target.getText() : null),(source != null ? source.getText() : null));
    }
    retval.stop=input.LT(-1);
    retval.tree=(Object)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
