{
  QueryFilterParser.select_assign_return retval=new QueryFilterParser.select_assign_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token char_literal43=null;
  QueryFilterParser.select_assign_target_return select_assign_target42=null;
  QueryFilterParser.select_assign_source_return select_assign_source44=null;
  Object char_literal43_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_select_assign_target_in_select_assign1031);
      select_assign_target42=select_assign_target();
      state._fsp--;
      adaptor.addChild(root_0,select_assign_target42.getTree());
      char_literal43=(Token)match(input,32,FOLLOW_32_in_select_assign1033);
      char_literal43_tree=(Object)adaptor.create(char_literal43);
      adaptor.addChild(root_0,char_literal43_tree);
      pushFollow(FOLLOW_select_assign_source_in_select_assign1035);
      select_assign_source44=select_assign_source();
      state._fsp--;
      adaptor.addChild(root_0,select_assign_source44.getTree());
      query.addSelect((select_assign_source44 != null ? input.toString(select_assign_source44.start,select_assign_source44.stop) : null),(select_assign_target42 != null ? input.toString(select_assign_target42.start,select_assign_target42.stop) : null));
    }
    retval.stop=input.LT(-1);
    retval.tree=(Object)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
