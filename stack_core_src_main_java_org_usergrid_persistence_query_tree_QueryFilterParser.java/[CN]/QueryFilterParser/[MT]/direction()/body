{
  QueryFilterParser.direction_return retval=new QueryFilterParser.direction_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token set57=null;
  Object set57_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      set57=(Token)input.LT(1);
      if (input.LA(1) == ASC || input.LA(1) == DESC) {
        input.consume();
        adaptor.addChild(root_0,(Object)adaptor.create(set57));
        state.errorRecovery=false;
      }
 else {
        MismatchedSetException mse=new MismatchedSetException(null,input);
        throw mse;
      }
    }
    retval.stop=input.LT(-1);
    retval.tree=(Object)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
  finally {
  }
  return retval;
}
