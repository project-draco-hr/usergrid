{
  QueryFilterParser.containsop_return retval=new QueryFilterParser.containsop_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token CONTAINS40=null;
  QueryFilterParser.containsproperty_return containsproperty39=null;
  QueryFilterParser.stringliteral_return stringliteral41=null;
  Object CONTAINS40_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_containsproperty_in_containsop1263);
      containsproperty39=containsproperty();
      state._fsp--;
      adaptor.addChild(root_0,containsproperty39.getTree());
      CONTAINS40=(Token)match(input,CONTAINS,FOLLOW_CONTAINS_in_containsop1265);
      CONTAINS40_tree=new ContainsOperand(CONTAINS40);
      root_0=(Object)adaptor.becomeRoot(CONTAINS40_tree,root_0);
      pushFollow(FOLLOW_stringliteral_in_containsop1271);
      stringliteral41=stringliteral();
      state._fsp--;
      adaptor.addChild(root_0,stringliteral41.getTree());
    }
    retval.stop=input.LT(-1);
    retval.tree=(Object)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
  finally {
  }
  return retval;
}
