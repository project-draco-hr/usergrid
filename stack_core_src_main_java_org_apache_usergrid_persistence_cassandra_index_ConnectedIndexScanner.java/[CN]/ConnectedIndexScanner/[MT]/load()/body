{
  if (!hasMore) {
    return false;
  }
  boolean skipFirst=this.skipFirst && start == scanStart;
  int totalSelectSize=pageSize + 1;
  if (skipFirst) {
    totalSelectSize++;
  }
  while (currentConnectionType != null) {
    int selectSize=totalSelectSize - lastResults.size();
    Object key=key(entityId,dictionaryType,currentConnectionType);
    List<HColumn<ByteBuffer,ByteBuffer>> results=cass.getColumns(cass.getApplicationKeyspace(applicationId),ENTITY_COMPOSITE_DICTIONARIES,key,start,null,selectSize,reversed);
    final int resultSize=results.size();
    lastResults=results;
    if (resultSize == selectSize) {
      hasMore=true;
      break;
    }
 else {
      if (!connectionTypes.hasNext()) {
        hasMore=false;
        currentConnectionType=null;
        break;
      }
      currentConnectionType=connectionTypes.next();
    }
  }
  if (skipFirst && lastResults != null && lastResults.size() > 0) {
    lastResults.remove(0);
  }
  if (hasMore && lastResults != null && lastResults.size() > 0) {
    lastResults.remove(lastResults.size() - 1);
  }
  return lastResults != null && lastResults.size() > 0;
}
