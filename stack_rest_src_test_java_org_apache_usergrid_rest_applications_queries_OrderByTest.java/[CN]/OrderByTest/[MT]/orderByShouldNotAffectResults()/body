{
  long created=0;
  Entity actor=new Entity();
  actor.put("displayName","Erin");
  Entity props=new Entity();
  props.put("actor",actor);
  props.put("verb","go");
  props.put("content","bragh");
  for (int i=0; i < 20; i++) {
    props.put("ordinal",i);
    Entity activity=this.app().collection("activity").post(props);
    log.info("Created",activity.get("created").toString());
    if (i == 5) {
      created=Long.parseLong(activity.get("created").toString());
    }
  }
  refreshIndex();
  String query="select * where created > " + created;
  QueryParameters params=new QueryParameters().setQuery(query);
  Collection activitiesWithoutOrderBy=this.app().collection("activities").get(params);
  assertEquals(10,activitiesWithoutOrderBy.response.getEntityCount());
  query=query + " order by created desc";
  params.setQuery(query);
  Collection activitiesWithOrderBy=this.app().collection("activities").get(params);
  assertEquals(10,activitiesWithOrderBy.response.getEntityCount());
  while (activitiesWithoutOrderBy.hasNext() && activitiesWithOrderBy.hasNext()) {
    Entity activityWithoutOrderBy=activitiesWithoutOrderBy.next();
    Entity activityWithOrderBy=activitiesWithOrderBy.next();
    assertEquals(activityWithoutOrderBy.get("uuid").toString(),activityWithOrderBy.get("uuid").toString());
  }
}
