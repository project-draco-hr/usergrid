{
  CustomCollection activities=context.customCollection("activities");
  int size=200;
  Map<String,String> actor=hashMap("displayName","Erin");
  Map<String,Object> props=new HashMap<String,Object>();
  props.put("actor",actor);
  props.put("verb","go");
  props.put("content","bragh");
  List<JsonNode> activites=new ArrayList<JsonNode>(size);
  for (int i=0; i < size; i++) {
    props.put("ordinal",i);
    JsonNode activity=activities.create(props).get("entities").get(0);
    activites.add(activity);
  }
  refreshIndex(context.getOrgName(),context.getAppName());
  long lastCreated=activites.get(activites.size() - 1).get("created").asLong();
  String errorQuery=String.format("select * where created <= %d order by created desc",lastCreated);
  String cursor=null;
  int index=size - 1;
  do {
    JsonNode response=activities.withQuery(errorQuery).get();
    JsonNode cursorNode=response.get("cursor");
    cursor=cursorNode != null ? cursorNode.asText() : null;
    JsonNode entities=response.get("entities");
    int returnSize=entities.size();
    for (int i=0; i < returnSize; i++, index--) {
      assertEquals(activites.get(index),entities.get(i));
    }
    activities=activities.withCursor(cursor);
  }
 while (cursor != null && cursor.length() > 0);
  assertEquals("Paged to last result",-1,index);
}
