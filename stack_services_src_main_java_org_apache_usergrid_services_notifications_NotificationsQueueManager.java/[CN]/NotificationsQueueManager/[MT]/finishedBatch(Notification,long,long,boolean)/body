{
  if (LOG.isDebugEnabled()) {
    StringBuilder sb=new StringBuilder();
    sb.append("finishedBatch ").append(notification.getUuid());
    sb.append(" successes: ").append(successes);
    sb.append(" failures: ").append(failures);
    LOG.info(sb.toString());
  }
  notification=em.get(notification,Notification.class);
  notification.updateStatistics(successes,failures);
  notification.setModified(System.currentTimeMillis());
  Map<String,Object> properties=new HashMap<String,Object>(4);
  properties.put("statistics",notification.getStatistics());
  properties.put("modified",notification.getModified());
  if (isNotificationDeliveryComplete(notification) || overrideComplete) {
    notification.setFinished(notification.getModified());
    properties.put("finished",notification.getModified());
    properties.put("state",notification.getState());
    long elapsed=notification.getFinished() - notification.getStarted();
    long sent=notification.getStatistics().get("sent");
    long errors=notification.getStatistics().get("errors");
    if (LOG.isInfoEnabled()) {
      StringBuilder sb=new StringBuilder();
      sb.append("notification ").append(notification.getUuid());
      sb.append(" done sending to ").append(sent + errors);
      sb.append(" devices in ").append(elapsed).append(" ms");
      LOG.info(sb.toString());
    }
  }
 else {
    LOG.info("notification finished batch: {}",notification.getUuid());
  }
  em.updateProperties(notification,properties);
  Set<Notifier> notifiers=new HashSet<Notifier>(getNotifierMap().values());
  asyncCheckForInactiveDevices(notifiers);
}
