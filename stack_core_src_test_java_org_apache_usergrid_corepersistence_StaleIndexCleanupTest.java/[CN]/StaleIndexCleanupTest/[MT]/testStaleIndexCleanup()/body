{
  logger.info("Started testStaleIndexCleanup()");
  final EntityManager em=app.getEntityManager();
  final int numEntities=100;
  final int numUpdates=5;
  final List<Entity> things=new ArrayList<Entity>();
  for (int i=0; i < numEntities; i++) {
    final String thingName="thing" + i;
    things.add(em.create("thing",new HashMap<String,Object>(){
{
        put("name",thingName);
      }
    }
));
    Thread.sleep(writeDelayMs);
  }
  em.refreshIndex();
  CandidateResults crs=queryCollectionCp("things","select *");
  Assert.assertEquals("Expect no stale candidates yet",numEntities,crs.size());
  int count=0;
  for (  Entity thing : things) {
    for (int j=0; j < numUpdates; j++) {
      Entity toUpdate=em.get(thing.getUuid());
      thing.setProperty("property" + j,RandomStringUtils.randomAlphanumeric(10));
      em.update(toUpdate);
      Thread.sleep(writeDelayMs);
      count++;
      if (count % 100 == 0) {
        logger.info("Updated {} of {} times",count,numEntities * numUpdates);
      }
    }
  }
  em.refreshIndex();
  crs=queryCollectionCp("things","select *");
  Assert.assertEquals("Expect stale candidates",numEntities * (numUpdates + 1),crs.size());
  Query q=Query.fromQL("select *");
  q.setLimit(8);
  int thingCount=0;
  String cursor=null;
  do {
    Results results=em.searchCollection(em.getApplicationRef(),"things",q);
    cursor=results.getCursor();
    if (cursor != null) {
      assertEquals(8,results.size());
    }
    thingCount+=results.size();
  }
 while (cursor != null);
  assertEquals("Expect no stale candidates",numEntities,thingCount);
  Thread.sleep(600);
  crs=queryCollectionCp("things","select *");
  Assert.assertEquals("Expect stale candidates de-indexed",numEntities,crs.size());
}
