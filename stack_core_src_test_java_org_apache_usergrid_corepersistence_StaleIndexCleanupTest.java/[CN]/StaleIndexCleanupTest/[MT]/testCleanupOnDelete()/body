{
  logger.info("Started testStaleIndexCleanup()");
  System.setProperty(EVENTS_DISABLED,"true");
  final EntityManager em=app.getEntityManager();
  final int numEntities=5;
  final int numUpdates=5;
  final List<Entity> things=new ArrayList<Entity>(numEntities);
  for (int i=0; i < numEntities; i++) {
    final String thingName="thing" + i;
    things.add(em.create("thing",new HashMap<String,Object>(){
{
        put("name",thingName);
      }
    }
));
    Thread.sleep(writeDelayMs);
  }
  app.refreshIndex();
  CandidateResults crs=queryCollectionCp("things","thing","select *");
  Assert.assertEquals("Expect no stale candidates yet",numEntities,crs.size());
  int count=0;
  List<Entity> maxVersions=new ArrayList<>(numEntities);
  for (  Entity thing : things) {
    Entity toUpdate=null;
    for (int j=0; j < numUpdates; j++) {
      toUpdate=em.get(thing.getUuid());
      toUpdate.setProperty("property" + j,UUID.randomUUID().toString());
      em.update(toUpdate);
      count++;
      if (count % 100 == 0) {
        logger.info("Updated {} of {} times",count,numEntities * numUpdates);
      }
    }
    maxVersions.add(toUpdate);
  }
  em.refreshIndex();
  for (int i=0; i < 10; i++) {
    if (numEntities * (numUpdates + 1) == crs.size()) {
      break;
    }
    crs=queryCollectionCp("things","thing","select *");
  }
  System.setProperty(EVENTS_DISABLED,"false");
  for (  Entity thing : things) {
    em.delete(thing);
  }
  Thread.sleep(250);
  app.refreshIndex();
  Thread.sleep(250);
  Results results=null;
  count=0;
  do {
    results=queryCollectionEm("things","select *");
    crs=queryCollectionCp("things","thing","select *");
  }
 while ((results.hasCursor() || crs.size() > 0) && count++ < 2000);
  Assert.assertEquals("Expect no candidates",0,crs.size());
}
