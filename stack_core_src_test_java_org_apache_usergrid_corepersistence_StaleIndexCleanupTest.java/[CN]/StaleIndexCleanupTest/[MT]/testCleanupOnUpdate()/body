{
  logger.info("Started testCleanupOnUpdate()");
  System.setProperty(EVENTS_DISABLED,"true");
  final EntityManager em=app.getEntityManager();
  final int numEntities=10;
  final int numUpdates=5;
  final List<Entity> dogs=new ArrayList<Entity>(numEntities);
  for (int i=0; i < numEntities; i++) {
    final String dogName="dog" + i;
    dogs.add(em.create("dog",new HashMap<String,Object>(){
{
        put("name",dogName);
      }
    }
));
  }
  em.refreshIndex();
  CandidateResults crs=queryCollectionCp("dogs","dog","select *");
  Assert.assertEquals("Expect no stale candidates yet",numEntities,crs.size());
  System.setProperty(EVENTS_DISABLED,"false");
  List<Entity> maxVersions=new ArrayList<>(numEntities);
  int count=0;
  for (  Entity dog : dogs) {
    Entity toUpdate=null;
    for (int j=0; j < numUpdates; j++) {
      toUpdate=em.get(dog.getUuid());
      toUpdate.setProperty("property" + j,RandomStringUtils.randomAlphanumeric(10));
      em.update(toUpdate);
      count++;
      if (count % 100 == 0) {
        logger.info("Updated {} of {} times",count,numEntities * numUpdates);
      }
    }
    maxVersions.add(toUpdate);
  }
  em.refreshIndex();
  count=0;
  do {
    Thread.sleep(100);
    crs=queryCollectionCp("dogs","dog","select *");
  }
 while (crs.size() == numEntities && count++ < 15);
  Assert.assertEquals("Expect candidates without earlier stale entities",crs.size(),numEntities);
}
