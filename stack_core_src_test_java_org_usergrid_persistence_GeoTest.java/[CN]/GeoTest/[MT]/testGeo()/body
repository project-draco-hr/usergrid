{
  logger.info("GeoTest.testGeo");
  UUID applicationId=createApplication("testOrganization","testGeo");
  assertNotNull(applicationId);
  EntityManager em=emf.getEntityManager(applicationId);
  assertNotNull(em);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  Entity user=em.create("user",properties);
  assertNotNull(user);
  EntityLocationRef loc=new EntityLocationRef(user,37.776753,-122.407846);
  GeoIndexManager geo=em.getGeoIndexManager();
  geo.storeLocationInCollectionIndex(em.getApplicationRef(),"users",user.getUuid(),"location.coordinates",loc);
  Point center=new Point(37.774277,-122.404744);
  List<EntityLocationRef> listResults=geo.proximitySearchCollection(em.getApplicationRef(),"users","location.coordinates",center,200,null,10,false,ALL_PROPERTIES);
  assertEquals(0,listResults.size());
  listResults=geo.proximitySearchCollection(em.getApplicationRef(),"users","location.coordinates",center,400,null,10,false,ALL_PROPERTIES);
  this.dump(listResults);
  assertEquals(1,listResults.size());
  geo.removeLocationFromCollectionIndex(em.getApplicationRef(),"users","location.coordinates",loc);
  listResults=geo.proximitySearchCollection(em.getApplicationRef(),"users","location.coordinates",center,400,null,10,false,ALL_PROPERTIES);
  this.dump(listResults);
  assertEquals(0,listResults.size());
  updatePos(em,user,37.426373,-122.14108);
  center=new Point(37.774277,-122.404744);
  listResults=geo.proximitySearchCollection(em.getApplicationRef(),"users","location.coordinates",center,200,null,10,false,ALL_PROPERTIES);
  assertEquals(0,listResults.size());
  updatePos(em,user,37.774277,-122.404744);
  center=new Point(37.776753,-122.407846);
  listResults=geo.proximitySearchCollection(em.getApplicationRef(),"users","location.coordinates",center,1000,null,10,false,ALL_PROPERTIES);
  assertEquals(1,listResults.size());
  listResults=geo.proximitySearchCollection(em.getApplicationRef(),"users","location.coordinates",center,Integer.MAX_VALUE,null,10,false,ALL_PROPERTIES);
  assertEquals(1,listResults.size());
  LinkedHashMap<String,Object> properties2=new LinkedHashMap<String,Object>();
  properties2.put("username","sganyo");
  properties2.put("email","sganyo@anuff.com");
  Entity user2=em.create("user",properties2);
  assertNotNull(user2);
  EntityLocationRef loc2=new EntityLocationRef(user2,31.1,121.2);
  geo.storeLocationInCollectionIndex(em.getApplicationRef(),"users",user2.getUuid(),"location.coordinates",loc2);
  listResults=geo.proximitySearchCollection(em.getApplicationRef(),"users","location.coordinates",center,10000,null,10,false,ALL_PROPERTIES);
  assertEquals(1,listResults.size());
  listResults=geo.proximitySearchCollection(em.getApplicationRef(),"users","location.coordinates",center,Integer.MAX_VALUE,null,10,false,ALL_PROPERTIES);
  assertEquals(2,listResults.size());
  center=new Point(31.14,121.27);
  listResults=geo.proximitySearchCollection(em.getApplicationRef(),"users","location.coordinates",center,Integer.MAX_VALUE,null,10,false,ALL_PROPERTIES);
  assertEquals(2,listResults.size());
  Results searchResults=em.searchCollection(em.getApplicationRef(),"users",Query.fromQL("location within 1000 of 37.776753, -122.407846"));
  assertEquals(1,searchResults.size());
  updatePos(em,user,37.776753,-122.407846);
  center=new Point(37.428526,-122.140916);
  listResults=geo.proximitySearchCollection(em.getApplicationRef(),"users","location.coordinates",center,1000,null,10,false,ALL_PROPERTIES);
  assertEquals(0,listResults.size());
  searchResults=em.searchCollection(em.getApplicationRef(),"users",Query.fromQL("location within 1000 of 37.428526, -122.140916"));
  assertEquals(0,searchResults.size());
  properties=new LinkedHashMap<String,Object>();
  properties.put("name","Brickhouse");
  properties.put("address","426 Brannan Street");
  properties.put("location",getLocation(37.779632,-122.395131));
  Entity restaurant=em.create("restaurant",properties);
  assertNotNull(restaurant);
  em.createConnection(user,"likes",restaurant);
  searchResults=em.searchConnectedEntities(user,Query.fromQL("location within 2000 of 37.776753, -122.407846"));
  assertEquals(1,searchResults.size());
  searchResults=em.searchConnectedEntities(user,Query.fromQL("location within 1000 of 37.776753, -122.407846"));
  assertEquals(0,searchResults.size());
}
