{
  super.init(info);
  smf=getApplicationContext().getBean(ServiceManagerFactory.class);
  emf=getApplicationContext().getBean(EntityManagerFactory.class);
  Properties props=(Properties)getApplicationContext().getBean("properties");
  metricsService=getApplicationContext().getBean(MetricsFactory.class);
  postMeter=metricsService.getMeter(NotificationsService.class,"requests");
  postTimer=metricsService.getTimer(this.getClass(),"execution_rest");
  JobScheduler jobScheduler=new JobScheduler(sm,em);
  String name=ApplicationQueueManager.getQueueNames(props);
  QueueScopeFactory queueScopeFactory=CpSetup.getInjector().getInstance(QueueScopeFactory.class);
  QueueScope queueScope=queueScopeFactory.getScope(smf.getManagementAppId(),name);
  queueManagerFactory=CpSetup.getInjector().getInstance(QueueManagerFactory.class);
  QueueManager queueManager=TEST_QUEUE_MANAGER != null ? TEST_QUEUE_MANAGER : queueManagerFactory.getQueueManager(queueScope);
  notificationQueueManager=new ApplicationQueueManager(jobScheduler,em,queueManager,metricsService,props);
  gracePeriod=jobScheduler.SCHEDULER_GRACE_PERIOD;
}
