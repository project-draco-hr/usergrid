{
  for (  String dupName : duplicatesByName.keySet()) {
    Set<Org> duplicateOrgs=duplicatesByName.get(dupName);
    Org bestOrg=manager.selectBest(duplicateOrgs);
    for (    Org org : duplicateOrgs) {
      if (!org.equals(bestOrg)) {
        Set<OrgUser> orgUsers=new HashSet<OrgUser>(manager.getOrgUsers(org));
        for (        OrgUser user : orgUsers) {
          if (dryRun) {
            Object[] args=new Object[]{user.getUsername(),user.getId(),bestOrg.getName(),bestOrg.getId()};
            logger.info("Would add user {}:{} to org {}:{}",args);
            args=new Object[]{user.getUsername(),user.getId(),org.getName(),org.getId()};
            logger.info("Would remove user {}:{}  org {}:{}",args);
          }
 else {
            try {
              manager.addUserToOrg(user,bestOrg);
            }
 catch (            Exception e) {
              Object[] args=new Object[]{user.getUsername(),user.getId(),bestOrg.getName(),bestOrg.getId()};
              logger.error("Error adding user {}:{} to org {}:{}",args);
            }
            try {
              manager.removeUserFromOrg(user,org);
            }
 catch (            Exception e) {
              Object[] args=new Object[]{user.getUsername(),user.getId(),org.getName(),org.getId()};
              logger.info("Error removing user {}:{}  org {}:{}",args);
            }
          }
        }
        Set<UUID> orgApps=new HashSet<UUID>(manager.getOrgApps(org));
        for (        UUID appId : orgApps) {
          if (dryRun) {
            Object[] args=new Object[]{appId,bestOrg.getName(),bestOrg.getId()};
            logger.info("Would add app {} to org {}:{}",args);
            args=new Object[]{appId,org.getName(),org.getId()};
            logger.info("Would remove app {} org {}:{}",args);
          }
 else {
            try {
              manager.addAppToOrg(appId,bestOrg);
            }
 catch (            Exception e) {
              Object[] args=new Object[]{appId,bestOrg.getName(),bestOrg.getId()};
              logger.error("Error adding app {} to org {}:{}",args);
            }
            try {
              manager.removeAppFromOrg(appId,org);
            }
 catch (            Exception e) {
              Object[] args=new Object[]{appId,org.getName(),org.getId()};
              logger.info("Error removing app {} org {}:{}",args);
            }
          }
        }
      }
    }
  }
  logger.info("DuplicateOrgRepair merged duplicate orgs");
}
