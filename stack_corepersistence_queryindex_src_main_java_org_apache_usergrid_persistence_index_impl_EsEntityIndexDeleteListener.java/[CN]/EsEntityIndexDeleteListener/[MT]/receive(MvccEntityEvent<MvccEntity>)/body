{
  return Observable.create(new ObservableIterator<MvccEntity>("deleteEsIndexVersions"){
    @Override protected Iterator<MvccEntity> getIterator(){
      Results results=entityIndex.getEntityVersions(event.getData().getId(),event.getVersion(),event.getCollectionScope());
      Iterator<MvccEntity> iterator=Collections.emptyListIterator();
      if (results != null) {
        List<Entity> entities=results.getEntities();
        List<MvccEntity> mvccEntities=new ArrayList<>();
        for (        Entity entity : entities) {
          mvccEntities.add(new EsMvccEntityImpl(entity));
        }
        iterator=mvccEntities.iterator();
      }
      return iterator;
    }
  }
).subscribeOn(Schedulers.io()).buffer(serializationFig.getBufferSize()).flatMap(new Func1<List<MvccEntity>,Observable<MvccEntity>>(){
    @Override public Observable<MvccEntity> call(    List<MvccEntity> entities){
      for (      MvccEntity entity : entities) {
        entityIndex.deindex(event.getCollectionScope(),entity.getEntity().get());
      }
      return Observable.from(entities);
    }
  }
);
}
