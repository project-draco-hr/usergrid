{
  if (logger.isTraceEnabled()) {
    logger.trace("Notifiers.executeMultiPartPost");
  }
  String certInfoParam=getValueOrNull(multiPart,"certInfo");
  if (certInfoParam != null) {
    throw new IllegalArgumentException("Cannot create or update with certInfo parameter.  It is derived.");
  }
  String name=getValueOrNull(multiPart,"name");
  String provider=getValueOrNull(multiPart,"provider");
  String environment=getValueOrNull(multiPart,"environment");
  String certPassword=getValueOrNull(multiPart,"certificatePassword");
  InputStream is=null;
  Map<String,Object> certAttributes=null;
  String filename=null;
  byte[] certBytes=null;
  if (multiPart.getField("p12Certificate") != null) {
    filename=multiPart.getField("p12Certificate").getContentDisposition().getFileName();
    is=multiPart.getField("p12Certificate").getEntityAs(InputStream.class);
    if (is != null) {
      certBytes=IOUtils.toByteArray(is);
      certAttributes=CertificateUtils.getCertAtrributes(certBytes,certPassword);
    }
  }
 else {
    throw new IllegalArgumentException("Certificate is invalid .p12 file or incorrect certificatePassword");
  }
  if (!CertificateUtils.isValid(certAttributes)) {
    throw new IllegalArgumentException("p12Certificate is expired.");
  }
  HashMap<String,Object> certProps=new LinkedHashMap<String,Object>();
  certProps.put("name",name);
  certProps.put("provider",provider);
  certProps.put("environment",environment);
  certProps.put("certificatePassword",certPassword);
  if (certBytes != null && certBytes.length > 0) {
    certProps.put("p12Certificate",certBytes);
  }
  HashMap<String,Object> certInfo=new LinkedHashMap<String,Object>();
  if (certAttributes != null) {
    certInfo.put("filename",filename);
    certInfo.put("details",certAttributes);
  }
  certProps.put("certInfo",certInfo);
  ApiResponse response=createApiResponse();
  response.setAction("post");
  response.setApplication(services.getApplication());
  response.setParams(ui.getQueryParameters());
  ServicePayload payload=getPayload(certProps);
  executeServiceRequest(ui,response,ServiceAction.POST,payload);
  return response;
}
