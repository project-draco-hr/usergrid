{
  List<A> entities=new ArrayList<A>();
  if ((entityIds == null) || (entityIds.size() == 0)) {
    return entities;
  }
  Map<UUID,A> resultSet=new LinkedHashMap<UUID,A>();
  Rows<UUID,String,ByteBuffer> results=null;
  results=cass.getRows(cass.getApplicationKeyspace(applicationId),ENTITY_PROPERTIES,entityIds,ue,se,be);
  if (results != null) {
    for (    UUID key : entityIds) {
      Map<String,Object> properties=deserializeEntityProperties(results.getByKey(key));
      UUID id=uuid(properties.get(PROPERTY_UUID));
      String type=string(properties.get(PROPERTY_TYPE));
      if ((id == null) || (type == null)) {
        continue;
      }
      A entity=EntityFactory.newEntity(id,type,entityClass);
      entity.setProperties(properties);
      resultSet.put(id,entity);
    }
    for (    UUID entityId : entityIds) {
      A entity=resultSet.get(entityId);
      entities.add(entity);
    }
  }
  return entities;
}
