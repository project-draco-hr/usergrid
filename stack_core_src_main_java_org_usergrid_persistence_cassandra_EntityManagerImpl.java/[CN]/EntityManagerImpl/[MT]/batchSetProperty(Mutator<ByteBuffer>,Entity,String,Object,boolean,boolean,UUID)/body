{
  long timestamp=getTimestampInMicros(timestampUuid);
  boolean entitySchemaHasProperty=getDefaultSchema().hasProperty(entity.getType(),propertyName);
  propertyValue=getDefaultSchema().validateEntityPropertyValue(entity.getType(),propertyName,propertyValue);
  if (PROPERTY_TYPE.equalsIgnoreCase(propertyName) && (propertyValue != null)) {
    if ("entity".equalsIgnoreCase(propertyValue.toString()) || "dynamicentity".equalsIgnoreCase(propertyValue.toString())) {
      String errorMsg="Unable to dictionary entity type to " + propertyValue + " because that is not a valid type.";
      logger.error(errorMsg);
      throw new IllegalArgumentException(errorMsg);
    }
  }
  if (entitySchemaHasProperty) {
    if (!force) {
      if (!getDefaultSchema().isPropertyMutable(entity.getType(),propertyName)) {
        return batch;
      }
      if ((propertyValue == null) && getDefaultSchema().isRequiredProperty(entity.getType(),propertyName)) {
        return batch;
      }
    }
    if (!isPropertyValueUniqueForEntity(entity.getUuid(),entity.getType(),propertyName,propertyValue)) {
      throw new DuplicateUniquePropertyExistsException(entity.getType(),propertyName,propertyValue);
    }
    if (propertyName.equals(Schema.getDefaultSchema().aliasProperty(entity.getType()))) {
      cass.getLockManager().lockProperty(applicationId,entity.getType(),propertyName);
      deleteAliasesForEntity(entity.getUuid());
      createAlias(applicationId,entity,entity.getType(),string(propertyValue));
      cass.getLockManager().unlockProperty(applicationId,entity.getType(),propertyName);
    }
  }
  if (getDefaultSchema().isPropertyIndexed(entity.getType(),propertyName)) {
    getRelationManager(entity).batchUpdatePropertyIndexes(batch,propertyName,propertyValue,entitySchemaHasProperty,noRead,timestampUuid);
  }
  if (propertyValue != null) {
    addPropertyToMutator(batch,key(entity.getUuid()),entity.getType(),propertyName,propertyValue,timestamp);
    if (!entitySchemaHasProperty) {
      addInsertToMutator(batch,ENTITY_DICTIONARIES,key(entity.getUuid(),DICTIONARY_PROPERTIES),propertyName,null,timestamp);
    }
  }
 else {
    addDeleteToMutator(batch,ENTITY_PROPERTIES,key(entity.getUuid()),propertyName,timestamp);
  }
  return batch;
}
