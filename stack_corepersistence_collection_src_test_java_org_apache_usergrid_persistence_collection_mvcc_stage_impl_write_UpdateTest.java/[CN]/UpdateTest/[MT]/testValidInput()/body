{
  final Entity entity=new Entity();
  final UUID existingEntityId=UUIDGenerator.newTimeUUID();
  final long createdTime=100;
  FieldUtils.writeDeclaredField(entity,"uuid",existingEntityId,true);
  entity.setCreated(createdTime);
  final CollectionEventBus eventBus=mock(CollectionEventBus.class);
  final EntityCollection context=mock(EntityCollection.class);
  final TimeService timeService=mock(TimeService.class);
  final long updateTime=System.currentTimeMillis();
  when(timeService.getTime()).thenReturn(updateTime);
  final UUIDService uuidService=mock(UUIDService.class);
  final UUID newVersion=UUIDGenerator.newTimeUUID();
  when(uuidService.newTimeUUID()).thenReturn(newVersion);
  final Update create=new Update(eventBus,timeService,uuidService);
  create.performStage(new EventUpdate(context,entity,new Result()));
  ArgumentCaptor<EventStart> mvccEntity=ArgumentCaptor.forClass(EventStart.class);
  verify(eventBus).post(mvccEntity.capture());
  Entity created=mvccEntity.getValue().getData();
  assertEquals("Entity re-set into context",entity,created);
  assertEquals("entity id did not match generator",existingEntityId,created.getUuid());
  assertEquals("version did not not match entityId",newVersion,created.getVersion());
  assertEquals("created time matches generator",createdTime,created.getCreated());
  assertEquals("updated time matches generator",updateTime,created.getUpdated());
}
