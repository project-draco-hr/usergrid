{
  properties.setProperty(PROPERTIES_SYSADMIN_APPROVES_ADMIN_USERS,"false");
  properties.setProperty(PROPERTIES_SYSADMIN_APPROVES_ORGANIZATIONS,"false");
  properties.setProperty(PROPERTIES_ADMIN_USERS_REQUIRE_CONFIRMATION,"true");
  properties.setProperty(PROPERTIES_SYSADMIN_EMAIL,"sysadmin-1@mockserver.com");
  properties.setProperty(PROPERTIES_NOTIFY_ADMIN_OF_ACTIVATION,"true");
  OrganizationOwnerInfo org_owner=management.createOwnerAndOrganization(ORGANIZATION_NAME,"test-user-1","Test User","test-user-1@mockserver.com","testpassword",false,false);
  assertNotNull(org_owner);
  List<Message> inbox=org.jvnet.mock_javamail.Mailbox.get("test-user-1@mockserver.com");
  assertFalse(inbox.isEmpty());
  MockImapClient client=new MockImapClient("mockserver.com","test-user-1","somepassword");
  client.processMail();
  Message account_confirmation_message=inbox.get(0);
  assertEquals("User Account Confirmation: test-user-1@mockserver.com",account_confirmation_message.getSubject());
  String token=getTokenFromMessage(account_confirmation_message);
  logger.info(token);
  assertEquals(ActivationState.ACTIVATED,management.handleConfirmationTokenForAdminUser(org_owner.owner.getUuid(),token));
  Message account_activation_message=inbox.get(1);
  assertEquals("User Account Activated",account_activation_message.getSubject());
  client=new MockImapClient("mockserver.com","test-user-1","somepassword");
  client.processMail();
}
