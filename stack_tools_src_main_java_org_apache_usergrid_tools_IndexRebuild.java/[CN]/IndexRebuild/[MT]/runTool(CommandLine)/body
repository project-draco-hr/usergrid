{
  startSpring();
  logger.info("Starting index rebuild");
  EntityManagerFactory.ProgressObserver po=new EntityManagerFactory.ProgressObserver(){
    @Override public void onProgress(    EntityRef entity){
      logger.info("Indexing entity {}:{}",entity.getType(),entity.getUuid());
    }
    @Override public long getWriteDelayTime(){
      return 100;
    }
  }
;
  emf.rebuildInternalIndexes(po);
  emf.refreshIndex();
  if (line.getOptionValue("all") != null && line.getOptionValue("all").equalsIgnoreCase("true")) {
    emf.rebuildAllIndexes(po);
  }
 else   if (line.getOptionValue(APPLICATION_ARG) != null) {
    for (    UUID appId : getAppIds(line)) {
      logger.info("Reindexing for app id: {}",appId);
      Set<String> collections=getCollections(line,appId);
      for (      String collection : collections) {
        emf.rebuildCollectionIndex(appId,collection,po);
        emf.refreshIndex();
      }
    }
  }
 else {
    Map<String,UUID> ids=emf.getApplications();
    System.out.println("Printing all apps");
    for (    Entry<String,UUID> entry : ids.entrySet()) {
      System.out.println(entry.getKey() + " appid=" + entry.getValue());
    }
  }
  logger.info("Finished index rebuild");
}
