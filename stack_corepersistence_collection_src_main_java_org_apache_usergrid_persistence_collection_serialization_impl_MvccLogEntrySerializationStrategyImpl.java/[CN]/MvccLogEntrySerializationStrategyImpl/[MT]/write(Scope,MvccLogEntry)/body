{
  Preconditions.checkNotNull(scope,"scope is required");
  Preconditions.checkNotNull(entry,"entry is required");
  final Stage stage=entry.getStage();
  final UUID colName=entry.getVersion();
  return doWrite(scope,entry.getEntityId(),new RowOp(){
    @Override public void doOp(    final ColumnListMutation<UUID> colMutation){
      if (stage.isTransient()) {
        colMutation.putColumn(colName,stage,SER,timeout);
        return;
      }
      colMutation.putColumn(colName,stage,SER,null);
    }
  }
);
}
