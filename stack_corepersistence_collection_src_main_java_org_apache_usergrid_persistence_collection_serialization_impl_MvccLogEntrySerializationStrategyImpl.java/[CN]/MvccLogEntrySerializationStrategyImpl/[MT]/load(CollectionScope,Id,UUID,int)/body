{
  Preconditions.checkNotNull(collectionScope,"collectionScope is required");
  Preconditions.checkNotNull(entityId,"entity id is required");
  Preconditions.checkNotNull(version,"version is required");
  Preconditions.checkArgument(maxSize > 0,"max Size must be greater than 0");
  ColumnList<UUID> columns=keyspace.prepareQuery(CF_ENTITY_LOG).getKey(ScopedRowKey.fromKey(collectionScope,entityId)).withColumnRange(version,null,false,maxSize).execute().getResult();
  List<MvccLogEntry> results=new ArrayList<MvccLogEntry>(columns.size());
  for (  Column<UUID> col : columns) {
    final UUID storedVersion=col.getName();
    final StageStatus stage=col.getValue(SER);
    results.add(new MvccLogEntryImpl(entityId,storedVersion,stage.stage,stage.status));
  }
  return results;
}
