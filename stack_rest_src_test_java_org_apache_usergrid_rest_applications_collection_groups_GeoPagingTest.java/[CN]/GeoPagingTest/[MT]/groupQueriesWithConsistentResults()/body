{
  CustomCollection groups=context.application().collection("test2groups");
  int maxRangeLimit=20;
  JsonNode[] saved=new JsonNode[maxRangeLimit];
  Map<String,String> actor=hashMap("displayName","Erin");
  Map<String,Object> props=new HashMap<String,Object>();
  props.put("actor",actor);
  Map<String,Integer> location=hashMap("latitude",37);
  location.put("longitude",-75);
  props.put("location",location);
  props.put("verb","go");
  props.put("content","bragh");
  for (int i=0; i < 20; i++) {
    String newPath=String.format("/kero" + i);
    props.put("path",newPath);
    props.put("ordinal",i);
    JsonNode activity=groups.create(props).get("entities").get(0);
    saved[i]=activity;
  }
  refreshIndex(context.getOrgName(),context.getAppName());
  JsonNode node=null;
  for (int consistent=0; consistent < 20; consistent++) {
    String query=String.format("select * where location within 100 of 37, -75 and ordinal >= %d and ordinal < %d",saved[7].get("ordinal").asLong(),saved[10].get("ordinal").asLong());
    node=groups.withQuery(query).get();
    JsonNode entities=node.get("entities");
    assertEquals(3,entities.size());
    for (int i=0; i < 3; i++) {
      assertEquals(saved[9 - i],entities.get(i));
    }
  }
}
