{
  MetricsFactory metricsFactory=injector.getInstance(MetricsFactory.class);
  jobTimer=metricsFactory.getTimer(JobSchedulerService.class,"job_execution_timer");
  runCounter=metricsFactory.getCounter(JobSchedulerService.class,"running_workers");
  successCounter=metricsFactory.getCounter(JobSchedulerService.class,"successful_jobs");
  failCounter=metricsFactory.getCounter(JobSchedulerService.class,"failed_jobs");
  try {
    LOG.info("Running one check iteration ...");
    List<JobDescriptor> activeJobs;
    while (true) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("About to acquire semaphore.  Capacity is {}",capacitySemaphore.availablePermits());
      }
      capacitySemaphore.acquire();
      capacitySemaphore.release();
      int capacity=capacitySemaphore.availablePermits();
      LOG.debug("Capacity is {}",capacity);
      activeJobs=jobAccessor.getJobs(capacity);
      if (activeJobs.size() == 0) {
        LOG.debug("No jobs returned. Exiting run loop");
        return;
      }
      for (      JobDescriptor jd : activeJobs) {
        LOG.info("Submitting work for {}",jd);
        submitWork(jd);
        LOG.info("Work submitted for {}",jd);
      }
    }
  }
 catch (  Throwable t) {
    LOG.error("Scheduler run failed, error is",t);
  }
}
