{
  Preconditions.checkNotNull(applicationScope,"applicationScope is required");
  Preconditions.checkNotNull(entityId,"entity id is required");
  Preconditions.checkNotNull(version,"version is required");
  Preconditions.checkArgument(fetchSize > 0,"max Size must be greater than 0");
  final Id applicationId=applicationScope.getApplication();
  final Id ownerId=applicationId;
  final String collectionName=LegacyScopeUtils.getCollectionScopeNameFromEntityType(entityId.getType());
  final CollectionPrefixedKey<Id> collectionPrefixedKey=new CollectionPrefixedKey<>(collectionName,ownerId,entityId);
  final ScopedRowKey<CollectionPrefixedKey<Id>> rowKey=ScopedRowKey.fromKey(applicationId,collectionPrefixedKey);
  RowQuery<ScopedRowKey<CollectionPrefixedKey<Id>>,UUID> query=keyspace.prepareQuery(columnFamily).getKey(rowKey).withColumnRange(null,version,true,fetchSize);
  return new ColumnNameIterator(query,new MvccColumnParser(entityId,getEntitySerializer()),false);
}
