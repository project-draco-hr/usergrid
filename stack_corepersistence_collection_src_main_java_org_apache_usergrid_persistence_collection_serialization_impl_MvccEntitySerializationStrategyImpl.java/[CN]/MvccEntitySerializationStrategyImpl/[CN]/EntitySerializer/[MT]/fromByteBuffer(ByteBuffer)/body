{
  CompositeParser parser=Composites.newCompositeParser(byteBuffer);
  byte[] b=new byte[byteBuffer.remaining()];
  byte[] version=parser.read(BYTES_ARRAY_SERIALIZER);
  if (!Arrays.equals(VERSION,version)) {
    throw new UnsupportedOperationException("A version of type " + version + " is unsupported");
  }
  byte[] state=parser.read(BYTES_ARRAY_SERIALIZER);
  if (Arrays.equals(STATE_DELETED,state)) {
    return new EntityWrapper(MvccEntity.Status.COMPLETE,Optional.<Entity>absent());
  }
  Object storedObject=null;
  Entity storedEntity=null;
  String derper=null;
  byteBuffer.position(9);
  try {
    storedObject=mapper.readValue(helper,Object.class);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  storedEntity=convertToEntity(storedObject);
  final Optional<Entity> entity=Optional.of(storedEntity);
  if (Arrays.equals(STATE_COMPLETE,state)) {
    return new EntityWrapper(MvccEntity.Status.COMPLETE,entity);
  }
  return new EntityWrapper(MvccEntity.Status.PARTIAL,entity);
}
