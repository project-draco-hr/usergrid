{
  final MvccEntity entity=idIoEvent.getEvent();
  MvccValidationUtils.verifyMvccEntityOptionalEntity(entity);
  final Id entityId=entity.getId();
  final UUID version=entity.getVersion();
  final CollectionScope collectionScope=idIoEvent.getEntityCollection();
  LOG.debug("Inserting tombstone for entity {} at version {}",entityId,version);
  final MvccLogEntry startEntry=new MvccLogEntryImpl(entityId,version,Stage.COMMITTED,MvccLogEntry.State.DELETED);
  final MutationBatch entityStateBatch=logStrat.write(collectionScope,startEntry);
  try {
    final MutationBatch entityBatch=entityStrat.mark(collectionScope,entityId,version);
    entityStateBatch.mergeShallow(entityBatch);
    entityStateBatch.execute();
  }
 catch (  ConnectionException e) {
    throw new RuntimeException("Unable to mark entry as deleted");
  }
}
