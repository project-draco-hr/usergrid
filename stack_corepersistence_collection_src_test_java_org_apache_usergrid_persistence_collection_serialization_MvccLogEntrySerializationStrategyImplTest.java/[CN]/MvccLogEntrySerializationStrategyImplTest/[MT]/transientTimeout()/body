{
  final UUID applicationId=UUIDGenerator.newTimeUUID();
  final String name="test";
  CollectionContext context=new CollectionContextImpl(applicationId,applicationId,name);
  final UUID uuid=UUIDGenerator.newTimeUUID();
  final UUID version=UUIDGenerator.newTimeUUID();
  for (  Stage stage : Stage.values()) {
    MvccLogEntry saved=new MvccLogEntryImpl(context,uuid,version,stage);
    logEntryStrategy.write(saved).execute();
    Thread.sleep(TIMEOUT * 1000);
    MvccLogEntry returned=logEntryStrategy.load(context,uuid,version);
    if (stage.isTransient()) {
      assertNull("Active is transient and should time out",returned);
    }
 else {
      assertNotNull("Committed is not transient and should be returned",returned);
      assertEquals("Returned should equal the saved",saved,returned);
    }
  }
}
