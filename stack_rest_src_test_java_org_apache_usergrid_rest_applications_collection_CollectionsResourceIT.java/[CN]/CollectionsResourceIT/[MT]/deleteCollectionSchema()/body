{
  ArrayList<String> indexingArray=new ArrayList<>();
  Entity payload=new Entity();
  payload.put("fields",indexingArray);
  Entity thing=this.app().collection("testCollections").collection("_index").post(payload);
  refreshIndex();
  Entity testEntity=new Entity();
  testEntity.put("one","helper");
  testEntity.put("two","query");
  Entity postedEntity=this.app().collection("testCollections").post(testEntity);
  refreshIndex();
  String query="two ='query'";
  QueryParameters queryParameters=new QueryParameters().setQuery(query);
  Collection tempEntity=this.app().collection("testCollections").get(queryParameters,true);
  assertEquals(0,tempEntity.getResponse().getEntities().size());
  query="one = 'helper'";
  queryParameters=new QueryParameters().setQuery(query);
  tempEntity=this.app().collection("testCollections").get(queryParameters,true);
  assertEquals(0,tempEntity.getResponse().getEntities().size());
  query="uuid = " + postedEntity.getUuid().toString();
  queryParameters=new QueryParameters().setQuery(query);
  tempEntity=this.app().collection("testCollections").get(queryParameters,true);
  assertEquals(1,tempEntity.getResponse().getEntities().size());
  this.app().collection("testCollections").collection("_index").delete();
  refreshIndex();
  this.app().collection("testCollections").collection("_reindex").post(true,clientSetup.getSuperuserToken(),ApiResponse.class,null,null,false);
  refreshIndex();
  query="two ='query'";
  queryParameters=new QueryParameters().setQuery(query);
  tempEntity=this.app().collection("testCollections").get(queryParameters,true);
  assertEquals(1,tempEntity.getResponse().getEntities().size());
  query="one = 'helper'";
  queryParameters=new QueryParameters().setQuery(query);
  tempEntity=this.app().collection("testCollections").get(queryParameters,true);
  assertEquals(1,tempEntity.getResponse().getEntities().size());
  query="uuid = " + postedEntity.getUuid().toString();
  queryParameters=new QueryParameters().setQuery(query);
  tempEntity=this.app().collection("testCollections").get(queryParameters,true);
  assertEquals(1,tempEntity.getResponse().getEntities().size());
}
