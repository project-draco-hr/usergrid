{
  Map<String,ChangeLogEntry> writeMap=new HashMap<String,ChangeLogEntry>();
  Map<String,ChangeLogEntry> deleteMap=new HashMap<String,ChangeLogEntry>();
  List<ChangeLogEntry> changeLog=new ArrayList<ChangeLogEntry>();
  Entity keeper=null;
  List<Entity> entityList=new ArrayList<>();
  while (mvccEntities.hasNext()) {
    MvccEntity mvccEntity=mvccEntities.next();
    Entity entity=mvccEntity.getEntity().get();
    entityList.add(entity);
    int compare=UUIDComparator.staticCompare(mvccEntity.getVersion(),minVersion);
    if (compare == 0) {
      keeper=entity;
    }
  }
  for (  Entity entity : entityList) {
    int compare=UUIDComparator.staticCompare(entity.getVersion(),minVersion);
    if (compare < 0) {
      for (      Field field : entity.getFields()) {
        Field keeperField=keeper.getField(field.getName());
        if (keeperField == null || keeperField.getValue() == null || !keeperField.getValue().equals(field.getValue())) {
          String key=field.getName() + field.getValue();
          ChangeLogEntry cle=deleteMap.get(key);
          if (cle == null) {
            cle=new ChangeLogEntry(entity.getId(),entity.getVersion(),ChangeLogEntry.ChangeType.PROPERTY_DELETE,field);
            changeLog.add(cle);
          }
 else {
            cle.addVersion(entity.getVersion());
          }
        }
      }
    }
 else {
      for (      Field field : entity.getFields()) {
        String key=field.getName() + field.getValue();
        ChangeLogEntry cle=writeMap.get(key);
        if (cle == null) {
          cle=new ChangeLogEntry(entity.getId(),entity.getVersion(),ChangeLogEntry.ChangeType.PROPERTY_WRITE,field);
          writeMap.put(key,cle);
          changeLog.add(cle);
        }
 else {
          cle.addVersion(entity.getVersion());
        }
      }
    }
  }
  return changeLog;
}
