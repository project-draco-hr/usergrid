{
  Map<String,ChangeLogEntry> writeMap=new HashMap<String,ChangeLogEntry>();
  Map<String,ChangeLogEntry> deleteMap=new HashMap<String,ChangeLogEntry>();
  List<ChangeLogEntry> changeLog=new ArrayList<ChangeLogEntry>();
  Entity keeper=null;
  while (mvccEntities.hasNext()) {
    MvccEntity mvccEntity=mvccEntities.next();
    Entity entity=mvccEntity.getEntity().get();
    int compare=UUIDComparator.staticCompare(mvccEntity.getVersion(),minVersion);
    if (compare == 0) {
      keeper=entity;
    }
 else {
      if (compare < 0) {
        for (        Field field : entity.getFields()) {
          Field keeperField=keeper.getField(field.getName());
          if (keeperField == null || keeperField.getValue() == null || !keeperField.getValue().equals(field.getValue())) {
            String key=field.getName() + field.getValue();
            ChangeLogEntry cle=deleteMap.get(key);
            if (cle == null) {
              cle=new ChangeLogEntry(entity.getId(),mvccEntity.getVersion(),ChangeLogEntry.ChangeType.PROPERTY_DELETE,field);
              changeLog.add(cle);
            }
 else {
              cle.addVersion(mvccEntity.getVersion());
            }
          }
        }
      }
 else {
        for (        Field field : entity.getFields()) {
          String key=field.getName() + field.getValue();
          ChangeLogEntry cle=writeMap.get(key);
          if (cle == null) {
            cle=new ChangeLogEntry(entity.getId(),mvccEntity.getVersion(),ChangeLogEntry.ChangeType.PROPERTY_WRITE,field);
            writeMap.put(key,cle);
            changeLog.add(cle);
          }
 else {
            cle.addVersion(mvccEntity.getVersion());
          }
        }
      }
    }
  }
  return changeLog;
}
