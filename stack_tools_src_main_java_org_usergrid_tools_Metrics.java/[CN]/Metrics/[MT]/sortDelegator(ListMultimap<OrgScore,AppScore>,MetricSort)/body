{
  List<MetricLine> metrics=new ArrayList<MetricLine>(scoreMaps.size() * 2);
  List<AppScore> appScores;
  List<OrgScore> orgScores;
switch (sortType) {
case APP_REQ_COUNT:
    appScores=new ArrayList<AppScore>(scoreMaps.values());
  Collections.sort(appScores,new Comparator<AppScore>(){
    public int compare(    AppScore a1,    AppScore a2){
      return new Long(a1.getRequestCount()).compareTo(a2.getRequestCount());
    }
  }
);
for (AppScore as : appScores) {
  metrics.add(new MetricLine(MetricSort.APP_REQ_COUNT,as.getRequestCount(),as.getOrgScore(),as));
}
break;
case APP_USER_COUNT:
appScores=new ArrayList<AppScore>(scoreMaps.values());
Collections.sort(appScores,new Comparator<AppScore>(){
public int compare(AppScore a1,AppScore a2){
return new Long(a1.getUserCount()).compareTo(a2.getUserCount());
}
}
);
for (AppScore as : appScores) {
metrics.add(new MetricLine(MetricSort.APP_USER_COUNT,as.getRequestCount(),as.getOrgScore(),as));
}
break;
case ORG_ADMIN_COUNT:
orgScores=new ArrayList<OrgScore>(scoreMaps.keys());
Collections.sort(orgScores,new Comparator<OrgScore>(){
public int compare(OrgScore a1,OrgScore a2){
return new Long(a1.getAdminCount()).compareTo(a2.getAdminCount());
}
}
);
for (OrgScore orgScore : orgScores) {
metrics.add(new MetricLine(MetricSort.ORG_ADMIN_COUNT,orgScore.getAdminCount(),orgScore,null));
}
break;
case ORG_USER_COUNT:
orgScores=new ArrayList<OrgScore>(scoreMaps.keys());
Collections.sort(orgScores,new Comparator<OrgScore>(){
public int compare(OrgScore a1,OrgScore a2){
return new Long(a1.getUserCount()).compareTo(a2.getUserCount());
}
}
);
for (OrgScore orgScore : orgScores) {
metrics.add(new MetricLine(MetricSort.ORG_USER_COUNT,orgScore.getUserCount(),orgScore,null));
}
break;
case ORG_APP_COUNT:
orgScores=new ArrayList<OrgScore>(scoreMaps.keys());
Collections.sort(orgScores,new Comparator<OrgScore>(){
public int compare(OrgScore a1,OrgScore a2){
return new Long(a1.getAppCount()).compareTo(a2.getAppCount());
}
}
);
for (OrgScore orgScore : orgScores) {
metrics.add(new MetricLine(MetricSort.ORG_APP_COUNT,orgScore.getAppCount(),orgScore,null));
}
break;
case ORG_ADMIN_LOGIN_COUNT:
orgScores=new ArrayList<OrgScore>(scoreMaps.keys());
Collections.sort(orgScores,new Comparator<OrgScore>(){
public int compare(OrgScore a1,OrgScore a2){
return new Long(a1.getAdminLogins()).compareTo(a2.getAdminLogins());
}
}
);
for (OrgScore orgScore : orgScores) {
metrics.add(new MetricLine(MetricSort.ORG_ADMIN_LOGIN_COUNT,orgScore.getAdminLogins(),orgScore,null));
}
break;
}
return metrics;
}
