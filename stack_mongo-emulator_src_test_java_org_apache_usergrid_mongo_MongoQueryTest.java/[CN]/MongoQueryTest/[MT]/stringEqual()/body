{
  UUID appId=emf.lookupApplication("test-organization/test-app").get();
  EntityManager em=emf.getEntityManager(appId);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("name","Kings of Leon");
  properties.put("genre","Southern Rock");
  properties.put("founded",2000);
  em.create("stringequal",properties);
  properties=new LinkedHashMap<String,Object>();
  properties.put("name","Stone Temple Pilots");
  properties.put("genre","Rock");
  properties.put("founded",1986);
  em.create("stringequal",properties);
  properties=new LinkedHashMap<String,Object>();
  properties.put("name","Journey");
  properties.put("genre","Classic Rock");
  properties.put("founded",1973);
  em.create("stringequal",properties);
  Mongo m=new Mongo("localhost",27017);
  DB db=m.getDB("test-organization/test-app");
  db.authenticate("test","test".toCharArray());
  Set<String> colls=db.getCollectionNames();
  assertTrue(colls.contains("stringequals"));
  DBCollection coll=db.getCollection("stringequals");
  DBCursor cur=coll.find();
  int count=0;
  while (cur.hasNext()) {
    cur.next();
    count++;
  }
  assertEquals(3,count);
  BasicDBObject query=new BasicDBObject();
  query.put("genre","Southern Rock");
  cur=coll.find(query);
  assertTrue(cur.hasNext());
  DBObject result=cur.next();
  assertEquals("Kings of Leon",result.get("name"));
  assertEquals("Southern Rock",result.get("genre"));
  assertFalse(cur.hasNext());
}
