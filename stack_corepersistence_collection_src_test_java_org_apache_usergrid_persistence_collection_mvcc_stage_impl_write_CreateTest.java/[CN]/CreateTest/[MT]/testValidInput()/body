{
  final TimeService timeService=mock(TimeService.class);
  final long time=System.currentTimeMillis();
  when(timeService.getTime()).thenReturn(time);
  final UUIDService uuidService=mock(UUIDService.class);
  final UUID newEntityId=UUIDGenerator.newTimeUUID();
  final UUID newVersion=newEntityId;
  when(uuidService.newTimeUUID()).thenReturn(newEntityId);
  final CollectionEventBus eventBus=mock(CollectionEventBus.class);
  Result result=new Result();
  final Create create=new Create(eventBus,timeService,uuidService);
  final Entity entity=new Entity();
  final EntityCollection context=mock(EntityCollection.class);
  EventCreate createEvent=new EventCreate(context,entity,result);
  create.performStage(createEvent);
  ArgumentCaptor<EventStart> event=ArgumentCaptor.forClass(EventStart.class);
  verify(eventBus).post(event.capture());
  Entity created=event.getValue().getData();
  assertEquals("Entity re-set into context",entity,created);
  assertEquals("entity id did not match generator",newEntityId,created.getUuid());
  assertEquals("version did not not match entityId",newVersion,created.getVersion());
  assertEquals("created time matches generator",time,created.getCreated());
  assertEquals("updated time matches generator",time,created.getUpdated());
}
