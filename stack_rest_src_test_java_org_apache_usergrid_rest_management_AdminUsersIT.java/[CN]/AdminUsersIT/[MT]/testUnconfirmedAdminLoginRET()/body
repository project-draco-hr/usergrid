{
  Map<String,Object> testPropertiesMap=new HashMap<>();
  testPropertiesMap.put(PROPERTIES_SYSADMIN_APPROVES_ADMIN_USERS,"false");
  testPropertiesMap.put(PROPERTIES_SYSADMIN_APPROVES_ORGANIZATIONS,"false");
  testPropertiesMap.put(PROPERTIES_ADMIN_USERS_REQUIRE_CONFIRMATION,"true");
  testPropertiesMap.put(PROPERTIES_SYSADMIN_EMAIL,"sysadmin-1@mockserver.com");
  testPropertiesMap.put(PROPERTIES_NOTIFY_ADMIN_OF_ACTIVATION,"true");
  Entity testPropertiesPayload=new Entity(testPropertiesMap);
  clientSetup.getRestClient().testPropertiesResource().post(testPropertiesPayload);
  refreshIndex();
  ApiResponse apiResponse=clientSetup.getRestClient().testPropertiesResource().get();
  assertEquals("true",apiResponse.getProperties().get(PROPERTIES_NOTIFY_ADMIN_OF_ACTIVATION));
  assertEquals("sysadmin-1@mockserver.com",apiResponse.getProperties().get(PROPERTIES_SYSADMIN_EMAIL));
  assertEquals("true",apiResponse.getProperties().get(PROPERTIES_ADMIN_USERS_REQUIRE_CONFIRMATION));
  assertEquals("false",apiResponse.getProperties().get(PROPERTIES_SYSADMIN_APPROVES_ORGANIZATIONS));
  assertEquals("false",apiResponse.getProperties().get(PROPERTIES_SYSADMIN_APPROVES_ADMIN_USERS));
  Organization organization=createOrgPayload("testUnconfirmedAdminLogin",null);
  Organization organizationResponse=clientSetup.getRestClient().management().orgs().post(organization);
  assertNotNull(organizationResponse);
  User adminUser=organizationResponse.getOwner();
  assertNotNull(adminUser);
  assertFalse("adminUser should not be activated yet",adminUser.getActivated());
  assertFalse("adminUser should not be confirmed yet",adminUser.getConfirmed());
  QueryParameters queryParameters=new QueryParameters();
  queryParameters.addParam("grant_type","password").addParam("username",adminUser.getUsername()).addParam("password",organization.getPassword());
  try {
    Token tokenReturned=management().token().get(queryParameters);
  }
 catch (  Exception e) {
  }
  List<Message> inbox=Mailbox.get(organization.getEmail());
  assertFalse(inbox.isEmpty());
  MockImapClient client=new MockImapClient("mockserver.com","test-user-46","somepassword");
  client.processMail();
  Message confirmation=inbox.get(0);
  assertEquals("User Account Confirmation: " + organization.getEmail(),confirmation.getSubject());
}
