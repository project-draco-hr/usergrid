{
  ApiResponse originalTestPropertiesResponse=clientSetup.getRestClient().testPropertiesResource().get();
  Entity originalTestProperties=new Entity(originalTestPropertiesResponse);
  try {
    Map<String,Object> testPropertiesMap=new HashMap<>();
    testPropertiesMap.put(PROPERTIES_SYSADMIN_APPROVES_ADMIN_USERS,"false");
    testPropertiesMap.put(PROPERTIES_SYSADMIN_APPROVES_ORGANIZATIONS,"false");
    testPropertiesMap.put(PROPERTIES_ADMIN_USERS_REQUIRE_CONFIRMATION,"true");
    testPropertiesMap.put(PROPERTIES_DEFAULT_SYSADMIN_EMAIL,"sysadmin-1@mockserver.com");
    Entity testPropertiesPayload=new Entity(testPropertiesMap);
    clientSetup.getRestClient().testPropertiesResource().post(testPropertiesPayload);
    refreshIndex();
    ApiResponse apiResponse=clientSetup.getRestClient().testPropertiesResource().get();
    assertEquals("sysadmin-1@mockserver.com",apiResponse.getProperties().get(PROPERTIES_DEFAULT_SYSADMIN_EMAIL));
    assertEquals("true",apiResponse.getProperties().get(PROPERTIES_ADMIN_USERS_REQUIRE_CONFIRMATION));
    assertEquals("false",apiResponse.getProperties().get(PROPERTIES_SYSADMIN_APPROVES_ORGANIZATIONS));
    assertEquals("false",apiResponse.getProperties().get(PROPERTIES_SYSADMIN_APPROVES_ADMIN_USERS));
  }
  finally {
    clientSetup.getRestClient().testPropertiesResource().post(originalTestProperties);
  }
}
