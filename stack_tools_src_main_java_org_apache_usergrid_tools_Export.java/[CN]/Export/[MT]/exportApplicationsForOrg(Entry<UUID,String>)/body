{
  logger.info("" + organization);
  BiMap<UUID,String> applications=managementService.getApplicationsForOrganization(organization.getKey());
  for (  Entry<UUID,String> application : applications.entrySet()) {
    logger.info(application.getValue() + " : " + application.getKey());
    JsonGenerator jg=getJsonGenerator(createOutputFile("application",application.getValue()));
    EntityManager rootEm=emf.getEntityManager(emf.getManagementAppId());
    Entity appEntity=rootEm.get(new SimpleEntityRef("application",application.getKey()));
    Map<String,Object> dictionaries=new HashMap<String,Object>();
    for (    String dictionary : rootEm.getDictionaries(appEntity)) {
      Map<Object,Object> dict=rootEm.getDictionaryAsMap(appEntity,dictionary);
      if (dict.isEmpty()) {
        continue;
      }
      dictionaries.put(dictionary,dict);
    }
    EntityManager em=emf.getEntityManager(application.getKey());
    Entity nsEntity=em.get(new SimpleEntityRef("application",application.getKey()));
    Set<String> collections=em.getApplicationCollections();
    Map<String,Long> entityCounters=em.getApplicationCounters();
    nsEntity.setMetadata("organization",organization);
    nsEntity.setMetadata("dictionaries",dictionaries);
    nsEntity.setMetadata("counters",entityCounters);
    nsEntity.setMetadata("collections",collections);
    jg.writeStartArray();
    jg.writeObject(nsEntity);
    JsonGenerator collectionsJg=getJsonGenerator(createOutputFile("collections",application.getValue()));
    collectionsJg.writeStartObject();
    Map<String,Object> metadata=em.getApplicationCollectionMetadata();
    echo(JsonUtils.mapToFormattedJsonString(metadata));
    for (    String collectionName : metadata.keySet()) {
      Query query=new Query();
      query.setLimit(MAX_ENTITY_FETCH);
      query.setResultsLevel(Results.Level.ALL_PROPERTIES);
      Results entities=em.searchCollection(em.getApplicationRef(),collectionName,query);
      while (entities.size() > 0) {
        for (        Entity entity : entities) {
          jg.writeObject(entity);
          echo(entity);
          saveCollectionMembers(collectionsJg,em,application.getValue(),entity);
        }
        if (entities.getCursor() == null) {
          break;
        }
        query.setCursor(entities.getCursor());
        entities=em.searchCollection(em.getApplicationRef(),collectionName,query);
      }
    }
    collectionsJg.writeEndObject();
    collectionsJg.close();
    jg.writeEndArray();
    jg.close();
  }
}
