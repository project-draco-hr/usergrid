{
  Id appId=new SimpleId("application");
  Id ownerId=new SimpleId("owner");
  ApplicationScope applicationScope=new ApplicationScopeImpl(appId);
  IndexEdge indexSCope=new IndexEdgeImpl(ownerId,"user",SearchEdge.NodeType.SOURCE,10);
  ApplicationEntityIndex entityIndex=eif.createApplicationEntityIndex(applicationScope);
  final Entity first=new Entity("search");
  first.setField(new StringField("string","alpha long string"));
  EntityUtils.setVersion(first,UUIDGenerator.newTimeUUID());
  final Entity second=new Entity("search");
  second.setField(new StringField("string","bravo long string"));
  EntityUtils.setVersion(second,UUIDGenerator.newTimeUUID());
  EntityIndexBatch batch=entityIndex.createBatch();
  batch.index(indexSCope,first);
  batch.index(indexSCope,second);
  batch.execute().get();
  ei.refreshAsync().toBlocking().last();
  final String ascQuery="order by string";
  final CandidateResults ascResults=entityIndex.search(indexSCope,SearchTypes.fromTypes(first.getId().getType()),ascQuery,10);
  assertEquals(first.getId(),ascResults.get(0).getId());
  assertEquals(second.getId(),ascResults.get(1).getId());
  final String descQuery="order by string desc";
  final CandidateResults descResults=entityIndex.search(indexSCope,SearchTypes.fromTypes(first.getId().getType()),descQuery,10);
  assertEquals(second.getId(),descResults.get(0).getId());
  assertEquals(first.getId(),descResults.get(1).getId());
}
