{
  int numberOfEntities=1000;
  int versionToSearchFor=numberOfEntities / 2;
  Id appId=new SimpleId("application");
  ApplicationScope applicationScope=new ApplicationScopeImpl(appId);
  IndexEdge searchEdge=new IndexEdgeImpl(appId,"mehCars",SearchEdge.NodeType.SOURCE,1);
  ApplicationEntityIndex entityIndex=eif.createApplicationEntityIndex(applicationScope);
  UUID entityUUID=UUID.randomUUID();
  Id entityId=new SimpleId("mehCar");
  Map entityMap=new HashMap(){
{
      put("name","Toyota Corolla");
      put("introduced",1966);
      put("topspeed",111);
    }
  }
;
  Entity[] entity=new Entity[numberOfEntities];
  for (int i=0; i < numberOfEntities; i++) {
    entity[i]=EntityIndexMapUtils.fromMap(entityMap);
    EntityUtils.setId(entity[i],entityId);
    EntityUtils.setVersion(entity[i],UUIDGenerator.newTimeUUID());
    entity[i].setField(new UUIDField(IndexingUtils.ENTITY_ID_FIELDNAME,entityUUID));
    entityIndex.createBatch().index(searchEdge,entity[i]).execute().toBlocking().last();
  }
  ei.refreshAsync().toBlocking().first();
  CandidateResults candidateResults=entityIndex.getAllEntityVersionsBeforeMarkedVersion(entity[versionToSearchFor].getId(),entity[versionToSearchFor].getVersion());
  assertEquals(501,candidateResults.size());
}
