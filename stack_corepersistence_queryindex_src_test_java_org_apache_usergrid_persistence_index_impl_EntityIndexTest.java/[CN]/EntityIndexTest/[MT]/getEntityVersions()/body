{
  Id appId=new SimpleId("application");
  Id ownerId=new SimpleId("owner");
  ApplicationScope applicationScope=new ApplicationScopeImpl(appId);
  IndexScope indexScope=new IndexScopeImpl(ownerId,"user");
  EntityIndex entityIndex=eif.createEntityIndex(applicationScope);
  entityIndex.initializeIndex();
  final String middleName="middleName" + UUIDUtils.newTimeUUID();
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  properties.put("middlename",middleName);
  Map entityMap=new HashMap(){
{
      put("username","edanuff");
      put("email","ed@anuff.com");
      put("middlename",middleName);
    }
  }
;
  Entity user=EntityIndexMapUtils.fromMap(entityMap);
  EntityUtils.setId(user,new SimpleId("edanuff"));
  EntityUtils.setVersion(user,UUIDGenerator.newTimeUUID());
  final EntityIndexBatch batch=entityIndex.createBatch();
  batch.index(indexScope,user);
  user.setField(new StringField("address1","1782 address st"));
  batch.index(indexScope,user);
  user.setField(new StringField("address2","apt 508"));
  batch.index(indexScope,user);
  user.setField(new StringField("address3","apt 508"));
  batch.index(indexScope,user);
  batch.executeAndRefresh();
  CandidateResults results=entityIndex.getEntityVersions(indexScope,user.getId());
  assertEquals(1,results.size());
  assertEquals(results.get(0).getId(),user.getId());
  assertEquals(results.get(0).getVersion(),user.getVersion());
}
