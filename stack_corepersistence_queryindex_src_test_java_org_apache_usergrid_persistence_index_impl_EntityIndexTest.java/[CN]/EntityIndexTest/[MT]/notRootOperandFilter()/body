{
  Id appId=new SimpleId("application");
  Id ownerId=new SimpleId("owner");
  ApplicationScope applicationScope=new ApplicationScopeImpl(appId);
  ApplicationEntityIndex entityIndex=eif.createApplicationEntityIndex(applicationScope);
  final Entity first=new Entity("search");
  first.setField(new IntegerField("int",1));
  EntityUtils.setVersion(first,UUIDGenerator.newTimeUUID());
  final Entity second=new Entity("search");
  second.setField(new IntegerField("int",2));
  EntityUtils.setVersion(second,UUIDGenerator.newTimeUUID());
  EntityIndexBatch batch=entityIndex.createBatch();
  IndexEdge indexScope1=new IndexEdgeImpl(ownerId,"searches",SearchEdge.NodeType.SOURCE,10);
  batch.index(indexScope1,first);
  IndexEdge indexScope2=new IndexEdgeImpl(ownerId,"searches",SearchEdge.NodeType.SOURCE,11);
  batch.index(indexScope2,second);
  batch.execute().get();
  ei.refresh();
  final String notFirst="NOT int = 1";
  final CandidateResults notFirstResults=entityIndex.search(indexScope1,SearchTypes.fromTypes(first.getId().getType()),notFirst,10);
  assertEquals(1,notFirstResults.size());
  assertEquals(second.getId(),notFirstResults.get(0).getId());
  final String notSecond="NOT int = 2";
  final CandidateResults notSecondUnion=entityIndex.search(indexScope1,SearchTypes.fromTypes(first.getId().getType()),notSecond,10);
  assertEquals(1,notSecondUnion.size());
  assertEquals(first.getId(),notSecondUnion.get(0).getId());
  final String notBothReturn="NOT int = 3";
  final CandidateResults notBothReturnResults=entityIndex.search(indexScope1,SearchTypes.fromTypes(first.getId().getType()),notBothReturn,10);
  assertEquals(2,notBothReturnResults.size());
  assertEquals(second.getId(),notBothReturnResults.get(0).getId());
  assertEquals(first.getId(),notBothReturnResults.get(1).getId());
  final String notFilterBoth="(NOT int = 1) AND (NOT int = 2) ";
  final CandidateResults filterBoth=entityIndex.search(indexScope1,SearchTypes.fromTypes(first.getId().getType()),notFilterBoth,10);
  assertEquals(0,filterBoth.size());
  final String noMatchesAnd="(NOT int = 3) AND (NOT int = 4)";
  final CandidateResults noMatchesAndResults=entityIndex.search(indexScope1,SearchTypes.fromTypes(first.getId().getType()),noMatchesAnd,10);
  assertEquals(2,noMatchesAndResults.size());
  assertEquals(second.getId(),noMatchesAndResults.get(0).getId());
  assertEquals(first.getId(),noMatchesAndResults.get(1).getId());
  final String noMatchesOr="(NOT int = 3) AND (NOT int = 4)";
  final CandidateResults noMatchesOrResults=entityIndex.search(indexScope1,SearchTypes.fromTypes(first.getId().getType()),noMatchesOr,10);
  assertEquals(2,noMatchesOrResults.size());
  assertEquals(second.getId(),noMatchesOrResults.get(0).getId());
  assertEquals(first.getId(),noMatchesOrResults.get(1).getId());
}
