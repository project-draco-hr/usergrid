{
  Id appId=new SimpleId("application");
  final String entityType="thing";
  IndexEdge indexEdge=new IndexEdgeImpl(appId,"things",SearchEdge.NodeType.SOURCE,1);
  final SearchTypes searchTypes=SearchTypes.fromTypes(entityType);
  EntityIndexBatch batch=entityIndex.createBatch();
  UUID uuid=UUID.randomUUID();
  Entity entity1=new Entity(entityType);
  EntityUtils.setVersion(entity1,UUIDGenerator.newTimeUUID());
  entity1.setField(new UUIDField(IndexingUtils.ENTITY_ID_FIELDNAME,uuid));
  List<Object> listOfNulls=new ArrayList<>(3);
  listOfNulls.add(null);
  listOfNulls.add(null);
  listOfNulls.add(null);
  List<Object> listOfMixedNulls=new ArrayList<>(3);
  listOfMixedNulls.add(null);
  listOfMixedNulls.add("stringvalue");
  listOfMixedNulls.add(null);
  listOfMixedNulls.add(10);
  entity1.setField(new UUIDField("uuid",uuid,true));
  entity1.setField(new ArrayField<>("arrayofnulls",listOfNulls));
  entity1.setField(new ArrayField<>("arrayofmixednulls",listOfMixedNulls));
  entity1.setField(new NullField("nullfield"));
  batch.index(indexEdge,entity1);
  indexProducer.put(batch.build()).subscribe();
  entityIndex.refreshAsync().toBlocking().first();
  StopWatch timer=new StopWatch();
  timer.start();
  CandidateResults candidateResults=entityIndex.search(indexEdge,searchTypes,"select * where uuid = '" + uuid + "'",100,0);
  timer.stop();
  assertEquals(1,candidateResults.size());
  logger.debug("Query time {}ms",timer.getTime());
  final CandidateResult candidate1=candidateResults.get(0);
  assertEquals(entity1.getId(),candidate1.getId());
  assertEquals(entity1.getVersion(),candidate1.getVersion());
}
