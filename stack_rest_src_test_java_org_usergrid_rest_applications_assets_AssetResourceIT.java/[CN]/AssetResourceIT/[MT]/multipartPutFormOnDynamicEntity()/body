{
  UserRepo.INSTANCE.load(resource(),access_token);
  Map<String,String> payload=hashMap("name","assetname2");
  JsonNode node=resource().path("/test-organization/test-app/foos").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(JsonNode.class,payload);
  JsonNode idNode=node.get("entities").get(0).get("uuid");
  String uuid=idNode.getTextValue();
  assertNotNull(uuid);
  logNode(node);
  byte[] data=IOUtils.toByteArray(this.getClass().getResourceAsStream("/cassandra_eye.jpg"));
  FormDataMultiPart form=new FormDataMultiPart().field("name","assetname3").field("file",data,MediaType.MULTIPART_FORM_DATA_TYPE);
  node=resource().path("/test-organization/test-app/foos/" + uuid).queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.MULTIPART_FORM_DATA).put(JsonNode.class,form);
  logNode(node);
  node=resource().path("/test-organization/test-app/foos/" + uuid).queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON_TYPE).get(JsonNode.class);
  logNode(node);
  assertEquals("image/jpeg",node.findValue("content-type").getTextValue());
  assertEquals(7979,node.findValue("content-length").getIntValue());
  idNode=node.get("entities").get(0).get("uuid");
  assertEquals(uuid,idNode.getTextValue());
  JsonNode nameNode=node.get("entities").get(0).get("name");
  assertEquals("assetname3",nameNode.getTextValue());
  InputStream is=resource().path("/test-organization/test-app/foos/" + uuid).queryParam("access_token",access_token).accept(MediaType.APPLICATION_OCTET_STREAM_TYPE).get(InputStream.class);
  byte[] foundData=IOUtils.toByteArray(is);
  assertEquals(7979,foundData.length);
}
