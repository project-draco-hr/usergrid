{
  CountdownLatchJob job=cassandraResource.getBean("countdownLatch",CountdownLatchJob.class);
  job.setLatch(1);
  long fireTime=System.currentTimeMillis() + 30000;
  UUID notificationId=UUIDUtils.newTimeUUID();
  JobData test=new JobData();
  test.setProperty("stringprop","test");
  test.setProperty("notificationId",notificationId);
  JobData saved=scheduler.createJob("countdownLatch",fireTime,test);
  scheduler.refreshIndex();
  Query query=new Query();
  query.addEqualityFilter("notificationId",notificationId);
  Results r=scheduler.queryJobData(query);
  assertEquals(1,r.size());
  assertEquals(saved.getUuid(),r.getEntity().getUuid());
  query=new Query();
  query.addEqualityFilter("stringprop","test");
  r=scheduler.queryJobData(query);
  assertEquals(1,r.size());
  assertEquals(saved.getUuid(),r.getEntity().getUuid());
  scheduler.deleteJob(saved.getUuid());
  scheduler.refreshIndex();
  long waitTime=Math.max(0,fireTime - System.currentTimeMillis() + 1000);
  boolean waited=getJobListener().blockTilDone(1,waitTime);
  assertFalse("Job ran ",waited);
}
