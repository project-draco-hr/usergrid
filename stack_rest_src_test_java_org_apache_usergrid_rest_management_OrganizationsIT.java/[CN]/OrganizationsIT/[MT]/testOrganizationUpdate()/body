{
  String accessToken=context.getActiveUser().getToken();
  Map<String,Object> properties=new HashMap<String,Object>();
  properties.put("securityLevel",5);
  Map payload=new HashMap();
  payload.put(OrganizationsResource.ORGANIZATION_PROPERTIES,properties);
  mapper.readTree(resource().path("/management/organizations/" + context.getOrgName()).queryParam("access_token",accessToken).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).put(String.class,payload));
  refreshIndex(context.getOrgName(),context.getAppName());
  JsonNode node=mapper.readTree(resource().path("/management/organizations/" + context.getOrgName()).queryParam("access_token",accessToken).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  assertEquals(5L,node.get("organization").get("properties").get("securityLevel").asLong());
  payload=new HashMap();
  properties.put("securityLevel",6);
  payload.put(OrganizationsResource.ORGANIZATION_PROPERTIES,properties);
  node=mapper.readTree(resource().path("/management/organizations/" + context.getOrgName()).queryParam("access_token",accessToken).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).put(String.class,payload));
  logNode(node);
  refreshIndex(context.getOrgName(),context.getAppName());
  node=mapper.readTree(resource().path("/management/organizations/" + context.getOrgName()).queryParam("access_token",accessToken).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  logNode(node);
  Assert.assertEquals(6,node.get("organization").get(OrganizationsResource.ORGANIZATION_PROPERTIES).get("securityLevel").asInt());
}
