{
  if (logger.isDebugEnabled()) {
    logger.debug("NotifierResource.executeMultiPartPut");
  }
  String certInfo=getValueOrNull(multiPart,"certInfo");
  if (certInfo != null) {
    throw new IllegalArgumentException("Cannot create or update with certInfo parameter.  It is derived.");
  }
  String name=getValueOrNull(multiPart,"name");
  String provider=getValueOrNull(multiPart,"provider");
  String certPassword=getValueOrNull(multiPart,"certificatePassword");
  InputStream is=null;
  Map<String,Object> certAttributes=null;
  if (multiPart.getField("p12Certificate") != null) {
    is=multiPart.getField("p12Certificate").getEntityAs(InputStream.class);
    certAttributes=CertificateUtils.getCertAtrributes(is,certPassword);
  }
 else {
    throw new IllegalArgumentException("p12Certificate data cannot be empty");
  }
  if (!CertificateUtils.isValid(certAttributes)) {
    throw new IllegalArgumentException("p12Certificate is expired");
  }
  HashMap<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("name",name);
  properties.put("provider",provider);
  properties.put("environment","production");
  properties.put("certificatePassword",certPassword);
  if (is != null) {
    byte[] certBytes=IOUtils.toByteArray(is);
    properties.put("p12Certificate",certBytes);
    is.close();
  }
  if (certAttributes != null) {
    properties.put("certInfo",certAttributes);
  }
  ApiResponse response=createApiResponse();
  response.setAction("put");
  response.setApplication(services.getApplication());
  response.setParams(ui.getQueryParameters());
  ServicePayload payload=getPayload(properties);
  executeServiceRequest(ui,response,ServiceAction.PUT,payload);
  return response;
}
