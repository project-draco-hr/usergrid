{
  final ApplicationScope appScope=getApplicationScope(emf.getManagementAppId());
  final EntityCollectionManager collectionManager=entityCollectionManagerFactory.createCollectionManager(appScope);
  final GraphManager gm=graphManagerFactory.createEdgeManager(appScope);
  String edgeType=CpNamingUtils.getEdgeTypeFromCollectionName(CpNamingUtils.APPLICATION_INFOS);
  Id rootAppId=appScope.getApplication();
  final SimpleSearchByEdgeType simpleSearchByEdgeType=new SimpleSearchByEdgeType(rootAppId,edgeType,Long.MAX_VALUE,SearchByEdgeType.Order.DESCENDING,null);
  Observable<org.apache.usergrid.persistence.model.entity.Entity> entityObs=gm.loadEdgesFromSource(simpleSearchByEdgeType).flatMap(new Func1<Edge,Observable<org.apache.usergrid.persistence.model.entity.Entity>>(){
    @Override public Observable<org.apache.usergrid.persistence.model.entity.Entity> call(    final Edge edge){
      final Id appInfoId=edge.getTargetNode();
      return collectionManager.load(appInfoId).filter(new Func1<org.apache.usergrid.persistence.model.entity.Entity,Boolean>(){
        @Override public Boolean call(        final org.apache.usergrid.persistence.model.entity.Entity entity){
          if (entity == null) {
            logger.warn("Encountered a null application info for id {}",appInfoId);
            return false;
          }
          if (entity.getId().getUuid().equals(appId)) {
            return true;
          }
          return false;
        }
      }
);
    }
  }
);
  org.apache.usergrid.persistence.model.entity.Entity applicationInfo=entityObs.toBlocking().lastOrDefault(null);
  if (applicationInfo == null) {
    return null;
  }
  Class clazz=Schema.getDefaultSchema().getEntityClass(applicationInfo.getId().getType());
  Entity entity=EntityFactory.newEntity(applicationInfo.getId().getUuid(),applicationInfo.getId().getType(),clazz);
  entity.setProperties(CpEntityMapUtils.toMap(applicationInfo));
  return entity;
}
