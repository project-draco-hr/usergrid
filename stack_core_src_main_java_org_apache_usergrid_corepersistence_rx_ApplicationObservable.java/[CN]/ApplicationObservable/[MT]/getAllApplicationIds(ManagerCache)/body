{
  final Observable<Id> systemIds=Observable.from(Arrays.asList(generateApplicationId(CpNamingUtils.DEFAULT_APPLICATION_ID),generateApplicationId(CpNamingUtils.MANAGEMENT_APPLICATION_ID)));
  final ApplicationScope appScope=getApplicationScope(CpNamingUtils.MANAGEMENT_APPLICATION_ID);
  final CollectionScope appInfoCollectionScope=new CollectionScopeImpl(appScope.getApplication(),appScope.getApplication(),CpNamingUtils.getCollectionScopeNameFromCollectionName(CpNamingUtils.APPLICATION_INFOS));
  final EntityCollectionManager collectionManager=managerCache.getEntityCollectionManager(appInfoCollectionScope);
  final GraphManager gm=managerCache.getGraphManager(appScope);
  String edgeType=CpNamingUtils.getEdgeTypeFromCollectionName(CpNamingUtils.APPLICATION_INFOS);
  Id rootAppId=appScope.getApplication();
  Observable<Id> appIds=gm.loadEdgesFromSource(new SimpleSearchByEdgeType(rootAppId,edgeType,Long.MAX_VALUE,SearchByEdgeType.Order.DESCENDING,null)).flatMap(new Func1<Edge,Observable<Id>>(){
    @Override public Observable<Id> call(    final Edge edge){
      final Id appInfo=edge.getTargetNode();
      return collectionManager.load(appInfo).filter(new Func1<Entity,Boolean>(){
        @Override public Boolean call(        final Entity entity){
          if (entity == null) {
            logger.warn("Encountered a null application info for id {}",appInfo);
            return false;
          }
          return true;
        }
      }
).map(new Func1<org.apache.usergrid.persistence.model.entity.Entity,Id>(){
        @Override public Id call(        final org.apache.usergrid.persistence.model.entity.Entity entity){
          final UUID uuid=(UUID)entity.getField("applicationUuid").getValue();
          return CpNamingUtils.generateApplicationId(uuid);
        }
      }
);
    }
  }
);
  return Observable.merge(systemIds,appIds);
}
