{
  LOG.info("GeoIT.testGeo");
  UUID applicationId=setup.createApplication("testOrganization","testGeo");
  assertNotNull(applicationId);
  EntityManager em=setup.getEmf().getEntityManager(applicationId);
  assertNotNull(em);
  Map<String,Object> properties=new LinkedHashMap<String,Object>(){
{
      put("username","edanuff");
      put("email","ed@anuff.com");
      put("location",new LinkedHashMap<String,Object>(){
{
          put("latitude",37.776753);
          put("longitude",-122.407846);
        }
      }
);
    }
  }
;
  Entity user=em.create("user",properties);
  assertNotNull(user);
  em.refreshIndex();
  Point center=new Point(37.774277,-122.404744);
  Query query=Query.fromQL("select * where location within 200 of " + center.getLat() + ","+ center.getLon());
  Results listResults=em.searchCollection(em.getApplicationRef(),"users",query);
  assertEquals("No results less than 200m away from center",0,listResults.size());
  query=Query.fromQL("select * where location within 400 of " + center.getLat() + ","+ center.getLon());
  listResults=em.searchCollection(em.getApplicationRef(),"users",query);
  this.dump(listResults);
  assertEquals("1 result less than 400m away from center",1,listResults.size());
  properties.remove("location");
  em.updateProperties(user,properties);
  em.refreshIndex();
  query=Query.fromQL("select * where location within 400 of " + center.getLat() + ","+ center.getLon());
  listResults=em.searchCollection(em.getApplicationRef(),"users",query);
  this.dump(listResults);
  assertEquals(0,listResults.size());
  updatePos(em,user,37.426373,-122.14108);
  center=new Point(37.774277,-122.404744);
  query=Query.fromQL("select * where location within 200 of " + center.getLat() + ","+ center.getLon());
  listResults=em.searchCollection(em.getApplicationRef(),"users",query);
  assertEquals(0,listResults.size());
  updatePos(em,user,37.774277,-122.404744);
  center=new Point(37.776753,-122.407846);
  query=Query.fromQL("select * where location within 1000 of " + center.getLat() + ","+ center.getLon());
  listResults=em.searchCollection(em.getApplicationRef(),"users",query);
  assertEquals(1,listResults.size());
  query=Query.fromQL("select * where location within " + Integer.MAX_VALUE + " of "+ center.getLat()+ ","+ center.getLon());
  listResults=em.searchCollection(em.getApplicationRef(),"users",query);
  assertEquals(1,listResults.size());
  LinkedHashMap<String,Object> properties2=new LinkedHashMap<String,Object>(){
{
      put("username","sganyo");
      put("email","sganyo@anuff.com");
      put("location",new LinkedHashMap<String,Object>(){
{
          put("latitude",31.1);
          put("longitude",121.2);
        }
      }
);
    }
  }
;
  Entity user2=em.create("user",properties2);
  em.refreshIndex();
  assertNotNull(user2);
  query=Query.fromQL("select * where location within 10000 of " + center.getLat() + ","+ center.getLon());
  listResults=em.searchCollection(em.getApplicationRef(),"users",query);
  assertEquals(1,listResults.size());
  query=Query.fromQL("select * where location within " + Integer.MAX_VALUE + " of "+ center.getLat()+ ","+ center.getLon());
  listResults=em.searchCollection(em.getApplicationRef(),"users",query);
  assertEquals(2,listResults.size());
  center=new Point(31.14,121.27);
  query=Query.fromQL("select * where location within " + Integer.MAX_VALUE + " of "+ center.getLat()+ ","+ center.getLon());
  listResults=em.searchCollection(em.getApplicationRef(),"users",query);
  assertEquals(2,listResults.size());
  Results emSearchResults=em.searchCollection(em.getApplicationRef(),"users",Query.fromQL("location within 1000 of 37.776753, -122.407846"));
  assertEquals(1,emSearchResults.size());
  updatePos(em,user,37.776753,-122.407846);
  center=new Point(37.428526,-122.140916);
  query=Query.fromQL("select * where location within 1000 of " + center.getLat() + ","+ center.getLon());
  listResults=em.searchCollection(em.getApplicationRef(),"users",query);
  assertEquals(0,listResults.size());
  emSearchResults=em.searchCollection(em.getApplicationRef(),"users",Query.fromQL("location within 1000 of 37.428526, -122.140916"));
  assertEquals(0,emSearchResults.size());
  properties=new LinkedHashMap<String,Object>();
  properties.put("name","Brickhouse");
  properties.put("address","426 Brannan Street");
  properties.put("location",getLocation(37.779632,-122.395131));
  Entity restaurant=em.create("restaurant",properties);
  assertNotNull(restaurant);
  em.createConnection(user,"likes",restaurant);
  em.refreshIndex();
  emSearchResults=em.searchConnectedEntities(user,Query.fromQL("location within 2000 of 37.776753, -122.407846"));
  assertEquals(1,emSearchResults.size());
  emSearchResults=em.searchConnectedEntities(user,Query.fromQL("location within 1000 of 37.776753, -122.407846"));
  assertEquals(0,emSearchResults.size());
}
