{
  final CollectionScope collection=mock(CollectionScope.class);
  final UUIDService uuidService=mock(UUIDService.class);
  final MvccEntitySerializationStrategy serializationStrategy=mock(MvccEntitySerializationStrategy.class);
  final SerializationFig serializationFig=mock(SerializationFig.class);
  when(serializationFig.getBufferSize()).thenReturn(10);
  final UUID loadVersion=UUIDGenerator.newTimeUUID();
  when(uuidService.newTimeUUID()).thenReturn(loadVersion);
  final Id entityId=TestEntityGenerator.generateId();
  final CollectionIoEvent<Id> entityIoEvent=new CollectionIoEvent<Id>(collection,entityId);
  final Entity entity=TestEntityGenerator.generateEntity(entityId,loadVersion);
  entity.setField(new StringField("derp","noderp"));
  entity.setField(new StringField("derple","somemerple"));
  final MvccEntity completeMvccEntity=TestEntityGenerator.fromEntityStatus(entity,MvccEntity.Status.COMPLETE);
  final Entity entity2=TestEntityGenerator.generateEntity(entityId,UUIDGenerator.newTimeUUID());
  entity2.setField(new StringField("derple","somemerple"));
  final MvccEntity partialMvccEntity=TestEntityGenerator.fromEntityStatus(entity2,MvccEntity.Status.PARTIAL);
  final Entity entity3=TestEntityGenerator.generateEntity(entityId,UUIDGenerator.newTimeUUID());
  entity3.setField(new StringField("derp","noderp"));
  final MvccEntity partialMvccEntity2=TestEntityGenerator.fromEntityStatus(entity3,MvccEntity.Status.PARTIAL);
  final List<MvccEntity> results=Lists.newArrayList(partialMvccEntity2);
  results.add(partialMvccEntity);
  results.add(completeMvccEntity);
  when(serializationStrategy.load(collection,entityId,loadVersion,1)).thenReturn(results.iterator());
  final MutationBatch batch=mock(MutationBatch.class);
  ArgumentCaptor<MvccEntity> writtenEntityArg=ArgumentCaptor.forClass(MvccEntity.class);
  when(serializationStrategy.write(same(collection),writtenEntityArg.capture())).thenReturn(batch);
  Load load=new Load(uuidService,serializationStrategy,serializationFig);
  Entity loaded=load.call(entityIoEvent);
  assertNotNull(loaded.getField("derp"));
  assertNull(loaded.getField("derple"));
  verify(batch).execute();
  MvccEntity writtenEntity=writtenEntityArg.getValue();
  assertSame(loaded,writtenEntity.getEntity().get());
  assertNotNull(writtenEntity);
  assertNotNull(writtenEntity.getEntity().get().getField("derp"));
  assertNull(writtenEntity.getEntity().get().getField("derple"));
}
