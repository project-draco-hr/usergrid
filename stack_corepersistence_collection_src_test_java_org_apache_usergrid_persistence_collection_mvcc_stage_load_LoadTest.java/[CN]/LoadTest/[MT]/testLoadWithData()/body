{
  final Scope collection=mock(Scope.class);
  final UUIDService uuidService=mock(UUIDService.class);
  final MvccEntitySerializationStrategy serializationStrategy=mock(MvccEntitySerializationStrategy.class);
  final UUID loadVersion=UUIDGenerator.newTimeUUID();
  when(uuidService.newTimeUUID()).thenReturn(loadVersion);
  final Id entityId=TestEntityGenerator.generateId();
  final IoEvent<Id> entityIoEvent=new IoEvent<Id>(collection,entityId);
  final Entity entity=TestEntityGenerator.generateEntity(entityId,loadVersion);
  final MvccEntity mvccEntity=TestEntityGenerator.fromEntity(entity);
  final List<MvccEntity> results=Lists.newArrayList(mvccEntity);
  when(serializationStrategy.load(collection,entityId,loadVersion,1)).thenReturn(results);
  Load load=new Load(uuidService,serializationStrategy);
  Observable<Entity> response=load.call(entityIoEvent);
  Entity loaded=response.toBlockingObservable().single();
  assertSame("Same entity was loaded",entity,loaded);
}
