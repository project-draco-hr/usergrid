{
  Map<String,Object> properties=(Map<String,Object>)exportInfo.get("properties");
  Map<String,Object> storage_info=(Map<String,Object>)properties.get("storage_info");
  String bucketName=(String)storage_info.get("bucket_location");
  String accessId=(String)storage_info.get("s3_access_id");
  String secretKey=(String)storage_info.get("s3_key");
  Properties overrides=new Properties();
  overrides.setProperty("s3" + ".identity",accessId);
  overrides.setProperty("s3" + ".credential",secretKey);
  final Iterable<? extends Module> MODULES=ImmutableSet.of(new JavaUrlHttpCommandExecutorServiceModule(),new Log4JLoggingModule(),new NettyPayloadModule());
  BlobStoreContext context=ContextBuilder.newBuilder("s3").credentials(accessId,secretKey).modules(MODULES).overrides(overrides).buildView(BlobStoreContext.class);
  FileOutputStream fop=null;
  File ephemeral=new File("temp_file");
  ephemeral.deleteOnExit();
  try {
    BlobStore blobStore=context.getBlobStore();
    Blob blob=blobStore.getBlob(bucketName,filename);
    fop=new FileOutputStream(ephemeral);
    blob.getPayload().writeTo(fop);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
catch (  ContainerNotFoundException m) {
    m.printStackTrace();
  }
  return ephemeral;
}
