{
  ValidationUtils.validateApplicationScope(scope);
  GraphValidation.validateDirectedEdgeMeta(metaData);
  Preconditions.checkNotNull(metaData,"metadata must be present");
  final RangeBuilder rangeBuilder=new RangeBuilder().setLimit(graphFig.getScanPageSize());
  if (start.isPresent()) {
    final Shard shard=start.get();
    GraphValidation.valiateShard(shard);
    rangeBuilder.setStart(shard.getShardIndex());
  }
  final ScopedRowKey rowKey=ScopedRowKey.fromKey(scope,metaData);
  final RowQuery<ScopedRowKey<ApplicationScope,DirectedEdgeMeta>,Long> query=keyspace.prepareQuery(EDGE_SHARDS).setConsistencyLevel(cassandraConfig.getReadCL()).getKey(rowKey).autoPaginate(true).withColumnRange(rangeBuilder.build());
  return new ColumnNameIterator<>(query,COLUMN_PARSER,false);
}
