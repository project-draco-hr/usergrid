{
  if (t instanceof CollectionRuntimeException) {
    CollectionRuntimeException cre=(CollectionRuntimeException)t;
    final Entity entity=cre.getEntity();
    final CollectionScope scope=cre.getCollectionScope();
    MutationBatch rollbackMb=null;
    for (    final Field field : entity.getFields()) {
      if (field.isUnique()) {
        UniqueValue toDelete=new UniqueValueImpl(scope,field,entity.getId(),entity.getVersion());
        MutationBatch deleteMb=uniqueValueStrat.delete(toDelete);
        if (rollbackMb == null) {
          rollbackMb=deleteMb;
        }
 else {
          rollbackMb.mergeShallow(deleteMb);
        }
      }
    }
    if (rollbackMb != null) {
      try {
        rollbackMb.execute();
      }
 catch (      ConnectionException ex) {
        throw new RuntimeException("Error rolling back changes",ex);
      }
    }
    logEntryStrat.delete(scope,entity.getId(),entity.getVersion());
  }
}
