{
  final Observable<ApplicationScope> systemIds=Observable.from(Arrays.asList(getApplicationScope(CpNamingUtils.MANAGEMENT_APPLICATION_ID),getApplicationScope(CpNamingUtils.SYSTEM_APP_ID)));
  final ApplicationScope appScope=getApplicationScope(CpNamingUtils.MANAGEMENT_APPLICATION_ID);
  final EntityCollectionManager collectionManager=entityCollectionManagerFactory.createCollectionManager(appScope);
  final GraphManager gm=graphManagerFactory.createEdgeManager(appScope);
  String edgeType=CpNamingUtils.getEdgeTypeFromCollectionName(CpNamingUtils.APPLICATION_INFOS);
  Id rootAppId=appScope.getApplication();
  Observable<ApplicationScope> appIds=gm.loadEdgesFromSource(new SimpleSearchByEdgeType(rootAppId,edgeType,Long.MAX_VALUE,SearchByEdgeType.Order.DESCENDING,null)).flatMap(new Func1<Edge,Observable<ApplicationScope>>(){
    @Override public Observable<ApplicationScope> call(    final Edge edge){
      final Id appInfo=edge.getTargetNode();
      return collectionManager.load(appInfo).filter(new Func1<Entity,Boolean>(){
        @Override public Boolean call(        final Entity entity){
          if (entity == null) {
            logger.warn("Encountered a null application info for id {}",appInfo);
            return false;
          }
          return true;
        }
      }
).map(new Func1<Entity,ApplicationScope>(){
        @Override public ApplicationScope call(        final Entity entity){
          final UUID uuid=UUIDUtils.tryExtractUUID(entity.getField(Schema.PROPERTY_APPLICATION_ID).getValue().toString());
          return getApplicationScope(uuid);
        }
      }
);
    }
  }
);
  return Observable.merge(systemIds,appIds);
}
