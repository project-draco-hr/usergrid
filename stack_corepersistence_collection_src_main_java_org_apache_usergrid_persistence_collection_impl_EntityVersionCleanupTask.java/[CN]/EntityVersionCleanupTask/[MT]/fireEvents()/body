{
  final int listenerSize=listeners.size();
  if (listenerSize == 0) {
    return;
  }
  if (listenerSize == 1) {
    listeners.get(0).versionDeleted(scope,entityId,version);
    return;
  }
  LOG.debug("Started firing {} listeners",listenerSize);
  Observable.from(listeners).parallel(new Func1<Observable<EntityVersionDeleted>,Observable<EntityVersionDeleted>>(){
    @Override public Observable<EntityVersionDeleted> call(    final Observable<EntityVersionDeleted> entityVersionDeletedObservable){
      return entityVersionDeletedObservable.doOnNext(new Action1<EntityVersionDeleted>(){
        @Override public void call(        final EntityVersionDeleted listener){
          listener.versionDeleted(scope,entityId,version);
        }
      }
);
    }
  }
,Schedulers.io()).toBlocking().last();
  LOG.debug("Finished firing {} listeners",listenerSize);
}
