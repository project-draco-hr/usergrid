{
  if (buf.readableBytes() < 4) {
    logger.info("Needed at least 4 bytes, only " + buf.readableBytes() + " available");
    return null;
  }
  int length=buf.getInt(buf.readerIndex());
  if (length < 0) {
    logger.info("Negative length " + length);
    return null;
  }
  if (buf.readableBytes() < length) {
    logger.info("Needed " + length + " bytes, only "+ buf.readableBytes()+ " available");
    return null;
  }
  ChannelBuffer frame=buf.readSlice(length);
  int opCode=frame.getInt(frame.readerIndex() + 12);
  Message message=null;
  if (opCode == Message.OP_DELETE) {
    message=new OpDelete();
  }
 else   if (opCode == Message.OP_GET_MORE) {
    message=new OpGetMore();
  }
 else   if (opCode == Message.OP_INSERT) {
    message=new OpInsert();
  }
 else   if (opCode == Message.OP_KILL_CURSORS) {
    message=new OpKillCursors();
  }
 else   if (opCode == Message.OP_MSG) {
    message=new OpMsg();
  }
 else   if (opCode == Message.OP_QUERY) {
    message=new OpQuery();
  }
 else   if (opCode == Message.OP_REPLY) {
    message=new OpReply();
  }
 else   if (opCode == Message.OP_UPDATE) {
    message=new OpUpdate();
  }
  if (message != null) {
    message.decode(frame);
  }
 else {
    logger.info("Mongo unrecongnized message opcode " + opCode + " received");
  }
  return message;
}
