{
  ValidationUtils.validateApplicationScope(scope);
  GraphValidation.validateEdge(edge);
  final Id scopeId=scope.getApplication();
  final Id source=edge.getSourceNode();
  final Id target=edge.getTargetNode();
  final String edgeType=edge.getType();
  final long timestamp=edge.getTimestamp();
  final MutationBatch batch=keyspace.prepareMutationBatch().withConsistencyLevel(cassandraConfig.getWriteCL()).withTimestamp(timestamp);
  final int sourceKeyBucket=idExpandingShardLocator.getCurrentBucket(source);
  final BucketScopedRowKey<Id> sourceKey=BucketScopedRowKey.fromKey(scopeId,source,sourceKeyBucket);
  batch.withRow(CF_SOURCE_EDGE_TYPES,sourceKey).putColumn(edgeType,HOLDER);
  final EdgeIdTypeKey sourceTargetTypeKey=new EdgeIdTypeKey(source,edgeType);
  final int sourceTargetTypeBucket=edgeTypeExpandingShardLocator.getCurrentBucket(sourceTargetTypeKey);
  final BucketScopedRowKey<EdgeIdTypeKey> sourceTypeKey=BucketScopedRowKey.fromKey(scopeId,sourceTargetTypeKey,sourceTargetTypeBucket);
  batch.withRow(CF_SOURCE_EDGE_ID_TYPES,sourceTypeKey).putColumn(target.getType(),HOLDER);
  final int targetKeyBucket=idExpandingShardLocator.getCurrentBucket(target);
  final BucketScopedRowKey<Id> targetKey=BucketScopedRowKey.fromKey(scopeId,target,targetKeyBucket);
  batch.withRow(CF_TARGET_EDGE_TYPES,targetKey).putColumn(edgeType,HOLDER);
  final EdgeIdTypeKey targetSourceTypeKey=new EdgeIdTypeKey(target,edgeType);
  final int targetSourceTypeKeyBucket=edgeTypeExpandingShardLocator.getCurrentBucket(targetSourceTypeKey);
  final BucketScopedRowKey<EdgeIdTypeKey> targetTypeKey=BucketScopedRowKey.fromKey(scopeId,targetSourceTypeKey,targetSourceTypeKeyBucket);
  batch.withRow(CF_TARGET_EDGE_ID_TYPES,targetTypeKey).putColumn(source.getType(),HOLDER);
  return batch;
}
