{
  createAndTestRoles(ServiceAction.PUT,"manager","Manager Title",600000l);
  createAndTestPermission(ServiceAction.PUT,"manager","access:/**");
  createAndTestPermission(ServiceAction.PUT,"manager","access:/places/**");
  createAndTestPermission(ServiceAction.PUT,"manager","access:/faces/names/**");
  Query query=new Query();
  query.setPermissions(Collections.singletonList("access:/places/**"));
  ServiceResults results=app.invokeService(ServiceAction.DELETE,"roles","manager","permissions",query);
  Set<String> data=(Set<String>)results.getData();
  assertTrue(data.contains("access:/**"));
  assertTrue(data.contains("access:/faces/names/**"));
  assertFalse(data.contains("access:/places/**"));
  Set<String> permissions=app.getRolePermissions("manager");
  assertTrue(permissions.contains("access:/**"));
  assertTrue(data.contains("access:/faces/names/**"));
  assertFalse(data.contains("access:/places/**"));
  query=new Query();
  query.setPermissions(Collections.singletonList("access:/faces/names/**"));
  results=app.invokeService(ServiceAction.DELETE,"roles","manager","permissions",query);
  data=(Set<String>)results.getData();
  assertTrue(data.contains("access:/**"));
  assertFalse(data.contains("access:/faces/names/**"));
  assertFalse(data.contains("access:/places/**"));
  permissions=app.getRolePermissions("manager");
  assertTrue(permissions.contains("access:/**"));
  assertFalse(data.contains("access:/faces/names/**"));
  assertFalse(data.contains("access:/places/**"));
  query=new Query();
  query.setPermissions(Collections.singletonList("access:/**"));
  results=app.invokeService(ServiceAction.DELETE,"roles","manager","permissions",query);
  data=(Set<String>)results.getData();
  assertFalse(data.contains("access:/**"));
  assertFalse(data.contains("access:/faces/names/**"));
  assertFalse(data.contains("access:/places/**"));
  permissions=app.getRolePermissions("manager");
  assertFalse(permissions.contains("access:/**"));
  assertFalse(data.contains("access:/faces/names/**"));
  assertFalse(data.contains("access:/places/**"));
}
