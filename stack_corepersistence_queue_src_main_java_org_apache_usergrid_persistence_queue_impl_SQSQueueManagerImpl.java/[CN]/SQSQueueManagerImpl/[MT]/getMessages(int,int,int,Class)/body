{
  if (sqs == null) {
    LOG.error("Sqs is null");
    return new ArrayList<>();
  }
  waitTime=waitTime / 1000;
  String url=getQueue().getUrl();
  LOG.info("Getting {} messages from {}",limit,url);
  ReceiveMessageRequest receiveMessageRequest=new ReceiveMessageRequest(url);
  receiveMessageRequest.setMaxNumberOfMessages(limit);
  receiveMessageRequest.setVisibilityTimeout(transactionTimeout);
  receiveMessageRequest.setWaitTimeSeconds(waitTime);
  ReceiveMessageResult result=sqs.receiveMessage(receiveMessageRequest);
  List<Message> messages=result.getMessages();
  LOG.info("Received {} messages from {}",messages.size(),url);
  List<QueueMessage> queueMessages=new ArrayList<>(messages.size());
  for (  Message message : messages) {
    Object body;
    try {
      body=fromString(message.getBody(),klass);
    }
 catch (    Exception e) {
      LOG.error("failed to deserialize message",e);
      throw new RuntimeException(e);
    }
    QueueMessage queueMessage=new QueueMessage(message.getMessageId(),message.getReceiptHandle(),body,message.getAttributes().get("type"));
    queueMessages.add(queueMessage);
  }
  return queueMessages;
}
