{
  ValidationUtils.validateOrganizationScope(scope);
  EdgeUtils.validateSearchByEdgeType(edgeType);
  final Id targetId=edgeType.getNode();
  final String type=edgeType.getType();
  final String targetType=edgeType.getIdType();
  final UUID maxVersion=edgeType.getMaxVersion();
  return getEdges(GRAPH_SOURCE_NODE_TARGET_TYPE,new EdgeSearcher<RowKeyType>(scope,maxVersion,edgeType.last()){
    @Override protected RowKeyType generateRowKey(){
      return new RowKeyType(targetId,type,targetType);
    }
    @Override protected DirectedEdge getStartColumn(    final Edge last){
      return new DirectedEdge(last.getTargetNode(),last.getVersion());
    }
    @Override protected MarkedEdge createEdge(    final DirectedEdge edge,    final boolean marked){
      return new SimpleMarkedEdge(targetId,type,edge.id,edge.version,marked);
    }
  }
);
}
