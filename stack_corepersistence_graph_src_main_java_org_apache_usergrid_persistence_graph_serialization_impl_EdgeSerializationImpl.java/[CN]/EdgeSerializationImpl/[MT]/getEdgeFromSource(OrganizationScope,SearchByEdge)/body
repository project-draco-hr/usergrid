{
  ValidationUtils.validateOrganizationScope(scope);
  EdgeUtils.validateSearchByEdge(search);
  final Id targetId=search.targetNode();
  final Id sourceId=search.sourceNode();
  final String type=search.getType();
  final UUID maxVersion=search.getMaxVersion();
  return getEdges(GRAPH_SOURCE_NODE_EDGES,new EdgeSearcher<RowKey>(scope,search.last()){
    @Override public void setRange(    final RangeBuilder builder){
      super.setRange(builder);
      final DirectedEdge last=new DirectedEdge(targetId,maxVersion);
      final ByteBuffer colValue=EDGE_SERIALIZER.createSearchEdgeInclusive(last);
      builder.setEnd(colValue);
    }
    @Override protected RowKey generateRowKey(){
      return new RowKey(sourceId,type);
    }
    @Override protected DirectedEdge getStartColumn(    final Edge last){
      return new DirectedEdge(last.getTargetNode(),last.getVersion());
    }
    @Override protected Edge createEdge(    final DirectedEdge edge){
      return new SimpleEdge(sourceId,type,edge.id,edge.version);
    }
  }
);
}
