{
  ValidationUtils.validateApplicationScope(scope);
  GraphValidation.validateSearchByEdge(search);
  final Id targetId=search.targetNode();
  final Id sourceId=search.sourceNode();
  final String type=search.getType();
  final long maxTimestamp=search.getMaxTimestamp();
  final DirectedEdgeMeta versionMetaData=DirectedEdgeMeta.fromEdge(sourceId,targetId,type);
  final Iterator<ShardEntryGroup> readShards=edgeShardStrategy.getReadShards(scope,maxTimestamp,versionMetaData);
  return new ShardGroupColumnIterator(scope,versionMetaData,shardGroupDeletion,readShards){
    @Override protected Iterator<MarkedEdge> getIterator(    final Collection<Shard> readShards){
      return shardedEdgeSerialization.getEdgeVersions(edgeColumnFamilies,scope,search,readShards);
    }
  }
;
}
