{
  UUID id=UUIDUtils.newTimeUUID();
  String username="username" + id;
  String name="name" + id;
  ApiResponse response=client.createUser(username,name,id + "@usergrid.org","password");
  assertNull("Error was: " + response.getErrorDescription(),response.getError());
  refreshIndex("test-organization","test-app");
  UUID createdId=response.getEntities().get(0).getUuid();
  JsonNode node=mapper.readTree(resource().path("/test-organization/test-app/users/" + createdId).queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).delete(String.class));
  assertNull(node.get("errors"));
  Query results=client.queryUsers(String.format("username = '%s'",name));
  assertEquals(0,results.getResponse().getEntities(User.class).size());
  response=client.createUser(username,name,id + "@usergrid.org","password");
  assertNull("Error was: " + response.getErrorDescription(),response.getError());
  refreshIndex("test-organization","test-app");
  createdId=response.getEntities().get(0).getUuid();
  assertNotNull(createdId);
}
