{
  UUID id=UUIDUtils.newTimeUUID();
  String name="name1" + id;
  String email="email1" + id + "@usergrid.org";
  User entity=new User(email,name,email,"password");
  entity=new User(usersResource.post(entity));
  UUID userId=entity.getUuid();
  Entity role=new Entity();
  role.put("name","connectionQuerybyEmail1");
  role=this.app().collection("roles").post(role);
  UUID roleId1=role.getUuid();
  Map<String,Object> perms=new HashMap<>();
  perms.put("permission","get:/stuff/**");
  Entity perms1=this.app().collection("roles").entity(roleId1.toString()).connection("permissions").post(new Entity(perms));
  role=new Entity();
  role.put("name","connectionQuerybyEmail2");
  role=this.app().collection("roles").post(role);
  UUID roleId2=role.getUuid();
  perms=new HashMap<>();
  perms.put("permission","get:/stuff/**");
  Entity perms2=this.app().collection("roles").entity(roleId2.toString()).connection("permissions").post(new Entity(perms));
  refreshIndex();
  Entity perms3=this.app().collection("roles").entity(roleId1.toString()).connection("users").entity(userId.toString()).post();
  assertEquals(userId.toString(),perms3.getUuid().toString());
  Entity perms4=this.app().collection("roles").entity(roleId2).connection("users").entity(userId).post();
  assertEquals(userId.toString(),perms4.getUuid().toString());
  refreshIndex();
  Collection userRoles=this.app().collection("roles").entity(roleId2).connection("users").get(new QueryParameters().setQuery("select%20*%20where%20username%20=%20'" + email + "'"));
  assertEquals(userId.toString(),((Entity)userRoles.iterator().next()).getUuid().toString());
  userRoles=this.app().collection("roles").entity(roleId1).connection("users").get(new QueryParameters().setQuery("select%20*%20where%20username%20=%20'" + email + "'"));
  assertEquals(userId.toString(),((Entity)userRoles.iterator().next()).getUuid().toString());
  this.app().collection("roles").entity(roleId1).delete();
  try {
    userRoles=this.app().collection("roles").entity(roleId1).connection("users").get(new QueryParameters().setQuery("select%20*%20where%20username%20=%20'" + email + "'"));
    assertNull(userRoles);
  }
 catch (  UniformInterfaceException e) {
    assertEquals(Status.NOT_FOUND.getStatusCode(),e.getResponse().getStatus());
  }
  userRoles=this.app().collection("roles").entity(roleId2).connection("users").get(new QueryParameters().setQuery("select%20*%20where%20username%20=%20'" + email + "'"));
  assertEquals(userId.toString(),userRoles.getResponse().getEntities().get(0).getUuid().toString());
}
