{
  String roleName="rolename";
  String username="username";
  String name="name";
  String email="email" + "@usergrid.org";
  User user=new User(username,name,email,"password");
  user=new User(usersResource.post(user));
  UUID createdId=user.getUuid();
  Entity role=new Entity().chainPut("title",roleName).chainPut("name",roleName);
  this.app().collection("roles").post(role);
  refreshIndex();
  role=usersResource.entity(createdId).collection("roles").entity(roleName).post();
  refreshIndex();
  assertNotNull(role);
  assertNotNull(role.get("name"));
  assertEquals(role.get("name").toString(),roleName);
  role=usersResource.entity(createdId).collection("roles").entity(roleName).get();
  assertNotNull(role);
  assertNotNull(role.get("name"));
  assertEquals(role.get("name").toString(),roleName);
  ApiResponse response=usersResource.entity(createdId).collection("roles").entity(roleName).delete();
  try {
    role=usersResource.entity(createdId).collection("roles").entity(roleName).get();
    assertNull(role);
  }
 catch (  ClientErrorException e) {
    assertEquals(e.getResponse().getStatus(),Response.Status.NOT_FOUND.getStatusCode());
  }
}
