{
  final Id entityId=event.getData();
  final UUID version=uuidService.newTimeUUID();
  final EntityCollection entityCollection=event.getCollectionContext();
  final MvccLogEntry startEntry=new MvccLogEntryImpl(entityId,version,Stage.ACTIVE);
  MutationBatch write=logStrategy.write(entityCollection,startEntry);
  try {
    write.execute();
  }
 catch (  ConnectionException e) {
    LOG.error("Failed to execute write asynchronously ",e);
    throw new CollectionRuntimeException("Failed to execute write asynchronously ",e);
  }
  final MvccEntityImpl nextStage=new MvccEntityImpl(entityId,version,Optional.<Entity>absent());
  eventBus.post(new DeleteCommit(entityCollection,nextStage,event.getResult()));
}
