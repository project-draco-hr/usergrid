{
  int failCount=Integer.parseInt(props.getProperty(FAIL_PROP));
  long sleepTime=Long.parseLong(props.getProperty(RUNLOOP_PROP));
  FailureJobExceuction job=cassandraResource.getBean("failureJobExceuction",FailureJobExceuction.class);
  int latchValue=failCount + 1;
  job.setLatch(latchValue);
  JobData returned=scheduler.createJob("failureJobExceuction",System.currentTimeMillis(),new JobData());
  boolean waited=getJobListener().blockTilDone(3,(failCount + 2) * sleepTime + 5000L);
  assertTrue("Jobs ran",waited);
  assertTrue(failCount + " failures resulted",getJobListener().getFailureCount() == failCount);
  assertTrue(1 + " success resulted",getJobListener().getSuccessCount() == 1);
  assertEquals(1,job.getLatchCount());
  scheduler.refreshIndex();
  JobStat stat=scheduler.getStatsForJob(returned.getJobName(),returned.getUuid());
  assertEquals(latchValue,stat.getTotalAttempts());
  assertEquals(latchValue,stat.getRunCount());
  assertEquals(0,stat.getDelayCount());
}
