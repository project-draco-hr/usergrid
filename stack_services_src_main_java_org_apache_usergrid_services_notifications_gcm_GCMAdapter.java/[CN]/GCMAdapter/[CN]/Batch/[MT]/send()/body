{
  if (ids.size() == 0)   return;
  Sender sender=new Sender(notifier.getApiKey());
  Message.Builder builder=new Message.Builder();
  builder.setData(payload);
  Message message=builder.build();
  MulticastResult multicastResult=sender.send(message,ids,SEND_RETRIES);
  LOG.debug("sendNotification result: {}",multicastResult);
  for (int i=0; i < multicastResult.getResults().size(); i++) {
    Result result=multicastResult.getResults().get(i);
    if (result.getMessageId() != null) {
      String canonicalRegId=result.getCanonicalRegistrationId();
      trackers.get(i).completed(canonicalRegId);
    }
 else {
      String error=result.getErrorCodeName();
      trackers.get(i).failed(error,error);
      if (Constants.ERROR_NOT_REGISTERED.equals(error) || Constants.ERROR_INVALID_REGISTRATION.equals(error)) {
        inactiveDevices.put(ids.get(i),new Date());
      }
    }
  }
  this.ids.clear();
  this.trackers.clear();
}
