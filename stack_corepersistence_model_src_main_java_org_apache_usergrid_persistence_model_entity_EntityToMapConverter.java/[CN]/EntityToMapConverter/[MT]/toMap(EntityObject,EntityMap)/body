{
  for (  Object f : entity.getFields().toArray()) {
    Field field=(Field)f;
    if (f instanceof ListField || f instanceof ArrayField) {
      List list=(List)field.getValue();
      entityMap.put(field.getName(),new ArrayList(processCollectionForMap(list)));
    }
 else     if (f instanceof SetField) {
      Set set=(Set)field.getValue();
      entityMap.put(field.getName(),new ArrayList(processCollectionForMap(set)));
    }
 else     if (f instanceof EntityObjectField) {
      EntityObject eo=(EntityObject)field.getValue();
      entityMap.put(field.getName(),toMap(eo));
    }
 else     if (f instanceof StringField) {
      entityMap.put(field.getName(),((String)field.getValue()));
    }
 else     if (f instanceof LocationField) {
      LocationField locField=(LocationField)f;
      Map<String,Object> locMap=new HashMap<String,Object>();
      locMap.put(LAT,locField.getValue().getLatitude());
      locMap.put(LON,locField.getValue().getLongitude());
      entityMap.put(field.getName(),locMap);
    }
 else     if (f instanceof ByteArrayField) {
      ByteArrayField bf=(ByteArrayField)f;
      byte[] serilizedObj=bf.getValue();
      Object o;
      try {
        o=objectMapper.readValue(serilizedObj,bf.getClassinfo());
      }
 catch (      IOException e) {
        throw new RuntimeException("Can't deserialize object ",e);
      }
      entityMap.put(bf.getName(),o);
    }
 else {
      entityMap.put(field.getName(),field.getValue());
    }
  }
  return entityMap;
}
