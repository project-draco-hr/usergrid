{
  Id appId=new SimpleId("testGeo");
  Id orgId=new SimpleId("testDistanceByLimit");
  EntityManagerFacade em=new EntityManagerFacade(orgId,appId,cmf,cif);
  assertNotNull(em);
  int numEntities=10;
  float minLattitude=-90;
  float maxLattitude=90;
  float minLongitude=-180;
  float maxLongitude=180;
  float lattitudeDelta=(maxLattitude - minLattitude) / numEntities;
  float longitudeDelta=(maxLongitude - minLongitude) / numEntities;
  for (int i=0; i < numEntities; i++) {
    final float latitude=minLattitude + lattitudeDelta * i;
    final float longitude=minLongitude + longitudeDelta * i;
    Map<String,Object> location=new HashMap<String,Object>(){
{
        put("latitude",latitude);
        put("longitude",longitude);
      }
    }
;
    Map<String,Object> data=new HashMap<String,Object>(2);
    data.put("name",String.valueOf(i));
    data.put("location",location);
    em.create("car",data);
  }
  Query query=new Query();
  query.addFilter("location within " + (50000 * 1000) + " of -90, -180");
  query.setLimit(100);
  int count=0;
  do {
    Results results=em.searchCollection(em.getApplicationRef(),"cars",query);
    for (    Entity entity : results.getEntities()) {
      count++;
    }
    query.setCursor(results.getCursor());
  }
 while (query.getCursor() != null);
  assertEquals(numEntities,count);
}
