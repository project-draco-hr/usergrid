{
  String groupId=null;
  String groupPath=context.getAppName();
  try {
    Map<String,Object> groupMap=new HashMap<String,Object>();
    groupMap.put("title","Old Title");
    groupMap.put("path",groupPath);
    JsonNode groupJson=resource().path(context.getOrgName() + "/" + context.getAppName()+ "/groups").queryParam("access_token",context.getActiveUser().getToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(JsonNode.class,groupMap);
    groupId=groupJson.get("entities").get(0).get("uuid").getTextValue();
  }
 catch (  UniformInterfaceException e) {
    fail("Error creating group: " + IOUtils.toString(e.getResponse().getEntityInputStream()));
  }
  assertTitle(groupId,"Old Title");
  try {
    Map<String,Object> group=new HashMap<String,Object>();
    group.put("title","New Title");
    resource().path(context.getOrgName() + "/" + context.getAppName()+ "/groups/"+ groupPath).queryParam("access_token",context.getActiveUser().getToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).put(JsonNode.class,group);
  }
 catch (  UniformInterfaceException e) {
    fail("Error updating group: " + IOUtils.toString(e.getResponse().getEntityInputStream()));
  }
  assertTitle(groupId,"New Title");
  try {
    Map<String,Object> group=new HashMap<String,Object>();
    group.put("title","Even Newer Title");
    resource().path(context.getOrgName() + "/" + context.getAppName()+ "/groups/"+ groupId).queryParam("access_token",context.getActiveUser().getToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).put(JsonNode.class,group);
  }
 catch (  UniformInterfaceException e) {
    fail("Error updating group: " + IOUtils.toString(e.getResponse().getEntityInputStream()));
  }
  assertTitle(groupId,"Even Newer Title");
}
