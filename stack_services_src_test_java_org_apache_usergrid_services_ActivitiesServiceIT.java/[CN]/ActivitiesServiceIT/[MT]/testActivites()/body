{
  app.put("username","edanuff");
  app.put("email","ed@anuff.com");
  Entity userA=app.testRequest(ServiceAction.POST,1,"users").getEntity();
  assertNotNull(userA);
  app.put("username","djacobs");
  app.put("email","djacobs@gmail.com");
  Entity userB=app.testRequest(ServiceAction.POST,1,"users").getEntity();
  assertNotNull(userB);
  app.put("username","natpo");
  app.put("email","npodrazik@gmail.com");
  Entity userC=app.testRequest(ServiceAction.POST,1,"users").getEntity();
  assertNotNull(userC);
  app.testRequest(ServiceAction.POST,1,"users",userB.getUuid(),"connections","following",userA.getUuid());
  app.testRequest(ServiceAction.POST,1,"users",userC.getUuid(),"connections","following",userA.getUuid());
  app.testRequest(ServiceAction.GET,0,"users",userA.getUuid(),"activities");
  app.add(Activity.newActivity(Activity.VERB_POST,null,"I ate a sammich",null,userA,null,"tweet",null,null));
  Entity activity=app.testRequest(ServiceAction.POST,1,"users",userA.getUuid(),"activities").getEntity();
  assertNotNull(activity);
  app.testRequest(ServiceAction.GET,1,"users",userA.getUuid(),"activities");
  app.testRequest(ServiceAction.GET,1,null,"activities");
  app.testRequest(ServiceAction.GET,1,null,"users",userB.getUuid(),"feed");
  app.testRequest(ServiceAction.GET,1,null,"users",userC.getUuid(),"feed");
  app.add(Activity.newActivity(Activity.VERB_POST,null,"I ate another sammich",null,userA,null,"tweet",null,null));
  activity=app.testRequest(ServiceAction.POST,1,"users",userA.getUuid(),"activities").getEntity();
  assertNotNull(activity);
  app.add(Activity.newActivity(Activity.VERB_POST,null,"I ate a cookie",null,userA,null,"tweet",null,null));
  activity=app.testRequest(ServiceAction.POST,1,"users",userA.getUuid(),"activities").getEntity();
  assertNotNull(activity);
  app.add(Activity.newActivity(Activity.VERB_CHECKIN,null,"I'm at the cookie shop",null,userA,null,Activity.OBJECT_TYPE_PLACE,"Cookie Shop",null));
  activity=app.testRequest(ServiceAction.POST,1,"users",userA.getUuid(),"activities").getEntity();
  assertNotNull(activity);
  app.testRequest(ServiceAction.GET,4,null,"users",userC.getUuid(),"feed");
  app.testRequest(ServiceAction.GET,2,null,"users",userC.getUuid(),"feed",Query.fromQL("select * where content contains 'cookie'"));
  app.testRequest(ServiceAction.GET,1,"users",userC.getUuid(),"feed",Query.fromQL("select * where verb='post' and content contains 'cookie'"));
  app.put("username","finn");
  app.put("email","finn@ooo.com");
  Entity userD=app.testRequest(ServiceAction.POST,1,"users").getEntity();
  assertNotNull(userD);
  app.testRequest(ServiceAction.POST,1,"users",userD.getUuid(),"connections","following",userA.getUuid());
  app.testRequest(ServiceAction.GET,4,null,"users",userD.getUuid(),"feed");
}
