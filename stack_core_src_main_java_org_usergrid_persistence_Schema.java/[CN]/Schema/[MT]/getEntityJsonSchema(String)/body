{
  Class<?> cls=getEntityClass(entityType);
  if (cls == null) {
    cls=DynamicEntity.class;
  }
  try {
    JsonNode schemaNode=mapper.generateJsonSchema(cls).getSchemaNode();
    if (schemaNode != null) {
      JsonNode properties=schemaNode.get("properties");
      if (properties instanceof ObjectNode) {
        Set<String> fieldsToRemove=new LinkedHashSet<String>();
        Iterator<String> i=properties.getFieldNames();
        while (i.hasNext()) {
          String propertyName=i.next();
          if (!hasProperty(entityType,propertyName)) {
            fieldsToRemove.add(propertyName);
          }
 else {
            ObjectNode property=(ObjectNode)properties.get(propertyName);
            if (isRequiredProperty(entityType,propertyName)) {
              property.put("optional",false);
            }
          }
        }
        ((ObjectNode)properties).remove(fieldsToRemove);
      }
    }
    return schemaNode;
  }
 catch (  Exception e) {
    logger.error("Unable to get schema for entity type " + entityType,e);
  }
  return null;
}
