{
  try {
    AsyncBlobStore blobStore=context.getAsyncBlobStore();
    blobStore.createContainerInLocation(null,"usergrid-test");
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    long copied=IOUtils.copyLarge(inputStream,baos,0,FIVE_MB);
    BlobBuilder.PayloadBlobBuilder bb=null;
    if (copied == FIVE_MB) {
      File f;
      f=File.createTempFile(asset.getUuid().toString(),"tmp");
      f.deleteOnExit();
      OutputStream os=null;
      try {
        os=new BufferedOutputStream(new FileOutputStream(f.getAbsolutePath()));
        copied=IOUtils.copyLarge(inputStream,os,0,(FileUtils.ONE_GB * 5));
        bb=blobStore.blobBuilder(asset.getUuid().toString()).payload(f).calculateMD5().contentType(getMimeType(asset,f));
      }
 catch (      Exception ex) {
        ex.printStackTrace();
      }
 finally {
        IOUtils.closeQuietly(os);
        if (f != null && f.exists()) {
          f.delete();
        }
      }
    }
 else {
      byte[] data=baos.toByteArray();
      copied=data.length;
      bb=blobStore.blobBuilder(asset.getUuid().toString()).payload(data).calculateMD5().contentType(getMimeType(asset,data));
    }
    asset.setProperty("content-length",copied);
    if (asset.getProperty("content-disposition") != null) {
      bb.contentDisposition(asset.getProperty("content-disposition").toString());
    }
    Blob blob=bb.build();
    String md5sum=Hex.encodeHexString(blob.getMetadata().getContentMetadata().getContentMD5());
    asset.setProperty("checksum",md5sum);
    ListenableFuture<String> futureETag=blobStore.putBlob("usergrid-test",blob,PutOptions.Builder.multipart());
    if (copied < FIVE_MB) {
      String eTag=futureETag.get();
      asset.setProperty("etag",eTag);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
