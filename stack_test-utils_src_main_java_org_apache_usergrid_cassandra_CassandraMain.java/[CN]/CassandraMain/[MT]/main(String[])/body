{
  String yamlFileName=args[0];
  String tmpDirName=args[1];
  String log4jConfig=args[2];
  int rpcPort=Integer.parseInt(args[3]);
  int storagePort=Integer.parseInt(args[4]);
  int sslStoragePort=Integer.parseInt(args[5]);
  int nativeTransportPort=Integer.parseInt(args[6]);
  System.setProperty("cassandra." + RPC_PORT_KEY,Integer.toString(rpcPort));
  System.setProperty("cassandra." + STORAGE_PORT_KEY,Integer.toString(storagePort));
  System.setProperty("cassandra." + SSL_STORAGE_PORT_KEY,Integer.toString(sslStoragePort));
  System.setProperty("cassandra." + NATIVE_TRANSPORT_PORT_KEY,Integer.toString(nativeTransportPort));
  System.setProperty("cassandra.url","localhost:" + Integer.toString(rpcPort));
  System.setProperty("cassandra-foreground","true");
  System.setProperty("log4j.defaultInitOverride","true");
  System.setProperty("log4j.configuration","file:" + log4jConfig);
  System.setProperty("cassandra.ring_delay_ms","100");
  System.setProperty("cassandra.config",yamlFileName);
  System.setProperty("cassandra.tempName",tmpDirName);
  LOG.info("Starting forked Cassandra: test, setting system properties for ports : " + "[rpc, storage, sslStorage, native] = [{}, {}, {}, {}]",new Object[]{rpcPort,storagePort,sslStoragePort,nativeTransportPort});
  CassandraDaemon cassandraDaemon=new CassandraDaemon();
  cassandraDaemon.activate();
  while (true) {
    Thread.sleep(1000);
  }
}
