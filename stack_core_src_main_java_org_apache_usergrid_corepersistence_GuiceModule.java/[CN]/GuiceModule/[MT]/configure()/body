{
  install(new CollectionModule());
  install(new GuicyFigModule(IndexFig.class));
  install(new FactoryModuleBuilder().implement(EntityIndex.class,EsEntityIndexImpl.class).build(EntityIndexFactory.class));
  install(new GuicyFigModule(GraphFig.class));
  bind(PostProcessObserver.class).to(CollectionIndexObserver.class);
  bind(EdgeMetadataSerialization.class).to(EdgeMetadataSerializationImpl.class);
  bind(EdgeSerialization.class).to(EdgeSerializationImpl.class);
  bind(NodeSerialization.class).to(NodeSerializationImpl.class);
  bind(CassandraConfig.class).to(CassandraConfigImpl.class);
  install(new FactoryModuleBuilder().implement(GraphManager.class,GraphManagerImpl.class).build(GraphManagerFactory.class));
  Multibinder<Migration> migrationBinding=Multibinder.newSetBinder(binder(),Migration.class);
  migrationBinding.addBinding().to(EdgeMetadataSerializationImpl.class);
  migrationBinding.addBinding().to(EdgeSerializationImpl.class);
  migrationBinding.addBinding().to(NodeSerializationImpl.class);
  bind(new TypeLiteral<TimeoutQueue<Edge>>(){
  }
).to(new TypeLiteral<LocalTimeoutQueue<Edge>>(){
  }
);
  bind(new TypeLiteral<TimeoutQueue<EdgeEvent<Edge>>>(){
  }
).to(new TypeLiteral<LocalTimeoutQueue<EdgeEvent<Edge>>>(){
  }
);
  bind(new TypeLiteral<TimeoutQueue<Id>>(){
  }
).to(new TypeLiteral<LocalTimeoutQueue<Id>>(){
  }
);
  bind(new TypeLiteral<AsyncProcessor<Edge>>(){
  }
).annotatedWith(EdgeDelete.class).to(new TypeLiteral<AsyncProcessorImpl<Edge>>(){
  }
);
  bind(new TypeLiteral<AsyncProcessor<EdgeEvent<Edge>>>(){
  }
).annotatedWith(EdgeDelete.class).to(new TypeLiteral<AsyncProcessorImpl<EdgeEvent<Edge>>>(){
  }
);
  bind(new TypeLiteral<AsyncProcessor<Id>>(){
  }
).annotatedWith(NodeDelete.class).to(new TypeLiteral<AsyncProcessorImpl<Id>>(){
  }
);
  bind(EdgeMetaRepair.class).to(EdgeMetaRepairImpl.class);
  bind(EdgeDeleteRepair.class).to(EdgeDeleteRepairImpl.class);
  bind(TimeService.class).to(TimeServiceImpl.class);
}
