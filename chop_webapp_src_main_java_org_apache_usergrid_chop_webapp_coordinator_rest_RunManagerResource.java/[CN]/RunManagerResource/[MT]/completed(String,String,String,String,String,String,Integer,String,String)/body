{
  LOG.warn("Calling completed ...");
  if (inTestMode(testMode)) {
    LOG.info("Calling /run/completed in test mode ...");
    LOG.info("{} is {}",RUNNER_HOSTNAME,runnerHost);
    LOG.info("{} is {}",COMMIT_ID,commitId);
    LOG.info("{} is {}",MODULE_GROUPID,groupId);
    LOG.info("{} is {}",MODULE_ARTIFACTID,artifactId);
    LOG.info("{} is {}",MODULE_VERSION,version);
    LOG.info("{} is {}",RUN_NUMBER,runNumber);
    LOG.info("{} is {}",TEST_CLASS,testClass);
    return Response.status(Response.Status.CREATED).entity(true).build();
  }
  LOG.info("/run/completed called ...");
  String moduleId=BasicModule.createId(groupId,artifactId,version);
  Collection<Runner> runners=runnerDao.getRunners(username,commitId,moduleId);
  Collection<Run> runs=runDao.getMap(commitId,runNumber,testClass,runners).values();
  Boolean allFinished=runs.size() == runners.size();
  CoordinatedStack stack=stackCoordinator.findCoordinatedStack(commitId,artifactId,groupId,version,username);
  Map<Runner,State> states=runnerCoordinator.getStates(runners);
  Collection<Runner> readyRunners=new LinkedList<Runner>();
  for (  Runner runner : runners) {
    State state=states.get(runner);
    if (state == State.READY) {
      readyRunners.add(runner);
    }
  }
  if (readyRunners.size() == runners.size()) {
    LOG.info("All runners are ready, sending " + SetupStackSignal.COMPLETE + " signal..");
    stack.setSetupState(SetupStackSignal.COMPLETE);
  }
  return Response.status(Response.Status.CREATED).entity(allFinished).build();
}
