{
  CustomCollection activities=context.collection("peeps");
  Map stuff=hashMap("type","chicken");
  activities.create(stuff);
  Map<String,Object> payload=new LinkedHashMap<String,Object>();
  payload.put("username","todd");
  Map<String,Object> objectOfDesire=new LinkedHashMap<String,Object>();
  objectOfDesire.put("codingmunchies","doritoes");
  resource().path("/test-organization/test-app/users").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(JsonNode.class,payload);
  payload.put("username","scott");
  resource().path("/test-organization/test-app/users").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(JsonNode.class,payload);
  ClientResponse toddWant=resource().path("/test-organization/test-app/users/todd/likes/peeps").queryParam("access_token",access_token).accept(MediaType.TEXT_HTML).type(MediaType.APPLICATION_JSON_TYPE).post(ClientResponse.class,objectOfDesire);
  assertEquals(200,toddWant.getStatus());
  JsonNode node=resource().path("/test-organization/test-app/peeps").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(JsonNode.class);
  String uuid=node.get("entities").get(0).get("uuid").getTextValue();
  try {
    node=resource().path("/test-organization/test-app/users/scott/likes/" + uuid).queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(JsonNode.class);
    assert(false);
  }
 catch (  UniformInterfaceException uie) {
    assertEquals(404,uie.getResponse().getClientResponseStatus().getStatusCode());
    return;
  }
}
