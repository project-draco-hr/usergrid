{
  String[] passwords=new String[]{"password1","password2","password3","password4","password5"};
  UserInfo user=setup.getMgmtSvc().createAdminUser(uniqueUsername(),"Ed Anuff",uniqueEmail(),passwords[0],true,false);
  assertNotNull(user);
  OrganizationInfo organization=setup.getMgmtSvc().createOrganization(uniqueOrg(),user,true);
  assertNotNull(organization);
  setup.getEmf().getEntityManager(setup.getSmf().getManagementAppId());
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[1]);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[0]);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[0]);
  Map<String,Object> props=new HashMap<String,Object>();
  props.put(OrganizationInfo.PASSWORD_HISTORY_SIZE_KEY,3);
  organization.setProperties(props);
  setup.getMgmtSvc().updateOrganization(organization);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[1]);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[2]);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[3]);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[4]);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[0]);
  setup.getEmf().getEntityManager(setup.getSmf().getManagementAppId());
  try {
    setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[3]);
    fail("password change should fail");
  }
 catch (  RecentlyUsedPasswordException e) {
  }
  props=new HashMap<String,Object>();
  props.put(OrganizationInfo.PASSWORD_HISTORY_SIZE_KEY,2);
  organization.setProperties(props);
  setup.getMgmtSvc().updateOrganization(organization);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[1]);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[2]);
  try {
    setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[0]);
    fail("password change should fail");
  }
 catch (  RecentlyUsedPasswordException e) {
  }
  try {
    setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[1]);
    fail("password change should fail");
  }
 catch (  RecentlyUsedPasswordException e) {
  }
  try {
    setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[2]);
    fail("password change should fail");
  }
 catch (  RecentlyUsedPasswordException e) {
  }
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[3]);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[0]);
  props=new HashMap<String,Object>();
  props.put(OrganizationInfo.PASSWORD_HISTORY_SIZE_KEY,1);
  organization.setProperties(props);
  setup.getMgmtSvc().updateOrganization(organization);
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[1]);
  try {
    setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[0]);
    fail("password change should fail");
  }
 catch (  RecentlyUsedPasswordException e) {
  }
  OrganizationInfo organization2=setup.getMgmtSvc().createOrganization(uniqueOrg(),user,false);
  assertNotNull(organization2);
  setup.getEntityIndex().refresh(CpNamingUtils.MANAGEMENT_APPLICATION_ID);
  Map<UUID,String> userOrganizations=setup.getMgmtSvc().getOrganizationsForAdminUser(user.getUuid());
  assertEquals("wrong number of organizations",2,userOrganizations.size());
  props=new HashMap<String,Object>();
  props.put(OrganizationInfo.PASSWORD_HISTORY_SIZE_KEY,2);
  organization2.setProperties(props);
  setup.getMgmtSvc().updateOrganization(organization2);
  try {
    setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[1]);
    fail("password change should fail");
  }
 catch (  RecentlyUsedPasswordException e) {
  }
  try {
    setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[0]);
    fail("password change should fail");
  }
 catch (  RecentlyUsedPasswordException e) {
  }
  setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[2]);
  try {
    setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[0]);
    fail("password change should fail");
  }
 catch (  RecentlyUsedPasswordException e) {
  }
  try {
    setup.getMgmtSvc().setAdminUserPassword(user.getUuid(),passwords[1]);
    fail("password change should fail");
  }
 catch (  RecentlyUsedPasswordException e) {
  }
}
