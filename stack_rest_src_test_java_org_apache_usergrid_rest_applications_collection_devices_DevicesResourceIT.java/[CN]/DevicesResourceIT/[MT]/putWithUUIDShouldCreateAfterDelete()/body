{
  Entity payload=new Entity().chainPut("name","foo");
  UUID uuid=UUID.randomUUID();
  CollectionEndpoint devicesResource=this.app().collection("devices");
  Entity entity=devicesResource.entity(uuid).put(payload);
  refreshIndex();
  assertNotNull(entity);
  String newUuid=entity.getUuid().toString();
  assertEquals(uuid.toString(),newUuid);
  ApiResponse deleteResponse=devicesResource.entity(uuid).delete();
  assertNotNull(deleteResponse.getEntities().get(0));
  refreshIndex();
  try {
    entity=devicesResource.entity(uuid).get();
    fail("should get 404 error");
  }
 catch (  ClientErrorException e) {
    assertEquals(404,e.getResponse().getStatus());
  }
  refreshIndex();
  entity=devicesResource.entity(uuid).put(payload);
  assertNotNull(entity);
  refreshIndex();
  entity=devicesResource.entity(uuid).get();
  assertNotNull(entity);
}
