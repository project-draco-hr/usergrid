{
synchronized (lock) {
    if (instance != null) {
      return instance;
    }
    Properties props=new Properties();
    try {
      props.load(ClassLoader.getSystemResourceAsStream("project.properties"));
    }
 catch (    IOException e) {
      LOG.error("Unable to load project properties: {}",e.getLocalizedMessage());
    }
    int rpcPort=Integer.parseInt(props.getProperty("cassandra.rpcPort",Integer.toString(SpringResource.DEFAULT_RPC_PORT)));
    int storagePort=Integer.parseInt(props.getProperty("cassandra.storagePort",Integer.toString(SpringResource.DEFAULT_STORAGE_PORT)));
    int sslStoragePort=Integer.parseInt(props.getProperty("cassandra.sslPort",Integer.toString(SpringResource.DEFAULT_SSL_STORAGE_PORT)));
    int nativeTransportPort=Integer.parseInt(props.getProperty("cassandra.nativeTransportPort",Integer.toString(SpringResource.DEFAULT_NATIVE_TRANSPORT_PORT)));
    String host=props.getProperty("cassandra.host",DEFAULT_HOST);
    System.setProperty("cassandra.url",host + ":" + Integer.toString(rpcPort));
    System.setProperty("cassandra.cluster",props.getProperty("cassandra.cluster","Usergrid"));
    System.setProperty("cassandra-foreground","true");
    System.setProperty("log4j.defaultInitOverride","true");
    System.setProperty("log4j.configuration","log4j.properties");
    System.setProperty("cassandra.ring_delay_ms","100");
    System.setProperty("cassandra." + RPC_PORT_KEY,Integer.toString(rpcPort));
    System.setProperty("cassandra." + STORAGE_PORT_KEY,Integer.toString(storagePort));
    System.setProperty("cassandra." + SSL_STORAGE_PORT_KEY,Integer.toString(sslStoragePort));
    System.setProperty("cassandra." + NATIVE_TRANSPORT_PORT_KEY,Integer.toString(nativeTransportPort));
    LOG.info("project.properties loaded properties for ports : " + "[rpc, storage, sslStorage, native] = [{}, {}, {}, {}]",new Object[]{rpcPort,storagePort,sslStoragePort,nativeTransportPort});
    instance=new SpringResource(rpcPort,storagePort,sslStoragePort,nativeTransportPort);
    LOG.info("Created a new instance of CassandraResource: {}",instance);
    LOG.info("Cassandra using ports {} and {}",storagePort,sslStoragePort);
    return instance;
  }
}
