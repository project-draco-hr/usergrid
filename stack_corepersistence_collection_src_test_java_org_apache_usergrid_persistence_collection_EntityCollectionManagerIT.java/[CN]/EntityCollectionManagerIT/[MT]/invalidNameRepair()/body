{
  CollectionScope context=new CollectionScopeImpl(new SimpleId("organization"),new SimpleId("test"),"test");
  Entity newEntity=new Entity(new SimpleId("test"));
  newEntity.setField(new IntegerField("count",5,true));
  newEntity.setField(new StringField("yes","fred",true));
  EntityCollectionManager manager=factory.createCollectionManager(context);
  Observable<Entity> observable=manager.write(newEntity);
  Entity createReturned=observable.toBlocking().lastOrDefault(null);
  assertNotNull("Id was assigned",createReturned.getId());
  assertNotNull("Version was assigned",createReturned.getVersion());
  Observable<Entity> loadObservable=manager.load(createReturned.getId());
  Entity loadReturned=loadObservable.toBlocking().lastOrDefault(null);
  assertEquals("Same value",createReturned,loadReturned);
  try {
    entitySerializationStrategy.delete(context,loadReturned.getId(),loadReturned.getVersion()).execute();
  }
 catch (  ConnectionException e) {
    e.printStackTrace();
    fail("Shouldn't have had trouble deleting entity");
  }
  loadObservable=manager.load(createReturned.getId());
  loadReturned=loadObservable.toBlocking().lastOrDefault(null);
  assertNull(loadReturned);
  try {
    UniqueValueSet uniqueValues=uniqueValueSerializationStrategy.load(context,loadReturned.getFields());
    assertNull(uniqueValues);
  }
 catch (  ConnectionException e) {
    e.printStackTrace();
    fail("Shouldn't have been able to load the unique entity");
  }
}
