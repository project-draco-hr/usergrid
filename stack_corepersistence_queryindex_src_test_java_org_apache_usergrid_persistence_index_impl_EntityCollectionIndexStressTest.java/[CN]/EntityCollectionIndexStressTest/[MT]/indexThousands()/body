{
  Id appId=new SimpleId("application");
  Id orgId=new SimpleId("organization");
  CollectionScope scope=new CollectionScopeImpl(appId,orgId,"characters");
  int limit=2000;
  StopWatch timer=new StopWatch();
  timer.start();
  EntityManagerFacade em=new EntityManagerFacade(orgId,appId,cmf,cif);
  for (int i=1; i <= limit; i++) {
    em.create("character",new LinkedHashMap<String,Object>(){
{
        put("username",RandomStringUtils.random(20));
        put("email",RandomStringUtils.random(20));
        put("location",new HashMap<String,Object>(){
{
            put("latitude",140);
            put("longitude",40);
          }
        }
);
      }
    }
);
    if (i % 1000 == 0) {
      log.info("   Wrote and indexed: " + i);
    }
  }
  timer.stop();
  log.info("Total time to index {} entries {}ms",limit,timer.getTime());
  timer.reset();
  em.refreshIndex();
  timer.start();
  Results results=em.searchCollection(null,"characters",Query.fromQL("location > 10"));
  int count=0;
  for (  Entity entity : results.getEntities()) {
    assertNotNull("Returned has a id",entity.getId());
    assertNotNull("Returned has a version",entity.getVersion());
    count++;
    if (count % 1000 == 0) {
      log.info("   Wrote and indexed: " + count);
    }
  }
  timer.stop();
  log.info("Total time to query & read {} entries {}ms",count,timer.getTime());
}
