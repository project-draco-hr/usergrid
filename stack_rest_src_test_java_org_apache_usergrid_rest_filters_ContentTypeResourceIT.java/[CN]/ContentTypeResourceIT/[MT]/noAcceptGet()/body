{
  User user=new User("shawn","shawn","shawn@email.com","aliensquirrel");
  this.app().collection("users").post(user);
  Token token=this.app().token().post(new Token("shawn","aliensquirrel"));
  Map<String,String> data=hashMap("name","bar");
  String json=JsonUtils.mapToFormattedJsonString(data);
  DefaultHttpClient client=new DefaultHttpClient();
  HttpHost host=new HttpHost(super.getBaseURI().getHost(),super.getBaseURI().getPort());
  HttpPost post=new HttpPost(String.format("/%s/%s/games",this.clientSetup.getOrganization().getName(),this.clientSetup.getAppName()));
  post.setEntity(new StringEntity(json));
  post.setHeader(HttpHeaders.AUTHORIZATION,"Bearer " + token.getAccessToken());
  post.setHeader(HttpHeaders.ACCEPT,MediaType.APPLICATION_JSON);
  post.setHeader(HttpHeaders.CONTENT_TYPE,"*/*");
  HttpResponse rsp=client.execute(host,post);
  printResponse(rsp);
  assertEquals(200,rsp.getStatusLine().getStatusCode());
  Header[] headers=rsp.getHeaders(HttpHeaders.CONTENT_TYPE);
  assertEquals(1,headers.length);
  assertEquals(MediaType.APPLICATION_JSON,headers[0].getValue());
  HttpPost get=new HttpPost(String.format("/%s/%s/games",this.clientSetup.getOrganization().getName(),this.clientSetup.getAppName()));
  get.setHeader(HttpHeaders.AUTHORIZATION,"Bearer " + token.getAccessToken());
  rsp=client.execute(host,get);
  printResponse(rsp);
  assertEquals(200,rsp.getStatusLine().getStatusCode());
  headers=rsp.getHeaders(HttpHeaders.CONTENT_TYPE);
  assertEquals(1,headers.length);
  assertEquals(MediaType.APPLICATION_JSON,headers[0].getValue());
}
