{
  final CollectionScope collectionScope=event.getCollectionScope();
  final IndexScope indexScope=new IndexScopeImpl(collectionScope.getOwner(),collectionScope.getName(),entityType);
  final EntityIndex entityIndex=entityIndexFactory.createEntityIndex(new ApplicationScopeImpl(collectionScope.getApplication()));
  return Observable.create(new ObservableIterator<CandidateResult>("deleteEsIndexVersions"){
    @Override protected Iterator<CandidateResult> getIterator(){
      CandidateResults results=entityIndex.getEntityVersions(indexScope,event.getEntity().getId());
      return results.iterator();
    }
  }
).subscribeOn(Schedulers.io()).buffer(serializationFig.getBufferSize()).flatMap(new Func1<List<CandidateResult>,Observable<? extends EntityVersion>>(){
    @Override public Observable<? extends EntityVersion> call(    List<CandidateResult> crs){
      List<EntityVersion> versions=new ArrayList<>();
      for (      CandidateResult entity : crs) {
        if (entity.getVersion().timestamp() <= event.getVersion().timestamp()) {
          versions.add(entity);
          entityIndex.createBatch().deindex(indexScope,entity.getId(),entity.getVersion());
        }
      }
      return Observable.from(versions);
    }
  }
);
}
