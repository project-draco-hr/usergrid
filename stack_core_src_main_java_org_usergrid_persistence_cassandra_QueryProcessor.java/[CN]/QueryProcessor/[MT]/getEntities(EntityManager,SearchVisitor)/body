{
  if (rootNode == null) {
    return null;
  }
  rootNode.visit(visitor);
  ResultIterator itr=visitor.getResults();
  List<Entity> results=null;
  if (sorts.size() > 0) {
    logger.info("Performing in-memory sort of entities");
    ComparatorChain chain=new ComparatorChain();
    for (    SortPredicate sort : sorts) {
      chain.addComparator(new EntityPropertyComparator(sort.getPropertyName()),sort.getDirection() == SortDirection.DESCENDING);
    }
    results=new ArrayList<Entity>(RelationManagerImpl.PAGE_SIZE * 2);
    for (int i=0; i < RelationManagerImpl.MAX_LOAD / RelationManagerImpl.PAGE_SIZE; i++) {
      results.addAll(loadEntities(em,itr,RelationManagerImpl.PAGE_SIZE));
      Collections.sort(results,chain);
      if (results.size() > size) {
        results.subList(size,results.size()).clear();
      }
    }
  }
 else {
    results=loadEntities(em,itr,size);
  }
  return results;
}
