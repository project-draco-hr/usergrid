{
  int opCount=0;
  if (rootOperand != null) {
    TreeEvaluator visitor=new TreeEvaluator();
    rootOperand.visit(visitor);
    rootNode=visitor.getRootNode();
    opCount=visitor.getSliceCount();
  }
  if (sorts.size() > 0) {
    SliceNode sorts=generateSorts(opCount);
    opCount+=sorts.getAllSlices().size();
    if (rootNode != null) {
      AndNode and=new AndNode(sorts,rootNode);
      rootNode=and;
    }
 else {
      rootNode=sorts;
    }
  }
  if (rootNode == null) {
    if (query.containsSingleNameOrEmailIdentifier()) {
      Identifier ident=query.getSingleIdentifier();
      if (query.getEntityType().equals(User.ENTITY_TYPE) && ident.isEmail()) {
        rootNode=new EmailIdentifierNode(ident);
      }
 else {
        rootNode=new NameIdentifierNode(ident.getName());
      }
    }
 else     if (query.containsSingleUuidIdentifier()) {
      rootNode=new UuidIdentifierNode(query.getSingleUuidIdentifier());
    }
 else {
      UUID startResult=query.getStartResult();
      boolean startResultSet=startResult != null;
      AllNode allNode=new AllNode(0,startResultSet);
      if (startResultSet) {
        cursorCache.setNextCursor(allNode.getSlice().hashCode(),UUIDSerializer.get().toByteBuffer(startResult));
      }
      rootNode=allNode;
    }
  }
  if (opCount > 1) {
    pageSizeHint=PAGE_SIZE;
  }
 else {
    pageSizeHint=Math.min(size,PAGE_SIZE);
  }
}
