{
  slices=new ArrayList<QuerySlice>();
  Set<String> names=getFilterPropertyNames();
  for (  String name : names) {
    RangeValue start=null;
    RangeValue finish=null;
    for (    FilterPredicate f : filters) {
      if (f.getPropertyName().equals(name)) {
        RangePair r=getRangeForFilter(f);
        if (r.start != null) {
          if ((start == null) || (r.start.compareTo(start,false) < 0)) {
            start=r.start;
          }
        }
        if (r.finish != null) {
          if ((finish == null) || (r.finish.compareTo(finish,true) > 0)) {
            finish=r.finish;
          }
        }
      }
    }
    slices.add(new QuerySlice(name,start,finish,null,false));
  }
  if ((slices.size() == 0) && (sorts.size() > 0)) {
    SortPredicate sort=ListUtils.dequeue(sorts);
    slices.add(new QuerySlice(sort.getPropertyName(),null,null,null,sort.getDirection() == DESCENDING));
  }
 else   if (sorts.size() > 0) {
    for (ListIterator<SortPredicate> iter=sorts.listIterator(); iter.hasNext(); ) {
      SortPredicate sort=iter.next();
      QuerySlice slice=getSliceForProperty(sort.getPropertyName());
      if (slice != null) {
        slice.reversed=sort.getDirection() == DESCENDING;
        iter.remove();
      }
    }
  }
  if ((cursor != null) && (cursor.indexOf(':') >= 0)) {
    String[] cursors=split(cursor,'|');
    for (    String c : cursors) {
      String[] parts=split(c,':');
      if (parts.length == 2) {
        int cursorHashCode=parseInt(parts[0]);
        for (        QuerySlice slice : slices) {
          int sliceHashCode=slice.hashCode();
          logger.info("Comparing cursor hashcode " + cursorHashCode + " to "+ sliceHashCode);
          if (sliceHashCode == cursorHashCode) {
            if (isNotBlank(parts[1])) {
              ByteBuffer cursorBytes=ByteBuffer.wrap(decodeBase64(parts[1]));
              slice.setCursor(cursorBytes);
            }
          }
        }
      }
    }
  }
}
