{
  CollectionScope collectionScope=new CollectionScopeImpl(applicationScope.getApplication(),applicationScope.getApplication(),CpNamingUtils.getCollectionScopeNameFromEntityType(entityRef.getType()));
  EntityCollectionManager ecm=managerCache.getEntityCollectionManager(collectionScope);
  Id entityId=new SimpleId(entityRef.getUuid(),entityRef.getType());
  org.apache.usergrid.persistence.model.entity.Entity entity=ecm.load(entityId).toBlocking().last();
  if (entity != null) {
    RelationManager rm=getRelationManager(entityRef);
    Map<String,Map<UUID,Set<String>>> owners=rm.getOwners();
    logger.debug("Deleting indexes of all {} collections owning the entity",owners.keySet().size());
    final EntityIndex ei=managerCache.getEntityIndex(applicationScope);
    final EntityIndexBatch batch=ei.createBatch();
    for (    String ownerType : owners.keySet()) {
      Map<UUID,Set<String>> collectionsByUuid=owners.get(ownerType);
      for (      UUID uuid : collectionsByUuid.keySet()) {
        Set<String> collectionNames=collectionsByUuid.get(uuid);
        for (        String coll : collectionNames) {
          IndexScope indexScope=new IndexScopeImpl(new SimpleId(uuid,ownerType),CpNamingUtils.getCollectionScopeNameFromCollectionName(coll));
          batch.index(indexScope,entity);
        }
      }
    }
    IndexScope defaultIndexScope=new IndexScopeImpl(applicationScope.getApplication(),CpNamingUtils.getCollectionScopeNameFromEntityType(entityRef.getType()));
    batch.deindex(defaultIndexScope,entity);
    IndexScope allTypesIndexScope=new IndexScopeImpl(applicationScope.getApplication(),CpNamingUtils.ALL_TYPES);
    batch.deindex(allTypesIndexScope,entity);
    batch.execute();
    decrementEntityCollection(Schema.defaultCollectionName(entityId.getType()));
    return ecm.delete(entityId);
  }
 else {
    return Observable.empty();
  }
}
