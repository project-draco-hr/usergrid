{
  long timestamp=getTimestampInMicros(timestampUuid);
  if (roleRef == null) {
    roleRef=new SimpleRoleRef(groupId,roleName);
  }
  if (roleTitle == null) {
    roleTitle=roleRef.getRoleName();
  }
  EntityRef ownerRef=null;
  if (roleRef.getGroupId() != null) {
    ownerRef=new SimpleEntityRef(Group.ENTITY_TYPE,roleRef.getGroupId());
  }
 else {
    ownerRef=new SimpleEntityRef(Application.ENTITY_TYPE,applicationId);
  }
  Map<String,Object> properties=new TreeMap<String,Object>(CASE_INSENSITIVE_ORDER);
  properties.put(PROPERTY_TYPE,Role.ENTITY_TYPE);
  if (roleRef.getGroupId() != null) {
    properties.put("group",roleRef.getGroupId());
  }
  properties.put(PROPERTY_NAME,roleRef.getApplicationRoleName());
  properties.put("roleName",roleRef.getRoleName());
  properties.put("title",roleTitle);
  properties.put(PROPERTY_INACTIVITY,inactivity);
  Entity role=batchCreate(batch,Role.ENTITY_TYPE,null,properties,roleRef.getUuid(),timestampUuid);
  addInsertToMutator(batch,ENTITY_DICTIONARIES,key(ownerRef.getUuid(),Schema.DICTIONARY_ROLENAMES),roleRef.getRoleName(),roleTitle,timestamp);
  addInsertToMutator(batch,ENTITY_DICTIONARIES,key(ownerRef.getUuid(),Schema.DICTIONARY_ROLETIMES),roleRef.getRoleName(),inactivity,timestamp);
  addInsertToMutator(batch,ENTITY_DICTIONARIES,key(ownerRef.getUuid(),DICTIONARY_SETS),Schema.DICTIONARY_ROLENAMES,null,timestamp);
  if (roleRef.getGroupId() != null) {
  }
}
