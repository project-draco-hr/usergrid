{
  CollectionScope collectionScope=new CollectionScopeImpl(appScope.getApplication(),appScope.getApplication(),getCollectionScopeNameFromEntityType(entity.getType()));
  EntityCollectionManager ecm=managerCache.getEntityCollectionManager(collectionScope);
  Id entityId=new SimpleId(entity.getUuid(),entity.getType());
  if (logger.isDebugEnabled()) {
    logger.debug("Updating entity {}:{} from scope\n   app {}\n   owner {}\n   name {}",new Object[]{entityId.getType(),entityId.getUuid(),collectionScope.getApplication(),collectionScope.getOwner(),collectionScope.getName()});
  }
  if (!UUIDUtils.isTimeBased(entityId.getUuid())) {
    throw new IllegalArgumentException("Entity Id " + entityId.getType() + ":"+ entityId.getUuid()+ " uuid not time based");
  }
  org.apache.usergrid.persistence.model.entity.Entity cpEntity=ecm.load(entityId).toBlockingObservable().last();
  cpEntity=CpEntityMapUtils.fromMap(cpEntity,entity.getProperties(),entity.getType(),true);
  try {
    logger.debug("About to Write {}:{} version {}",new Object[]{cpEntity.getId().getType(),cpEntity.getId().getUuid(),cpEntity.getVersion()});
    cpEntity=ecm.write(cpEntity).toBlockingObservable().last();
    logger.debug("Wrote {}:{} version {}",new Object[]{cpEntity.getId().getType(),cpEntity.getId().getUuid(),cpEntity.getVersion()});
  }
 catch (  WriteUniqueVerifyException wuve) {
    handleWriteUniqueVerifyException(entity,wuve);
  }
catch (  HystrixRuntimeException hre) {
    if (hre.getCause() instanceof WriteUniqueVerifyException) {
      WriteUniqueVerifyException wuve=(WriteUniqueVerifyException)hre.getCause();
      handleWriteUniqueVerifyException(entity,wuve);
    }
  }
  IndexScope indexScope=new IndexScopeImpl(appScope.getApplication(),appScope.getApplication(),getCollectionScopeNameFromEntityType(entity.getType()));
  EntityIndex ei=managerCache.getEntityIndex(indexScope);
  ei.index(cpEntity);
  IndexScope allTypesIndexScope=new IndexScopeImpl(appScope.getApplication(),appScope.getApplication(),ALL_TYPES);
  EntityIndex aei=managerCache.getEntityIndex(allTypesIndexScope);
  aei.index(cpEntity);
  updateEntityIndexes(entity,cpEntity);
}
