{
  Instant timeInstance=Instant.now();
  Long epoch=timeInstance.toEpochMilli();
  Map<String,Object> schemaMap=new HashMap<>();
  schemaMap.put("lastUpdated",epoch);
  schemaMap.put("lastUpdateBy",owner);
  MapManager mm=getMapManagerForTypes();
  CollectionSettingsCache collectionSettingsCache=indexSchemaCacheFactory.getInstance(mm);
  Optional<Map<String,Object>> collectionIndexingSchema=collectionSettingsCache.getCollectionSettings(collectionName);
  if (collectionIndexingSchema.isPresent()) {
    Map jsonMapData=collectionIndexingSchema.get();
    schemaMap.put("lastReindexed",jsonMapData.get("lastReindexed"));
  }
 else {
    schemaMap.put("lastReindexed",0);
  }
  ArrayList<String> fieldProperties=(ArrayList<String>)properties.get("fields");
  if (fieldProperties.contains("*")) {
    ArrayList<String> wildCardArrayList=new ArrayList<>();
    wildCardArrayList.add("*");
    schemaMap.put("fields",wildCardArrayList);
  }
 else   if (fieldProperties.contains("none")) {
    ArrayList<String> wildCardArrayList=new ArrayList<>();
    wildCardArrayList.add("none");
    schemaMap.put("fields",wildCardArrayList);
  }
 else {
    schemaMap.putAll(properties);
  }
  collectionSettingsCache.putCollectionSettings(collectionName,JsonUtils.mapToJsonString(schemaMap));
  return schemaMap;
}
