{
  String ret=null;
  final String typeName=typeRef.getType().getTypeName();
  if (key instanceof SimplePrincipalCollection) {
    SimplePrincipalCollection spc=(SimplePrincipalCollection)key;
    if (spc.getPrimaryPrincipal() instanceof UserPrincipal) {
      UserPrincipal p=(UserPrincipal)spc.getPrimaryPrincipal();
      ret=p.getUser().getUuid().toString() + "_" + typeName;
    }
 else     if (spc.getPrimaryPrincipal() instanceof PrincipalIdentifier) {
      PrincipalIdentifier p=(PrincipalIdentifier)spc.getPrimaryPrincipal();
      if (p.getAccessTokenCredentials() != null) {
        ret=p.getAccessTokenCredentials().getToken() + "_" + typeName;
      }
 else {
        ret=p.getApplicationId() + "_" + typeName;
      }
    }
  }
 else   if (key instanceof ApplicationGuestPrincipal) {
    ApplicationGuestPrincipal agp=(ApplicationGuestPrincipal)key;
    ret=agp.getApplicationId() + "_" + typeName;
  }
 else   if (key instanceof ApplicationPrincipal) {
    ApplicationPrincipal ap=(ApplicationPrincipal)key;
    ret=ap.getApplicationId() + "_" + typeName;
  }
 else   if (key instanceof OrganizationPrincipal) {
    OrganizationPrincipal op=(OrganizationPrincipal)key;
    ret=op.getOrganizationId() + "_" + typeName;
  }
 else   if (key instanceof UserPrincipal) {
    UserPrincipal up=(UserPrincipal)key;
    ret=up.getUser().getUuid() + "_" + typeName;
  }
  if (ret == null) {
    String msg="Unknown key type: " + key.getClass().getSimpleName();
    logger.error(msg);
    throw new RuntimeException(msg);
  }
  return ret;
}
