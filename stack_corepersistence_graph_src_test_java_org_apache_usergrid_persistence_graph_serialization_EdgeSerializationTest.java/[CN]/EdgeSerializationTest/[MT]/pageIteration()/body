{
  int size=graphFig.getScanPageSize() * 2;
  final Id sourceId=createId("source");
  final String type="edge";
  Set<Edge> edges=new HashSet<Edge>(size);
  final UUID timestamp=UUIDGenerator.newTimeUUID();
  for (int i=0; i < size; i++) {
    final MarkedEdge edge=createEdge(sourceId,type,createId("target"));
    serialization.writeEdge(scope,edge,timestamp).execute();
    edges.add(edge);
  }
  UUID now=UUIDGenerator.newTimeUUID();
  Iterator<MarkedEdge> results=serialization.getEdgesFromSource(scope,createSearchByEdge(sourceId,type,now,null));
  for (  MarkedEdge edge : new IterableWrapper<MarkedEdge>(results)) {
    assertTrue("Removed edge from write set",edges.remove(edge));
  }
  assertEquals("All edges were returned",0,edges.size());
}
