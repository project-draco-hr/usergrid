{
  int size=graphFig.getScanPageSize() * 2;
  final Id sourceId=createId("source");
  final String type="edge";
  Set<Edge> edges=new HashSet<Edge>(size);
  long timestamp=0;
  for (int i=0; i < size; i++) {
    final MarkedEdge edge=createEdge(sourceId,type,createId("target"),timestamp);
    serialization.writeEdge(scope,edge,UUIDGenerator.newTimeUUID()).execute();
    edges.add(edge);
    timestamp++;
  }
  Iterator<MarkedEdge> results=serialization.getEdgesFromSource(scope,createSearchByEdge(sourceId,type,timestamp,null));
  for (  MarkedEdge edge : new IterableWrapper<>(results)) {
    assertTrue("Removed edge from write set",edges.remove(edge));
  }
  assertEquals("All edges were returned",0,edges.size());
}
