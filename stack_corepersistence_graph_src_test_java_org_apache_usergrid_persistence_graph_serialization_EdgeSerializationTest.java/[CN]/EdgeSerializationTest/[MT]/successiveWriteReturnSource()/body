{
  final MarkedEdge edge1=createMarkedEdge("source","edge","target");
  final Id sourceId=edge1.getSourceNode();
  serialization.writeEdge(scope,edge1).execute();
  UUID now=UUIDGenerator.newTimeUUID();
  Iterator<MarkedEdge> results=serialization.getEdgesFromSource(scope,createSearchByEdge(sourceId,"edge",now,null));
  assertEquals(edge1,results.next());
  assertFalse(results.hasNext());
  Iterator<MarkedEdge> versions=serialization.getEdgeVersions(scope,createGetByEdge(sourceId,"edge",edge1.getTargetNode(),now,null));
  assertEquals(edge1,versions.next());
  assertFalse(versions.hasNext());
  serialization.deleteEdge(scope,edge1).execute();
  results=serialization.getEdgesFromSource(scope,createSearchByEdge(sourceId,"edge",now,null));
  assertFalse(results.hasNext());
  serialization.writeEdge(scope,edge1).execute();
  results=serialization.getEdgesFromSource(scope,createSearchByEdge(sourceId,"edge",now,null));
  assertEquals(edge1,results.next());
  assertFalse(results.hasNext());
}
