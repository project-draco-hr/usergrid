{
  String testClass=description.getTestClass().getName();
  String methodName=description.getMethodName();
  String name=testClass + "." + methodName;
  try {
    restClient.superuserSetup();
    superuserToken=restClient.management().token().get(superuserName,superuserPassword);
  }
 catch (  BadRequestException e) {
    logger.warn("Error creating superuser, may already exist");
  }
  username="user_" + name + UUIDUtils.newTimeUUID();
  password=username;
  orgName="org_" + name + UUIDUtils.newTimeUUID();
  appName="app_" + name + UUIDUtils.newTimeUUID();
  organization=restClient.management().orgs().post(new Organization(orgName,username,username + "@usergrid.com",username,password,null));
  restClient.management().token().get(username,password);
  clientCredentials=restClient.management().orgs().org(orgName).credentials().get(Credentials.class);
  ApiResponse appResponse=restClient.management().orgs().org(organization.getName()).app().post(new Application(appName));
  appUuid=(String)appResponse.getEntities().get(0).get("uuid");
  application=new Application(appResponse);
  appCredentials=restClient.pathResource("management/orgs/" + orgName + "/apps/"+ appName+ "/credentials").get(Credentials.class,true);
  refreshIndex();
  ApiResponse response=restClient.management().token().post(new Token(username,password));
  refreshIndex();
}
