{
  return Observable.range(0,indexTestFig.getNumberOfWorkers()).parallel(new Func1<Observable<Integer>,Observable<Entity>>(){
    @Override public Observable<Entity> call(    final Observable<Integer> integerObservable){
      return integerObservable.flatMap(new Func1<Integer,Observable<Entity>>(){
        @Override public Observable<Entity> call(        final Integer integer){
          return createWriteObservable(entityIndex,ownerId,integer);
        }
      }
);
    }
  }
,Schedulers.newThread());
}
