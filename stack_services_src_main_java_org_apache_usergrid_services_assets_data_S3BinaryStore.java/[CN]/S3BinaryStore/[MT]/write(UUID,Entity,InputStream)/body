{
  final String uploadFileName=AssetUtils.buildAssetKey(appId,entity);
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  long written=IOUtils.copyLarge(inputStream,baos,0,FIVE_MB);
  byte[] data=baos.toByteArray();
  final Map<String,Object> fileMetadata=AssetUtils.getFileMetadata(entity);
  fileMetadata.put(AssetUtils.LAST_MODIFIED,System.currentTimeMillis());
  final String mimeType=AssetMimeHandler.get().getMimeType(entity,data);
  if (written < FIVE_MB) {
    BlobStore blobStore=getContext().getBlobStore();
    BlobBuilder.PayloadBlobBuilder bb=blobStore.blobBuilder(uploadFileName).payload(data).calculateMD5().contentType(mimeType);
    fileMetadata.put(AssetUtils.CONTENT_LENGTH,written);
    if (fileMetadata.get(AssetUtils.CONTENT_DISPOSITION) != null) {
      bb.contentDisposition(fileMetadata.get(AssetUtils.CONTENT_DISPOSITION).toString());
    }
    final Blob blob=bb.build();
    String md5sum=Hex.encodeHexString(blob.getMetadata().getContentMetadata().getContentMD5());
    fileMetadata.put(AssetUtils.CHECKSUM,md5sum);
    String eTag=blobStore.putBlob(bucketName,blob);
    fileMetadata.put(AssetUtils.E_TAG,eTag);
  }
 else {
    LOG.debug("Writing temp file for S3 upload");
    final File tempFile=File.createTempFile(entity.getUuid().toString(),"tmp");
    tempFile.deleteOnExit();
    OutputStream os=null;
    try {
      os=new BufferedOutputStream(new FileOutputStream(tempFile.getAbsolutePath()));
      os.write(data);
      written+=IOUtils.copyLarge(inputStream,os,0,(FileUtils.ONE_GB * 5));
    }
  finally {
      IOUtils.closeQuietly(os);
    }
    fileMetadata.put(AssetUtils.CONTENT_LENGTH,written);
    LOG.debug("Starting upload thread");
    Thread uploadThread=new Thread(new Runnable(){
      @Override public void run(){
        try {
          LOG.debug("S3 upload thread started");
          BlobStore blobStore=getContext().getBlobStore();
          BlobBuilder.PayloadBlobBuilder bb=blobStore.blobBuilder(uploadFileName).payload(tempFile).calculateMD5().contentType(mimeType);
          if (fileMetadata.get(AssetUtils.CONTENT_DISPOSITION) != null) {
            bb.contentDisposition(fileMetadata.get(AssetUtils.CONTENT_DISPOSITION).toString());
          }
          final Blob blob=bb.build();
          String md5sum=Hex.encodeHexString(blob.getMetadata().getContentMetadata().getContentMD5());
          fileMetadata.put(AssetUtils.CHECKSUM,md5sum);
          LOG.debug("S3 upload starting");
          String eTag=blobStore.putBlob(bucketName,blob);
          fileMetadata.put(AssetUtils.E_TAG,eTag);
          LOG.debug("S3 upload complete eTag=" + eTag);
          EntityManager em=emf.getEntityManager(appId);
          em.update(entity);
          tempFile.delete();
        }
 catch (        Exception e) {
          LOG.error("error uploading",e);
        }
        if (tempFile != null && tempFile.exists()) {
          tempFile.delete();
        }
      }
    }
);
    uploadThread.start();
  }
}
