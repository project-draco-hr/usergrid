{
  UUID newUserUuid=UUIDUtils.newTimeUUID();
  String userName=String.format("test%s",newUserUuid);
  Map<String,String> payload=hashMap("email",String.format("%s@anuff.com",newUserUuid)).map("username",userName).map("name","Ed Anuff").map("password","sesame").map("pin","1234");
  resource().path("/test-organization/test-app/users").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(String.class,payload);
  JsonNode response=mapper.readTree(resource().path("/test-organization/test-app/users").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  Map<String,String> data=new HashMap<String,String>();
  response=mapper.readTree(resource().path(String.format("/test-organization/test-app/users/%s/deactivate",userName)).queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(String.class,data));
  JsonNode entity=getEntity(response,0);
  assertFalse(entity.get("activated").asBoolean());
  assertNotNull(entity.get("deactivated"));
}
