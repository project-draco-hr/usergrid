{
  UUID id=UUIDUtils.newTimeUUID();
  String username="username" + id;
  String name="name" + id;
  String email="email" + id + "@usergrid.org";
  ApiResponse response=client.createUser(username,name,email,"password");
  assertNull("Error was: " + response.getErrorDescription(),response.getError());
  reindex("test-organization","test-app");
  Entity userEntity=response.getEntities().get(0);
  JsonNode node=mapper.readTree(resource().path("/test-organization/test-app/token").queryParam("username",username).queryParam("password","password").queryParam("grant_type","password").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  assertEquals(username,node.get("user").get("username").asText());
  assertEquals(name,node.get("user").get("name").asText());
  assertEquals(email,node.get("user").get("email").asText());
  String newName="newName";
  String newEmail="newEmail" + UUIDUtils.newTimeUUID() + "@usergrid.org";
  userEntity.setProperty("name",newName);
  userEntity.setProperty("email",newEmail);
  userEntity.setProperty("password","newp2ssword");
  userEntity.setProperty("pin","newp1n");
  node=mapper.readTree(resource().path(String.format("/test-organization/test-app/users/%s",username)).queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).put(String.class,userEntity.getProperties()));
  reindex("test-organization","test-app");
  node=mapper.readTree(resource().path("/test-organization/test-app/token").queryParam("username",username).queryParam("password","password").queryParam("grant_type","password").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  assertEquals(username,node.get("user").get("username").asText());
  assertEquals(newName,node.get("user").get("name").asText());
  assertEquals(newEmail,node.get("user").get("email").asText());
  assertNull(newEmail,node.get("user").get("password"));
  assertNull(newEmail,node.get("user").get("pin"));
}
