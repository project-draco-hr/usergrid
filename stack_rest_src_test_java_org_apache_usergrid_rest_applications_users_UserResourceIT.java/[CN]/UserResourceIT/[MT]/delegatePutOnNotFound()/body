{
  String randomName="user1_" + UUIDUtils.newTimeUUID().toString();
  createUser(randomName,randomName + "@apigee.com","password",randomName);
  reindex("test-organization","test-app");
  JsonNode response=mapper.readTree(resource().path("/test-organization/test-app/users/" + randomName).queryParam("access_token",adminAccessToken).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  logNode(response);
  assertNotNull(getEntity(response,0));
  randomName="user2_" + UUIDUtils.newTimeUUID().toString();
  Map<String,String> payload=hashMap("email",randomName + "@apigee.com").map("username",randomName).map("name",randomName).map("password","password").map("pin","1234");
  response=mapper.readTree(resource().path("/test-organization/test-app/users").queryParam("access_token",adminAccessToken).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).put(String.class,payload));
  reindex("test-organization","test-app");
  logNode(response);
  response=mapper.readTree(resource().path("/test-organization/test-app/users/" + randomName).queryParam("access_token",adminAccessToken).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  assertNotNull(getEntity(response,0));
  logNode(response);
}
