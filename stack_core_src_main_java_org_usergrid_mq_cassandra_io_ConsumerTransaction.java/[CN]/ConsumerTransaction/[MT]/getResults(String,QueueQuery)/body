{
  long startTime=System.currentTimeMillis();
  UUID queueId=getQueueId(queuePath);
  UUID consumerId=getConsumerId(queueId,query);
  QueueBounds bounds=getQueueBounds(queueId);
  SearchParam params=getParams(queueId,consumerId,query);
  List<UUID> ids=getQueueRange(queueId,bounds,params);
  List<TransactionPointer> pointers=getConsumerIds(queueId,consumerId,params,startTime);
  TransactionPointer pointer=null;
  int lastTransactionIndex=0;
  for (lastTransactionIndex=0; lastTransactionIndex < pointers.size(); lastTransactionIndex++) {
    pointer=pointers.get(lastTransactionIndex);
    int insertIndex=Collections.binarySearch(ids,pointer.expiration);
    if (insertIndex == params.limit * -1 - 1) {
      break;
    }
    insertIndex=(insertIndex + 1) * -1;
    ids.add(insertIndex,pointer.targetMessage);
  }
  if (ids.size() > params.limit) {
    ids=ids.subList(0,params.limit);
  }
  List<Message> messages=loadMessages(ids,params.reversed);
  writeTransactions(messages,query.getTimeout() + startTime,queueId,consumerId);
  deleteTransactionPointers(pointers,lastTransactionIndex,queueId,consumerId);
  QueueResults results=createResults(messages,queuePath,queueId,consumerId);
  UUID lastId=ids.size() > 0 ? ids.get(ids.size() - 1) : null;
  writeClientPointer(queueId,consumerId,lastId);
  return results;
}
