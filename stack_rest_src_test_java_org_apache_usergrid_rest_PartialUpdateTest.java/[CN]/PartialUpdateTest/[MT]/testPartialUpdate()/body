{
  Map<String,Object> userProperties=new LinkedHashMap<String,Object>(){
{
      put("username","bart");
      put("employer","Brawndo");
      put("email","bart@personal-email.example.com");
      put("location",new LinkedHashMap<String,Object>(){
{
          put("latitude","37.3638875323994");
          put("longitude","-122.12334411518498");
        }
      }
);
    }
  }
;
  JsonNode userNode=mapper.readTree(resource().path("/test-organization/test-app/users").queryParam("access_token",adminAccessToken).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).post(String.class,userProperties));
  assertNotNull(userNode);
  String uuid=userNode.withArray("entities").get(0).get("uuid").asText();
  assertNotNull(uuid);
  refreshIndex("test-organization","test-app");
  Map<String,Object> updateProperties=new LinkedHashMap<String,Object>(){
{
      put("employer","Initech");
    }
  }
;
  try {
    mapper.readTree(resource().path("/test-organization/test-app/user/" + uuid).queryParam("access_token",adminAccessToken).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).put(String.class,updateProperties));
  }
 catch (  UniformInterfaceException uie) {
    fail("Update failed due to: " + uie.getResponse().getEntity(String.class));
  }
  refreshIndex("test-organization","test-app");
  userNode=mapper.readTree(resource().path("/test-organization/test-app/users/" + uuid).queryParam("access_token",adminAccessToken).accept(MediaType.APPLICATION_JSON).get(String.class));
  assertNotNull(userNode);
  assertEquals("Initech",userNode.withArray("entities").get(0).get("employer").asText());
  updateProperties=new LinkedHashMap<String,Object>(){
{
      put("employer","ACME Corporation");
    }
  }
;
  try {
    mapper.readTree(resource().path("/test-organization/test-app/users/bart").queryParam("access_token",adminAccessToken).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).put(String.class,updateProperties));
  }
 catch (  UniformInterfaceException uie) {
    fail("Update failed due to: " + uie.getResponse().getEntity(String.class));
  }
  refreshIndex("test-organization","test-app");
  userNode=mapper.readTree(resource().path("/test-organization/test-app/users/bart").queryParam("access_token",adminAccessToken).accept(MediaType.APPLICATION_JSON).get(String.class));
  assertNotNull(userNode);
  assertEquals("ACME Corporation",userNode.withArray("entities").get(0).get("employer").asText());
}
