{
  Entity props=new Entity();
  props.put("username","bart");
  props.put("employer","Brawndo");
  props.put("email","bart@personal-email.example.com");
  props.put("location",geolocation);
  Entity userNode=this.app().collection("users").post(props);
  assertNotNull(userNode);
  String uuid=userNode.get("uuid").toString();
  assertNotNull(uuid);
  refreshIndex();
  Map<String,Object> updateProperties=new LinkedHashMap<String,Object>();
  for (int i=1; i < 10; i++) {
    Entity updateProps=new Entity();
    geolocation.put("latitude",latitude+=0.00001);
    geolocation.put("longitude",longitude+=0.00001);
    updateProps.put("employer","Initech");
    updateProps.put("location",geolocation);
    try {
      userNode=this.app().collection("users").entity(userNode).put(updateProps);
    }
 catch (    ResponseProcessingException uie) {
      fail("Update failed due to: " + uie.getResponse().readEntity(String.class));
    }
    refreshIndex();
    userNode=this.app().collection("users").entity(userNode).get();
    log.info(userNode.toString());
    assertNotNull(userNode);
    assertEquals("Initech",userNode.get("employer").toString());
    assertNotNull(userNode.get("location"));
    assertNotNull(((Map<String,Object>)userNode.get("location")).get("latitude"));
    assertNotNull(((Map<String,Object>)userNode.get("location")).get("longitude"));
    log.info(geolocation.get("latitude") + " != " + Double.parseDouble(((Map<String,Object>)userNode.get("location")).get("latitude").toString()));
    log.info(geolocation.get("longitude") + " != " + Double.parseDouble(((Map<String,Object>)userNode.get("location")).get("longitude").toString()));
    assertNotSame(geolocation.get("latitude"),Double.parseDouble(((Map<String,Object>)userNode.get("location")).get("latitude").toString()));
    assertEquals(geolocation.get("latitude").doubleValue(),Double.parseDouble(((Map<String,Object>)userNode.get("location")).get("latitude").toString()),0);
    assertNotSame(geolocation.get("longitude"),Double.parseDouble(((Map<String,Object>)userNode.get("location")).get("longitude").toString()));
    assertEquals(geolocation.get("longitude").doubleValue(),Double.parseDouble(((Map<String,Object>)userNode.get("location")).get("longitude").toString()),0);
  }
  Entity updateProps=new Entity();
  updateProps.put("employer","ACME Corporation");
  try {
    userNode=this.app().collection("users").entity(props.get("username").toString()).put(updateProps);
  }
 catch (  ResponseProcessingException uie) {
    fail("Update failed due to: " + uie.getResponse().readEntity(String.class));
  }
  refreshIndex();
  userNode=this.app().collection("users").entity(userNode).get();
  assertNotNull(userNode);
  assertEquals(updateProps.get("employer"),userNode.get("employer").toString());
  assertEquals(props.get("username").toString(),userNode.get("username").toString());
}
