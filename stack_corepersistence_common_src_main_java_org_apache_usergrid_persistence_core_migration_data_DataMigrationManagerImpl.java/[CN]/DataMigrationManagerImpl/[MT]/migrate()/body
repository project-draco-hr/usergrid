{
  if (!populateTreeMap())   return;
  final int currentVersion=migrationInfoSerialization.getVersion();
  if (currentVersion <= 0) {
    resetToHighestVersion();
  }
  LOG.info("Saved schema version is {}, max migration version is {}",currentVersion,migrationTreeMap.lastKey());
  final NavigableMap<Integer,DataMigration> migrationsToRun=migrationTreeMap.tailMap(currentVersion,false);
  final CassandraProgressObserver observer=new CassandraProgressObserver();
  allEntitiesInSystemObservable.getAllEntitiesInSystem(1000).doOnNext(new Action1<ApplicationEntityGroup>(){
    @Override public void call(    final ApplicationEntityGroup applicationEntityGroup){
      for (      DataMigration migration : migrationsToRun.values()) {
        migrationInfoSerialization.setStatusCode(StatusCode.RUNNING.status);
        final int migrationVersion=migration.getVersion();
        LOG.info("Running migration version {}",migrationVersion);
        observer.update(migrationVersion,"Starting migration");
        try {
          migration.migrate(applicationEntityGroup,observer).toBlocking().lastOrDefault(null);
        }
 catch (        Throwable throwable) {
          observer.failed(migrationVersion,"Exception thrown during migration",throwable);
          LOG.error("Unable to migrate to version {}.",migrationVersion,throwable);
          return;
        }
        if (observer.failed) {
          return;
        }
        migrationInfoSerialization.setVersion(migrationVersion);
        observer.update(migrationVersion,"Completed successfully");
      }
      return;
    }
  }
).toBlocking().lastOrDefault(null);
  migrationInfoSerialization.setStatusCode(StatusCode.COMPLETE.status);
}
