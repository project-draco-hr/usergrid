{
  if (!group.isCompactionPending()) {
    if (!shardAuditTaskTracker.canStartTask(scope,edgeMeta,group)) {
      return AuditResult.CHECKED_NO_OP;
    }
    try {
      final boolean created=nodeShardAllocation.auditShard(scope,group,edgeMeta);
      if (!created) {
        return AuditResult.CHECKED_NO_OP;
      }
    }
  finally {
      shardAuditTaskTracker.complete(scope,edgeMeta,group);
    }
    return AuditResult.CHECKED_CREATED;
  }
  if (group.shouldCompact(timeService.getCurrentTime())) {
    if (!shardCompactionTaskTracker.canStartTask(scope,edgeMeta,group)) {
      return AuditResult.COMPACTING;
    }
    try {
      CompactionResult result=compact(scope,edgeMeta,group);
      logger.info("Compaction result for compaction of scope {} with edge meta data of {} and shard group " + "{} is {}",new Object[]{scope,edgeMeta,group,result});
    }
  finally {
      shardCompactionTaskTracker.complete(scope,edgeMeta,group);
    }
    return AuditResult.COMPACTED;
  }
  return AuditResult.NOT_CHECKED;
}
