{
  final int numberThreads=Math.max(Runtime.getRuntime().availableProcessors(),2);
  final int count=10000;
  ExecutorService executor=Executors.newFixedThreadPool(numberThreads);
  List<UUIDConsumer> consumers=new ArrayList<UUIDConsumer>(numberThreads);
  for (int i=0; i < numberThreads; i++) {
    consumers.add(new UUIDConsumer(count));
  }
  List<Future<Void>> futures=executor.invokeAll(consumers);
  for (  Future<Void> future : futures) {
    future.get();
  }
  for (int i=0; i < numberThreads; i++) {
    UUIDConsumer current=consumers.get(i);
    current.validateOrder();
    for (int j=i + 1; j < numberThreads; j++) {
      current.noIntersect(consumers.get(j));
    }
  }
}
