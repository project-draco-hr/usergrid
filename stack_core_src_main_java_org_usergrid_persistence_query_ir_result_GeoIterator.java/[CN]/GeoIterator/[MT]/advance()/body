{
  if (done || toReturn != null) {
    return;
  }
  double nextDistance=0;
  if (distances != null && distances.size() > 0) {
    nextDistance=distances.get(distances.size() - 1);
  }
  SearchResults<EntityLocationRef> results;
  try {
    results=searcher.doSearch(nextDistance,nextResolution,resultSize);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  idOrder.clear();
  while (!done && idOrder.size() < resultSize) {
    List<EntityLocationRef> locations=results.getResults();
    for (int i=0; i < locations.size(); i++) {
      idOrder.put(locations.get(i).getUuid(),i);
    }
    if (idOrder.size() > 0) {
      toReturn=idOrder.keySet();
    }
    distances=results.getDistances();
    nextResolution=results.getLastResolution();
    if (idOrder.size() < resultSize) {
      done=true;
    }
  }
}
