{
  QueueQuery query=new QueueQuery();
  query.setTimeout(jobTimeout);
  query.setLimit(size);
  QueueResults jobs=qm.getFromQueue(jobQueueName,query);
  List<JobDescriptor> results=new ArrayList<JobDescriptor>(jobs.size());
  for (  Message job : jobs.getMessages()) {
    UUID jobUuid=UUID.fromString(job.getStringProperty("jobId"));
    String jobName=job.getStringProperty("jobName");
    JobData data=null;
    try {
      data=em.get(jobUuid,JobData.class);
    }
 catch (    Exception e) {
      logger.error("Unable to retrieve job data for jobname {} and job id {}.  Skipping to avoid job loss",new Object[]{jobName,jobUuid,e});
      continue;
    }
    if (data == null) {
      logger.info("Received job with data id '{}' from the queue, but no data was found.  Dropping job",jobUuid);
      qm.deleteTransaction(jobQueueName,job.getTransaction(),null);
      continue;
    }
    results.add(new JobDescriptor(jobName,job.getUuid(),job.getTransaction(),data,this));
  }
  return results;
}
