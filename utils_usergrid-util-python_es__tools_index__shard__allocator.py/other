import json
from multiprocessing import Pool
import requests
__author__ = 'Jeff.West@yahoo.com'
nodes_c32xl = ['elasticsearch000eu', 'elasticsearch001eu', 'elasticsearch002eu']
nodes_c34xl = ['elasticsearch015eu', 'elasticsearch018eu', 'elasticsearch019eu']
nodes = nodes_c34xl
url_base = 'http://localhost:9200'
nodes_string = ','.join(nodes)
payload = {'index.routing.allocation.include._host': '', 'index.routing.allocation.exclude._host': nodes_string, }
print json.dumps(payload)
r = requests.get((url_base + '/_stats'))
indices = r.json()['indices']
print ('retrieved %s indices' % len(indices))
includes = []
excludes = []
counter = 0
update = False
for index_name in indices:
    update = False
    counter += 1
    if (len(includes) == 0):
        update = True
    else:
        for include in includes:
            if (include in index_name):
                update = True
    if (len(excludes) > 0):
        for exclude in excludes:
            if (exclude in index_name):
                update = False
    if (not update):
        print ('Skipping %s of %s: %s' % (counter, len(indices), index_name))
    else:
        print ('+++++Processing %s of %s: %s' % (counter, len(indices), index_name))
        url_template = ('%s/%s/_settings' % (url_base, index_name))
        print url_template
        success = False
        while (not success):
            response = requests.put(('%s/%s/_settings' % (url_base, index_name)), data=json.dumps(payload))
            if (response.status_code == 200):
                success = True
                print ('200: %s: %s' % (index_name, response.text))
            else:
                print ('%s: %s: %s' % (response.status_code, index_name, response.text))
