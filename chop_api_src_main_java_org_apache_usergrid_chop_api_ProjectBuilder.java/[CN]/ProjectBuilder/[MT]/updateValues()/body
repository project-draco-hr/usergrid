{
  if (supplied != null) {
    this.testPackageBase=supplied.getTestPackageBase();
    this.createTimestamp=supplied.getCreateTimestamp();
    this.artifactId=supplied.getArtifactId();
    this.version=supplied.getVersion();
    this.groupId=supplied.getGroupId();
    this.vcsRepoUrl=supplied.getVcsRepoUrl();
    this.commitId=supplied.getVcsVersion();
    this.loadKey=supplied.getLoadKey();
    this.chopVersion=supplied.getChopVersion();
    this.md5=supplied.getMd5();
    this.loadTime=supplied.getLoadTime();
    this.managerPassword=supplied.getManagerPassword();
    this.managerUsername=supplied.getManagerUsername();
    this.managerEndpoint=supplied.getManagerEndpoint();
  }
  if (props != null) {
    if (props.containsKey(Project.LOAD_TIME_KEY)) {
      this.loadTime=props.getProperty(Project.LOAD_TIME_KEY);
    }
    if (props.containsKey(Project.LOAD_KEY)) {
      this.loadKey=props.getProperty(Project.LOAD_KEY);
    }
    if (props.containsKey(Project.ARTIFACT_ID_KEY)) {
      this.artifactId=props.getProperty(Project.ARTIFACT_ID_KEY);
    }
    if (props.containsKey(Project.CHOP_VERSION_KEY)) {
      this.chopVersion=props.getProperty(Project.CHOP_VERSION_KEY);
    }
    if (props.containsKey(Project.CREATE_TIMESTAMP_KEY)) {
      this.createTimestamp=props.getProperty(Project.CREATE_TIMESTAMP_KEY);
    }
    if (props.containsKey(Project.GIT_URL_KEY)) {
      this.vcsRepoUrl=props.getProperty(Project.GIT_URL_KEY);
    }
    if (props.containsKey(Project.GIT_UUID_KEY)) {
      this.commitId=props.getProperty(Project.GIT_UUID_KEY);
    }
    if (props.containsKey(Project.GROUP_ID_KEY)) {
      this.groupId=props.getProperty(Project.GROUP_ID_KEY);
    }
    if (props.containsKey(Project.MANAGER_PASSWORD_KEY)) {
      this.managerPassword=props.getProperty(Project.MANAGER_PASSWORD_KEY);
    }
    if (props.containsKey(Project.MANAGER_USERNAME_KEY)) {
      this.managerUsername=props.getProperty(Project.MANAGER_USERNAME_KEY);
    }
    if (props.containsKey(Project.MANAGER_ENDPOINT_KEY)) {
      this.managerEndpoint=props.getProperty(Project.MANAGER_ENDPOINT_KEY);
    }
    if (props.containsKey(Project.PROJECT_VERSION_KEY)) {
      this.version=props.getProperty(Project.PROJECT_VERSION_KEY);
    }
    if (props.containsKey(Project.TEST_PACKAGE_BASE)) {
      this.testPackageBase=props.getProperty(Project.TEST_PACKAGE_BASE);
    }
    if (props.containsKey(Project.MD5_KEY)) {
      this.md5=props.getProperty(Project.MD5_KEY);
    }
  }
}
