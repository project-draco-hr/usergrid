{
  ApplicationScope applicationScope=new ApplicationScopeImpl(new SimpleId(UUID.randomUUID(),"application"));
  final UsergridAwsCredentialsProvider ugProvider=new UsergridAwsCredentialsProvider();
  assumeTrue(ugProvider.getCredentials().getAWSAccessKeyId() != null);
  assumeTrue(ugProvider.getCredentials().getAWSSecretKey() != null);
  final Map<String,Object> request1Data=new HashMap<String,Object>(){
{
      put("test","testval1");
    }
  }
;
  final IndexRequest indexRequest1=new IndexRequest("testAlias1",applicationScope,SearchType.fromType("testType1"),"testDoc1",request1Data);
  final Map<String,Object> request2Data=new HashMap<String,Object>(){
{
      put("test","testval2");
    }
  }
;
  final IndexRequest indexRequest2=new IndexRequest("testAlias2",applicationScope,SearchType.fromType("testType2"),"testDoc2",request2Data);
  final DeIndexRequest deIndexRequest1=new DeIndexRequest(new String[]{"index1.1, index1.2"},applicationScope,new SearchEdgeImpl(new SimpleId("testId3"),"name3",SearchEdge.NodeType.SOURCE),new SimpleId("id3"),UUID.randomUUID());
  final DeIndexRequest deIndexRequest2=new DeIndexRequest(new String[]{"index2.1","index2.1"},applicationScope,new SearchEdgeImpl(new SimpleId("testId4"),"name4",SearchEdge.NodeType.SOURCE),new SimpleId("id4"),UUID.randomUUID());
  IndexIdentifierImpl.IndexOperationMessage indexOperationMessage=new IndexIdentifierImpl.IndexOperationMessage();
  indexOperationMessage.addIndexRequest(indexRequest1);
  indexOperationMessage.addIndexRequest(indexRequest2);
  indexOperationMessage.addDeIndexRequest(deIndexRequest1);
  indexOperationMessage.addDeIndexRequest(deIndexRequest2);
  bufferQueueSQS.offer(indexOperationMessage);
  indexOperationMessage.getFuture().get();
  final List<IndexIdentifierImpl.IndexOperationMessage> ops=getResults(20,TimeUnit.SECONDS);
  assertTrue(ops.size() > 0);
  final IndexIdentifierImpl.IndexOperationMessage returnedOperation=ops.get(0);
  final Set<IndexRequest> indexRequestSet=returnedOperation.getIndexRequests();
  assertTrue(indexRequestSet.contains(indexRequest1));
  assertTrue(indexRequestSet.contains(indexRequest2));
  final Set<DeIndexRequest> deIndexRequests=returnedOperation.getDeIndexRequests();
  assertTrue(deIndexRequests.contains(deIndexRequest1));
  assertTrue(deIndexRequests.contains(deIndexRequest2));
  bufferQueueSQS.ack(ops);
}
