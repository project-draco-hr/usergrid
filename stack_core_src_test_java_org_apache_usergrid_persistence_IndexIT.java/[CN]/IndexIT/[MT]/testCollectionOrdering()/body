{
  LOG.info("testCollectionOrdering");
  UUID applicationId=setup.createApplication("testOrganization","testCollectionOrdering" + RandomStringUtils.randomAlphabetic(20));
  assertNotNull(applicationId);
  EntityManager em=setup.getEmf().getEntityManager(applicationId);
  assertNotNull(em);
  for (int i=alphabet.length - 1; i >= 0; i--) {
    String name=alphabet[i];
    Map<String,Object> properties=new LinkedHashMap<String,Object>();
    properties.put("name",name);
    em.create("item",properties);
  }
  em.refreshIndex();
  int i=0;
  Query query=Query.fromQL("order by name");
  Results r=em.searchCollection(em.getApplicationRef(),"items",query);
  for (  Entity entity : r.getEntities()) {
    assertEquals(alphabet[i],entity.getProperty("name"));
    i++;
  }
  query=Query.fromQL("order by name").withCursor(r.getCursor());
  r=em.searchCollection(em.getApplicationRef(),"items",query);
  for (  Entity entity : r.getEntities()) {
    assertEquals(alphabet[i],entity.getProperty("name"));
    i++;
  }
  query=Query.fromQL("order by name").withCursor(r.getCursor());
  r=em.searchCollection(em.getApplicationRef(),"items",query);
  for (  Entity entity : r.getEntities()) {
    assertEquals(alphabet[i],entity.getProperty("name"));
    i++;
  }
  assertEquals(alphabet.length,i);
  i=alphabet.length;
  query=Query.fromQL("order by name desc");
  r=em.searchCollection(em.getApplicationRef(),"items",query);
  for (  Entity entity : r.getEntities()) {
    i--;
    assertEquals(alphabet[i],entity.getProperty("name"));
  }
  query=Query.fromQL("order by name desc").withCursor(r.getCursor());
  r=em.searchCollection(em.getApplicationRef(),"items",query);
  for (  Entity entity : r.getEntities()) {
    i--;
    assertEquals(alphabet[i],entity.getProperty("name"));
  }
  query=Query.fromQL("order by name desc").withCursor(r.getCursor());
  r=em.searchCollection(em.getApplicationRef(),"items",query);
  for (  Entity entity : r.getEntities()) {
    i--;
    assertEquals(alphabet[i],entity.getProperty("name"));
  }
  assertEquals(0,i);
}
