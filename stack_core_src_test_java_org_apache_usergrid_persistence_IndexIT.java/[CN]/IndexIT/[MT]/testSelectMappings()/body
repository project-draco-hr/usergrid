{
  UUID applicationId=app.getId();
  EntityManager em=setup.getEmf().getEntityManager(applicationId);
  Map<String,Object> entity1=new HashMap<String,Object>(){
{
      put("name","name_1");
      put("status","pickled");
      put("data",new HashMap(){
{
          put("xfactor",5.1);
          put("rando","bar");
          put("mondo","2000");
        }
      }
);
    }
  }
;
  em.create("names",entity1);
  Map<String,Object> entity2=new HashMap<String,Object>(){
{
      put("name","name_2");
      put("status","pickled");
      put("data",new HashMap(){
{
          put("xfactor",5.1);
          put("rando","bar");
          put("mondo","2001");
        }
      }
);
    }
  }
;
  em.create("names",entity2);
  app.refreshIndex();
{
    Query query=Query.fromQL("select status where status = 'pickled'");
    Results r=em.searchCollection(em.getApplicationRef(),"names",query);
    assertTrue(r.getEntities() != null && r.getEntities().size() == 2);
    Entity first=r.getEntities().get(0);
    assertTrue(first.getDynamicProperties().size() == 2);
  }
{
    Query query=Query.fromQL("select status, data.rando where data.rando = 'bar'");
    Results r=em.searchCollection(em.getApplicationRef(),"names",query);
    assertTrue(r.getEntities() != null && r.getEntities().size() == 2);
    Entity first=r.getEntities().get(0);
    assertNotNull(first.getProperty("status"));
    assertEquals(first.getProperty("status"),"pickled");
    assertNotNull(first.getProperty("data"));
    assertEquals(((Map<String,Object>)first.getProperty("data")).get("rando"),"bar");
    assertTrue(first.getDynamicProperties().size() == 3);
  }
{
    Query query=Query.fromQL("select data.rando,data.mondo where status = 'pickled'");
    Results r=em.searchCollection(em.getApplicationRef(),"names",query);
    assertTrue(r.getEntities() != null && r.getEntities().size() == 2);
    Entity first=r.getEntities().get(0);
    assertNotNull(first.getProperty("data"));
    assertEquals(((Map<String,Object>)first.getProperty("data")).get("rando"),"bar");
    assertEquals(((Map<String,Object>)first.getProperty("data")).get("mondo"),"2001");
    assertTrue(first.getDynamicProperties().size() == 2);
  }
{
    Query query=Query.fromQL("select data.bogusfieldname where status = 'pickled'");
    Results r=em.searchCollection(em.getApplicationRef(),"names",query);
    assertTrue(r.getEntities() != null && r.getEntities().size() == 2);
    Entity first=r.getEntities().get(0);
    assertTrue(first.getDynamicProperties().size() == 1);
  }
}
