{
  if (maxIndex == 0 || pointers.size() == 0) {
    return;
  }
  Mutator<ByteBuffer> mutator=CountingMutator.createFlushingMutator(ko,be);
  ByteBuffer key=getQueueClientTransactionKey(queueId,consumerId);
  for (int i=0; i < maxIndex && i < pointers.size(); i++) {
    UUID pointer=pointers.get(i).expiration;
    if (logger.isDebugEnabled()) {
      logger.debug("Removing transaction pointer '{}' for queue '{}' and consumer '{}'",new Object[]{pointer,queueId,consumerId});
    }
    mutator.addDeletion(key,CONSUMER_QUEUE_TIMEOUTS.getColumnFamily(),pointer,ue,cass.createTimestamp());
  }
  mutator.execute();
}
