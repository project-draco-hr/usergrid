{
  SliceQuery<ByteBuffer,UUID,UUID> q=createSliceQuery(ko,be,ue,ue);
  q.setColumnFamily(CONSUMER_QUEUE_TIMEOUTS.getColumnFamily());
  q.setKey(getQueueClientTransactionKey(queueId,consumerId));
  q.setRange(params.startId,startTimeUUID,false,params.limit + 1);
  List<HColumn<UUID,UUID>> cassResults=swallowOrderedExecution(q);
  List<TransactionPointer> results=new ArrayList<TransactionPointer>(params.limit);
  for (  HColumn<UUID,UUID> column : cassResults) {
    if (logger.isTraceEnabled()) {
      logger.trace("Adding uuid '{}' for original message '{}' to results for queue '{}' and consumer '{}'",column.getName(),column.getValue(),queueId,consumerId);
      logger.trace("Max timeuuid : '{}', Current timeuuid : '{}', comparison '{}'",startTimeUUID,column.getName(),UUIDUtils.compare(startTimeUUID,column.getName()));
    }
    results.add(new TransactionPointer(column.getName(),column.getValue()));
  }
  return results;
}
