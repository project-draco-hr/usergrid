{
  String jsonFieldName=jp.getCurrentName();
  String entityOwnerId="";
  if (jsonFieldName.equals("Metadata")) {
    JsonNode fieldValues=jp.readValueAsTree();
    entityOwnerId=fieldValues.get("UUID").asText();
  }
  EntityRef ownerEntityRef=em.getRef(UUID.fromString(entityOwnerId));
  while (jp.nextToken() != JsonToken.END_OBJECT) {
    String collectionName=jp.getCurrentName();
    if (collectionName.equals("connections")) {
      jp.nextToken();
      while (jp.nextToken() != JsonToken.END_OBJECT) {
        String connectionType=jp.getCurrentName();
        jp.nextToken();
        while (jp.nextToken() != JsonToken.END_ARRAY) {
          String entryId=jp.getText();
          EntityRef entryRef=em.getRef(UUID.fromString(entryId));
          em.createConnection(ownerEntityRef,connectionType,entryRef);
        }
      }
    }
 else     if (collectionName.equals("dictionaries")) {
      jp.nextToken();
      while (jp.nextToken() != JsonToken.END_OBJECT) {
        String dictionaryName=jp.getCurrentName();
        jp.nextToken();
        @SuppressWarnings("unchecked") Map<String,Object> dictionary=jp.readValueAs(HashMap.class);
        em.addMapToDictionary(ownerEntityRef,dictionaryName,dictionary);
      }
    }
 else {
      jp.nextToken();
      while (jp.nextToken() != JsonToken.END_ARRAY) {
        String entryId=jp.getText();
        EntityRef entryRef=em.getRef(UUID.fromString(entryId));
        em.addToCollection(ownerEntityRef,collectionName,entryRef);
      }
    }
  }
}
