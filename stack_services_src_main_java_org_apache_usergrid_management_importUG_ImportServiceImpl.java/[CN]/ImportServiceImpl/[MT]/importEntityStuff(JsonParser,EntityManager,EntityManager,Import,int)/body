{
  EntityRef ownerEntityRef=null;
  String entityUuid="";
  while (jp.nextToken() != JsonToken.END_OBJECT) {
    String collectionName=jp.getCurrentName();
    if (collectionName.equals("connections")) {
      jp.nextToken();
      while (jp.nextToken() != JsonToken.END_OBJECT) {
        String connectionType=jp.getCurrentName();
        jp.nextToken();
        while (jp.nextToken() != JsonToken.END_ARRAY) {
          String entryId=jp.getText();
          EntityRef entryRef=em.getRef(UUID.fromString(entryId));
          em.createConnection(ownerEntityRef,connectionType,entryRef);
        }
      }
    }
 else     if (collectionName.equals("dictionaries")) {
      jp.nextToken();
      while (jp.nextToken() != JsonToken.END_OBJECT) {
        String dictionaryName=jp.getCurrentName();
        jp.nextToken();
        @SuppressWarnings("unchecked") Map<String,Object> dictionary=jp.readValueAs(HashMap.class);
        em.addMapToDictionary(ownerEntityRef,dictionaryName,dictionary);
      }
    }
 else {
      jp.nextToken();
      Map<String,Object> properties=new HashMap<String,Object>();
      JsonToken token=jp.nextToken();
      while (token != JsonToken.END_OBJECT) {
        if (token == JsonToken.VALUE_STRING || token == JsonToken.VALUE_NUMBER_INT) {
          String key=jp.getCurrentName();
          if (key.equals("uuid")) {
            entityUuid=jp.getText();
            ownerEntityRef=em.getRef(UUID.fromString(entityUuid));
          }
 else           if (key.equals("type")) {
            String value=jp.getText();
            Set<String> collections=em.getApplicationCollections();
            if (!collections.contains(value + "s")) {
              throw new CollectionNotFoundException("Collection Not Found");
            }
            properties.put(key,value);
          }
 else {
            String value=jp.getText();
            properties.put(key,value);
          }
        }
        token=jp.nextToken();
      }
      em.updateProperties(ownerEntityRef,properties);
    }
  }
  ArrayList fileNames=(ArrayList)importUG.getDynamicProperties().get("files");
  ((Map<String,Object>)fileNames.get(index)).put("lastUpdatedUUID",entityUuid);
  rootEm.update(importUG);
}
