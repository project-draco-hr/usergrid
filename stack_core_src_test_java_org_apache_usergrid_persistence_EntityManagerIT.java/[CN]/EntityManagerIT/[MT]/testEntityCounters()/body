{
  LOG.info("EntityManagerIT#testEntityCounters");
  EntityManager em=app.getEntityManager();
  Group organizationEntity=new Group();
  organizationEntity.setPath("testCounterOrg");
  organizationEntity.setProperty("name","testCounterOrg");
  organizationEntity=em.create(organizationEntity);
  Entity appInfo=setup.getEmf().createApplicationV2("testCounterOrg","testEntityCounters" + UUIDGenerator.newTimeUUID());
  UUID applicationId=UUIDUtils.tryExtractUUID(appInfo.getProperty(PROPERTY_APPLICATION_ID).toString());
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("name","testEntityCounters");
  Entity applicationEntity=em.create(applicationId,CpNamingUtils.APPLICATION_INFO,properties);
  em.createConnection(new SimpleEntityRef("group",organizationEntity.getUuid()),"owns",new SimpleEntityRef(CpNamingUtils.APPLICATION_INFO,applicationId));
  em=setup.getEmf().getEntityManager(applicationId);
  properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  Entity user=em.create("user",properties);
  em=setup.getEmf().getEntityManager(setup.getEmf().getManagementAppId());
  Map<String,Long> counts=em.getEntityCounters(setup.getEmf().getManagementAppId());
  LOG.info("Entity counters: {}",counts);
  assertNotNull(counts);
  assertEquals(4,counts.size());
  Entity entity=em.get(new SimpleEntityRef(Group.ENTITY_TYPE,organizationEntity.getUuid()));
  assertEquals("testCounterOrg",entity.getName());
  em=setup.getEmf().getEntityManager(applicationId);
  counts=em.getEntityCounters(applicationId);
  LOG.info("Entity counters: {}",counts);
  assertNotNull(counts);
  assertEquals(3,counts.size());
}
