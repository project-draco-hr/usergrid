{
  final Id fromEntityId=new SimpleId(start.getUuid(),start.getType());
  final ApplicationScope applicationScope=em.getApplicationScope();
  final GraphManager gm=em.getManagerCache().getGraphManager(applicationScope);
  logger.debug("Loading edges types from {}:{}\n   scope {}:{}",new Object[]{start.getType(),start.getUuid(),applicationScope.getApplication().getType(),applicationScope.getApplication().getUuid()});
  Observable<String> edgeTypes=gm.getEdgeTypesFromSource(new SimpleSearchEdgeType(fromEntityId,null,null));
  edgeTypes.forEach(new Action1<String>(){
    @Override public void call(    final String edgeType){
      try {
        Thread.sleep(writeDelayMs);
      }
 catch (      InterruptedException ignored) {
      }
      logger.debug("Loading edges of edgeType {} from {}:{}\n   scope {}:{}",new Object[]{edgeType,start.getType(),start.getUuid(),applicationScope.getApplication().getType(),applicationScope.getApplication().getUuid()});
      Observable<Edge> edges=gm.loadEdgesFromSource(new SimpleSearchByEdgeType(fromEntityId,edgeType,Long.MAX_VALUE,SearchByEdgeType.Order.DESCENDING,null));
      edges.forEach(new Action1<Edge>(){
        @Override public void call(        Edge edge){
          EntityRef sourceEntityRef=new SimpleEntityRef(edge.getSourceNode().getType(),edge.getSourceNode().getUuid());
          Entity sourceEntity;
          try {
            sourceEntity=em.get(sourceEntityRef);
            sourceEntity.getUuid();
          }
 catch (          Exception ex) {
            logger.error("Error getting sourceEntity {}:{}, skipping this edge",sourceEntityRef.getType(),sourceEntityRef.getUuid());
            logger.error("Exception",ex);
            return;
          }
          EntityRef targetEntityRef=new SimpleEntityRef(edge.getTargetNode().getType(),edge.getTargetNode().getUuid());
          Entity targetEntity;
          try {
            targetEntity=em.get(targetEntityRef);
            targetEntity.getUuid();
          }
 catch (          Exception ex) {
            logger.error("Error getting targetEntity {}:{}, skipping this edge",targetEntityRef.getType(),targetEntityRef.getUuid());
            logger.error("Exception",ex);
            return;
          }
          if (CpNamingUtils.isCollectionEdgeType(edge.getType())) {
            String collName=CpNamingUtils.getCollectionName(edgeType);
            visitor.visitCollectionEntry(em,collName,sourceEntity,targetEntity);
          }
 else {
            String collName=CpNamingUtils.getConnectionType(edgeType);
            visitor.visitConnectionEntry(em,collName,sourceEntity,targetEntity);
          }
        }
      }
);
    }
  }
);
}
