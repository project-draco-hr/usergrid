{
  CustomCollection restaurants=context.collection("restaurants");
  Map restaurant1=hashMap("name","Old Major");
  UUID restaurant1Id=getEntityId(restaurants.create(restaurant1),0);
  Map restaurant2=hashMap("name","tag");
  UUID restaurant2Id=getEntityId(restaurants.create(restaurant2),0);
  Map restaurant3=hashMap("name","Squeaky Bean");
  UUID restaurant3Id=getEntityId(restaurants.create(restaurant3),0);
  UsersCollection users=context.users();
  int max=1000;
  int count=(int)(max * 1.1);
  for (int i=0; i < count; i++) {
    String username="user" + i;
    String email=username + "@usergrid.com";
    Map user1=hashMap("username",username).map("email",email).map("fullname",i + " Smith");
    users.create(user1);
    if (i % 2 == 0) {
      users.user(username).connection("likes").entity(restaurant1Id).post();
      users.user(username).connection("likes").entity(restaurant2Id).post();
    }
 else {
      users.user(username).connection("likes").entity(restaurant2Id).post();
      users.user(username).connection("likes").entity(restaurant3Id).post();
    }
  }
  JsonNode queryResponse=context.collection("users").withMatrix(hashMap("ql","where fullname contains 'Smith'").map("limit","1000")).connection("likes").get();
  assertEquals("Old Major",getEntityName(queryResponse,0));
  assertEquals("tag",getEntityName(queryResponse,1));
  assertEquals("Squeaky Bean",getEntityName(queryResponse,2));
  assertNull(getEntity(queryResponse,3));
}
