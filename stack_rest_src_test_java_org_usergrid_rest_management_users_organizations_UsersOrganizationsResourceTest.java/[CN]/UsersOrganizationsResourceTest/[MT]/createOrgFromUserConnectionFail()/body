{
  Map<String,String> payload=hashMap("email","orgfromuserconn@apigee.com").map("password","password").map("organization","orgfromuserconn");
  JsonNode node=resource().path("/management/organizations").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(JsonNode.class,payload);
  String userId=node.get("data").get("owner").get("uuid").asText();
  assertNotNull(node);
  String token=mgmtToken("orgfromuserconn@apigee.com","password");
  node=resource().path(String.format("/management/users/%s/",userId)).queryParam("access_token",token).type(MediaType.APPLICATION_JSON_TYPE).get(JsonNode.class);
  logNode(node,LOG);
  payload=hashMap("organization","Orgfromuserconn");
  try {
    node=resource().path(String.format("/management/users/%s/organizations",userId)).queryParam("access_token",token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(JsonNode.class,payload);
    fail("Should have thrown unique exception on org name");
  }
 catch (  Exception ex) {
  }
}
