{
  Entity thing1=new Entity();
  thing1.put("name","thing1");
  thing1=this.app().collection("things").post(thing1);
  Entity thing2=new Entity();
  thing2.put("name","thing2");
  thing2=this.app().collection("things").post(thing2);
  refreshIndex();
  this.app().collection("things").entity(thing1).connection("likes").collection("things").entity(thing2).post();
  refreshIndex();
  thing1=this.app().collection("things").entity(thing1).get();
  String url=(String)((Map<String,Object>)((Map<String,Object>)thing1.get("metadata")).get("connections")).get("likes");
  assertNotNull("Connection url returned with entity",url);
  CollectionEndpoint likesEndpoint=new CollectionEndpoint(url,this.context(),this.app());
  Collection likes=likesEndpoint.get();
  assertNotNull(likes);
  Entity likedEntity=likes.next();
  assertNotNull(likedEntity);
  assertEquals(thing2.getUuid(),likedEntity.getUuid());
  thing2=this.app().collection("things").entity(thing2).get();
  url=(String)((Map<String,Object>)((Map<String,Object>)thing2.get("metadata")).get("connecting")).get("likes");
  assertNotNull("Connecting url returned with entity",url);
  CollectionEndpoint likedByEndpoint=new CollectionEndpoint(url,this.context(),this.app());
  Collection likedBy=likedByEndpoint.get();
  assertNotNull(likedBy);
  Entity likedByEntity=likedBy.next();
  assertNotNull(likedByEntity);
  assertEquals(thing1.getUuid(),likedByEntity.getUuid());
}
