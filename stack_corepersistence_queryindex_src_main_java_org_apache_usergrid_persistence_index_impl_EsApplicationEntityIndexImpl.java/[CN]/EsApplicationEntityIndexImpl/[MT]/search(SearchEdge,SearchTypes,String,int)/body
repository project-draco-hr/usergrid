{
  IndexValidationUtils.validateSearchEdge(searchEdge);
  Preconditions.checkNotNull(searchTypes,"searchTypes cannot be null");
  Preconditions.checkNotNull(query,"query cannot be null");
  Preconditions.checkArgument(limit > 0,"limit must be > 0");
  SearchResponse searchResponse;
  final ParsedQuery parsedQuery=ParsedQueryBuilder.build(query);
  final SearchRequestBuilder srb=searchRequest.getBuilder(searchEdge,searchTypes,parsedQuery,limit);
  if (logger.isDebugEnabled()) {
    logger.debug("Searching index (read alias): {}\n  nodeId: {}, edgeType: {},  \n type: {}\n   query: {} ",this.alias.getReadAlias(),searchEdge.getNodeId(),searchEdge.getEdgeName(),searchTypes.getTypeNames(applicationScope),srb);
  }
  try {
    Timer.Context timeSearch=searchTimer.time();
    searchResponse=srb.execute().actionGet(queryTimeout);
    timeSearch.stop();
  }
 catch (  Throwable t) {
    logger.error("Unable to communicate with Elasticsearch",t);
    failureMonitor.fail("Unable to execute batch",t);
    throw t;
  }
  failureMonitor.success();
  return parseResults(searchResponse,parsedQuery,limit);
}
