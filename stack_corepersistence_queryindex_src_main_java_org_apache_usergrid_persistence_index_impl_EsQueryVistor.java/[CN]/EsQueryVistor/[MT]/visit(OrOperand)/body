{
  op.getLeft().visit(this);
  op.getRight().visit(this);
  final QueryBuilder rightQuery=queryBuilders.pop();
  final FilterBuilder rightFilter=filterBuilders.pop();
  final QueryBuilder leftQuery=queryBuilders.pop();
  final FilterBuilder leftFilter=filterBuilders.pop();
  final boolean useLeftQuery=use(leftQuery);
  final boolean useRightQuery=use(rightQuery);
  if (useLeftQuery && useRightQuery) {
    final BoolQueryBuilder qb=QueryBuilders.boolQuery().should(leftQuery).should(rightQuery).minimumNumberShouldMatch(1);
    queryBuilders.push(qb);
  }
 else   if (useLeftQuery) {
    queryBuilders.push(leftQuery);
  }
 else   if (useRightQuery) {
    queryBuilders.push(rightQuery);
  }
 else {
    queryBuilders.push(NoOpQueryBuilder.INSTANCE);
  }
  final boolean useLeftFilter=use(leftFilter);
  final boolean useRightFilter=use(rightFilter);
  if (useLeftFilter && useRightFilter) {
    final BoolFilterBuilder fb=FilterBuilders.boolFilter().should(leftFilter).should(rightFilter);
    filterBuilders.push(fb);
  }
 else   if (useLeftFilter) {
    filterBuilders.push(leftFilter);
  }
 else   if (useRightFilter) {
    filterBuilders.push(rightFilter);
  }
 else {
    filterBuilders.push(NoOpFilterBuilder.INSTANCE);
  }
}
