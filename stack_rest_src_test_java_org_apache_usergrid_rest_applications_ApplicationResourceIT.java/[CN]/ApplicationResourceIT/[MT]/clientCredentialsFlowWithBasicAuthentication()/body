{
  Credentials orgCredentials=getOrgCredentials();
  String clientId=orgCredentials.getClientId();
  String clientSecret=orgCredentials.getClientSecret();
  String clientCredentials=clientId + ":" + clientSecret;
  String token=Base64.encodeToString(clientCredentials.getBytes());
  Map<String,String> map=new HashMap<>(1);
  map.put("grant_type","client_credentials");
  Token apiResponse=clientSetup.getRestClient().management().token().getTarget(false).request().header("Authorization","Basic " + token).accept(MediaType.APPLICATION_JSON).post(javax.ws.rs.client.Entity.entity(map,MediaType.APPLICATION_JSON_TYPE),Token.class);
  assertNotNull("A valid response was returned.",apiResponse);
  assertNull("There is no error.",apiResponse.getError());
  assertNotNull("It has access_token.",apiResponse.getAccessToken());
  assertNotNull("It has expires_in.",apiResponse.getExpirationDate());
}
