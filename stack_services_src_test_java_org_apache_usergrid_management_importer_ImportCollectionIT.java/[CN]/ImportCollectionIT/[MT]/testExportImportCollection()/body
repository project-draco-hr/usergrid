{
  final EntityManager emApp1=setup.getEmf().getEntityManager(applicationId);
  Map<UUID,Entity> thingsMap=new HashMap<>();
  List<Entity> things=new ArrayList<>();
  createTestEntities(emApp1,thingsMap,things);
  exportCollection(emApp1);
  final UUID appId2=setup.getMgmtSvc().createApplication(organization.getUuid(),"noobapp").getId();
  final EntityManager emApp2=setup.getEmf().getEntityManager(appId2);
  importCollection(appId2,emApp2);
  try {
    logger.debug("\n\nCheck connections\n");
    List<Entity> importedThings=emApp2.getCollection(appId2,"things",null,Level.ALL_PROPERTIES).getEntities();
    assertTrue(!importedThings.isEmpty());
    int conCount=0;
    for (    Entity e : importedThings) {
      Results r=emApp2.getConnectedEntities(e,"related",null,Level.IDS);
      List<ConnectionRef> connections=r.getConnections();
      conCount+=connections.size();
    }
    assertEquals(2,conCount);
    logger.debug("\n\nCheck dictionary\n");
    EntityRef er;
    Map<Object,Object> dictionaries1, dictionaries2;
    for (int i=0; i < 3; i++) {
      er=importedThings.get(i);
      dictionaries1=emApp2.getDictionaryAsMap(er,"connected_types");
      dictionaries2=emApp2.getDictionaryAsMap(er,"connecting_types");
      if (i == 2) {
        assertThat(dictionaries1.size(),is(0));
        assertThat(dictionaries2.size(),is(0));
      }
 else {
        assertThat(dictionaries1.size(),is(not(0)));
        assertThat(dictionaries2.size(),is(not(0)));
      }
    }
    for (    Entity importedThing : importedThings) {
      emApp1.delete(importedThing);
    }
    emApp1.refreshIndex();
    emApp2.refreshIndex();
    importedThings=emApp2.getCollection(appId2,"things",null,Level.ALL_PROPERTIES).getEntities();
    assertTrue(!importedThings.isEmpty());
  }
  finally {
    deleteBucket();
  }
}
