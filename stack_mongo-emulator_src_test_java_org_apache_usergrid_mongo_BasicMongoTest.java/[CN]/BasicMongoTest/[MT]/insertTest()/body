{
  DB db=getDb();
  BasicDBObject doc=new BasicDBObject();
  doc.put("name","nico");
  doc.put("color","tabby");
  WriteResult result=db.getCollection("inserttests").insert(doc);
  ObjectId savedOid=doc.getObjectId("_id");
  assertNull(result.getError());
  Set<String> colls=db.getCollectionNames();
  assertTrue(colls.contains("inserttests"));
  DBCollection coll=db.getCollection("inserttests");
  DBCursor cur=coll.find();
  BasicDBObject returnedObject=null;
  assertTrue(cur.hasNext());
  returnedObject=(BasicDBObject)cur.next();
  assertFalse(cur.hasNext());
  UUID id=UUID.fromString(returnedObject.get("uuid").toString());
  ObjectId returnedOid=new ObjectId(returnedObject.getString("_id"));
  assertEquals("nico",returnedObject.get("name"));
  assertEquals("tabby",returnedObject.get("color"));
  assertEquals(savedOid,returnedOid);
  assertNotNull(id);
  BasicDBObject query=new BasicDBObject();
  query.put("_id",savedOid);
  returnedObject=new BasicDBObject(db.getCollection("inserttests").findOne(query).toMap());
  assertEquals("nico",returnedObject.get("name"));
  assertEquals("tabby",returnedObject.get("color"));
  assertEquals(savedOid,new ObjectId(returnedObject.getString("_id")));
  assertEquals(id.toString(),returnedObject.get("uuid"));
  UUID appId=emf.lookupApplication("test-organization/test-app").get();
  EntityManager em=emf.getEntityManager(appId);
  Entity entity=em.get(new SimpleEntityRef((String)returnedObject.get("type"),id));
  assertNotNull(entity);
  assertEquals("nico",entity.getProperty("name"));
  assertEquals("tabby",entity.getProperty("color"));
}
