{
  if (initialize)   return;
  try {
    logger.info("Loading initialize...");
    Thread.sleep(20 * 1000);
  }
 catch (  InterruptedException e) {
  }
  validator=CassandraRunner.getBean(QueryValidator.class);
  properties=CassandraRunner.getBean("properties",Properties.class);
  if (validator == null || properties == null) {
    throw new InitializationError("Application context not loaded.");
  }
  String enableString=(String)properties.get("usergrid.query.validator.api.enablelocal");
  enableLocalServer=StringUtils.endsWithIgnoreCase("true",enableString);
  if (enableLocalServer) {
    startStandaloneServer();
    try {
      logger.info("Loading standalone server...");
      Thread.sleep(20 * 1000);
    }
 catch (    InterruptedException e) {
    }
  }
  initialize=true;
  String endpoint=(String)properties.get("usergrid.query.validator.api.endpoint");
  String organization=(String)properties.get("usergrid.query.validator.api.organization");
  String app=(String)properties.get("usergrid.query.validator.api.app");
  String email=(String)properties.get("usergrid.query.validator.api.authorize.email");
  String password=(String)properties.get("usergrid.query.validator.api.authorize.password");
  String collection="user";
  List<Entity> entities=loadEntities(collection);
  QueryValidationConfiguration configuration=new QueryValidationConfiguration();
  configuration.setEndpointUri(endpoint);
  configuration.setOrg(organization);
  configuration.setEmail(email);
  configuration.setPassword(password);
  configuration.setApp(app);
  configuration.setCollection(collection);
  configuration.setEntities(entities);
  validator.setConfiguration(configuration);
  validator.setup();
}
