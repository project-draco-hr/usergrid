{
  final List<Integer> values=new ArrayList<Integer>(size);
  for (int i=0; i < size; i++) {
    values.add(i);
  }
  return Observable.create(new Observable.OnSubscribe<Integer>(){
    @Override public void call(    final Subscriber<? super Integer> subscriber){
      final int size=values.size();
      for (int i=0; i < size; i++) {
        if (i % 1000 == 0) {
          try {
            Thread.sleep(250);
          }
 catch (          InterruptedException e) {
            subscriber.onError(e);
            return;
          }
        }
        if (i == size - 1) {
          try {
            Thread.sleep(5000);
          }
 catch (          InterruptedException e) {
            subscriber.onError(e);
            return;
          }
        }
        subscriber.onNext(values.get(i));
      }
      subscriber.onCompleted();
    }
  }
).subscribeOn(Schedulers.io());
}
