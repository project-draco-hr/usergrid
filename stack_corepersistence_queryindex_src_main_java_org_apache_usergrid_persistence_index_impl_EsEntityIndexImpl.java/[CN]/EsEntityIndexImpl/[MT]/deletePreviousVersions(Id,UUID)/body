{
  String idString=IndexingUtils.idString(entityId).toLowerCase();
  final FilteredQueryBuilder fqb=QueryBuilders.filteredQuery(QueryBuilders.termQuery(ENTITYID_ID_FIELDNAME,idString),FilterBuilders.rangeFilter(ENTITY_VERSION_FIELDNAME).lt(version.timestamp()));
  final Timer.Context timeDeletePreviousVersions=metricsFactory.getTimer(EsEntityIndexImpl.class,"es.entity.index.delete.previous.versions.timer").time();
  final ListenableActionFuture<DeleteByQueryResponse> response=esProvider.getClient().prepareDeleteByQuery(alias.getWriteAlias()).setQuery(fqb).execute();
  response.addListener(new ActionListener<DeleteByQueryResponse>(){
    @Override public void onResponse(    DeleteByQueryResponse response){
      timeDeletePreviousVersions.stop();
      logger.debug("Deleted entity {}:{} with version {} from all " + "index scopes with response status = {}",entityId.getType(),entityId.getUuid(),version,response.status().toString());
      checkDeleteByQueryResponse(fqb,response);
    }
    @Override public void onFailure(    Throwable e){
      logger.error("Deleted entity {}:{} from all index scopes with error {}",entityId.getType(),entityId.getUuid(),e);
    }
  }
);
  return response;
}
