{
  QueryBuilder qb=query.createQueryBuilder();
  log.debug("Executing query on type {} query: {} ",scope.getName(),query.toString());
  SearchResponse sr;
  if (query.getCursor() == null) {
    log.debug("Executing query on type {} query: {} ",scope.getName(),qb.toString());
    SearchRequestBuilder srb=client.prepareSearch(index).setTypes(scope.getName()).setScroll(cursorTimeout + "m").setQuery(qb);
    FilterBuilder fb=query.createFilterBuilder();
    if (fb != null) {
      log.debug("   Filter: {} ",fb.toString());
      srb=srb.setPostFilter(fb);
    }
    srb=srb.setFrom(0).setSize(query.getLimit());
    for (    Query.SortPredicate sp : query.getSortPredicates()) {
      final SortOrder order;
      if (sp.getDirection().equals(Query.SortDirection.ASCENDING)) {
        order=SortOrder.ASC;
      }
 else {
        order=SortOrder.DESC;
      }
      srb.addSort(sp.getPropertyName(),order);
    }
    sr=srb.execute().actionGet();
  }
 else {
    log.debug("Executing query on type {} cursor: {} ",scope.getName(),query.getCursor());
    SearchScrollRequestBuilder ssrb=client.prepareSearchScroll(query.getCursor()).setScroll(cursorTimeout + "m");
    sr=ssrb.execute().actionGet();
  }
  SearchHits hits=sr.getHits();
  log.debug("   Hit count: {} Total hits: {}",hits.getHits().length,hits.getTotalHits());
  Results results=new Results();
  List<Entity> entities=new ArrayList<Entity>();
  for (  SearchHit hit : hits.getHits()) {
    String[] idparts=hit.getId().split("\\|");
    String id=idparts[0];
    String type=idparts[1];
    String version=idparts[2];
    Id entityId=new SimpleId(UUID.fromString(id),type);
    Entity entity=manager.load(entityId).toBlockingObservable().last();
    if (entity == null) {
      throw new RuntimeException("Entity id [" + entityId + "] not found");
    }
    UUID entityVersion=UUID.fromString(version);
    if (entityVersion.compareTo(entity.getVersion()) == -1) {
      log.debug("   Stale hit " + hit.getId());
    }
 else {
      entities.add(entity);
    }
  }
  if (entities.size() == 1) {
    results.setEntity(entities.get(0));
  }
 else {
    log.debug("   Returning " + entities.size() + " entities");
    results.setEntities(entities);
  }
  if (!entities.isEmpty()) {
    results.setCursor(sr.getScrollId());
    log.debug("   Cursor = " + sr.getScrollId());
  }
  return results;
}
