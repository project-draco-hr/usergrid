{
  Preconditions.checkNotNull(fields,"fields are required");
  Preconditions.checkArgument(fields.size() > 0,"More than 1 field msut be specified");
  final List<ScopedRowKey<CollectionScope,Field>> keys=new ArrayList<>(fields.size());
  for (  Field field : fields) {
    final ScopedRowKey<CollectionScope,Field> rowKey=ScopedRowKey.fromKey(colScope,field);
    keys.add(rowKey);
  }
  final UniqueValueSetImpl uniqueValueSet=new UniqueValueSetImpl(fields.size());
  Iterator<Row<ScopedRowKey<CollectionScope,Field>,EntityVersion>> results=keyspace.prepareQuery(CF_UNIQUE_VALUES).getKeySlice(keys).withColumnRange(new RangeBuilder().setLimit(1).build()).execute().getResult().iterator();
  while (results.hasNext()) {
    final Row<ScopedRowKey<CollectionScope,Field>,EntityVersion> unique=results.next();
    final Field field=unique.getKey().getKey();
    final ColumnList<EntityVersion> columnList=unique.getColumns();
    if (columnList.size() < 1) {
      continue;
    }
    final EntityVersion entityVersion=columnList.getColumnByIndex(0).getName();
    final UniqueValueImpl uniqueValue=new UniqueValueImpl(colScope,field,entityVersion.getEntityId(),entityVersion.getEntityVersion());
    uniqueValueSet.addValue(uniqueValue);
  }
  return uniqueValueSet;
}
