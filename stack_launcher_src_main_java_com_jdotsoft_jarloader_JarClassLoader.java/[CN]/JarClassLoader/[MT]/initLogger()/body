{
  bLogConsole=true;
  logger=System.out;
  logLevel=LogLevel.ERROR;
  hsLogArea=new HashSet<LogArea>();
  hsLogArea.add(LogArea.CONFIG);
  String sLogger=System.getProperty(KEY_LOGGER);
  if (sLogger != null) {
    try {
      logger=new PrintStream(sLogger);
      bLogConsole=false;
    }
 catch (    FileNotFoundException e) {
      logError(LogArea.CONFIG,"Cannot create log file %s.",sLogger);
    }
  }
  String sLogLevel=System.getProperty(KEY_LOGGER_LEVEL);
  if (sLogLevel != null) {
    try {
      logLevel=LogLevel.valueOf(sLogLevel);
    }
 catch (    Exception e) {
      logError(LogArea.CONFIG,"Not valid parameter in %s=%s",KEY_LOGGER_LEVEL,sLogLevel);
    }
  }
  String sLogArea=System.getProperty(KEY_LOGGER_AREA);
  if (sLogArea != null) {
    String[] tokenAll=sLogArea.split(",");
    try {
      for (      String t : tokenAll) {
        hsLogArea.add(LogArea.valueOf(t));
      }
    }
 catch (    Exception e) {
      logError(LogArea.CONFIG,"Not valid parameter in %s=%s",KEY_LOGGER_AREA,sLogArea);
    }
  }
  if ((hsLogArea.size() == 1) && hsLogArea.contains(LogArea.CONFIG)) {
    for (    LogArea la : LogArea.values()) {
      hsLogArea.add(la);
    }
  }
}
