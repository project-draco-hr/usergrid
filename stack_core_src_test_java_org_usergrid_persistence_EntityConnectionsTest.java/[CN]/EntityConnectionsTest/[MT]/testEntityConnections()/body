{
  logger.info("\n\nEntityConnectionsTest.testEntityConnections\n");
  UUID applicationId=createApplication("testOrganization","testEntityConnections");
  assertNotNull(applicationId);
  EntityManager em=emf.getEntityManager(applicationId);
  assertNotNull(em);
  logger.info("\n\nCreating Cat entity A with name of Dylan\n");
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("name","Dylan");
  Entity catA=em.create("cat",properties);
  assertNotNull(catA);
  logger.info("\n\nEntity A created with id " + catA.getUuid() + "\n");
  logger.info("\n\nLooking up cat with id " + catA.getUuid() + "\n");
  Entity cat=em.get(catA);
  assertNotNull(cat);
  logger.info("\n\nFound entity " + cat.getUuid() + " of type "+ cat.getType()+ " with name "+ cat.getProperty("name")+ "\n");
  logger.info("\n\nCreating cat entity B with name of Nico\n");
  properties=new LinkedHashMap<String,Object>();
  properties.put("name","Nico");
  Entity catB=em.create("cat",properties);
  assertNotNull(catB);
  logger.info("\n\nEntity B created with id " + catB.getUuid() + "\n");
  logger.info("\n\nCreating award entity with name of 'best cat'\n");
  properties=new LinkedHashMap<String,Object>();
  properties.put("name","Best Cat Ever");
  Entity awardA=em.create("award",properties);
  assertNotNull(awardA);
  logger.info("\n\nEntity created with id " + awardA.getUuid() + "\n");
  logger.info("\n\nConnecting " + catA.getUuid() + " \"likes\" "+ catB.getUuid()+ "\n");
  em.createConnection(catA,"likes",catB);
  logger.info("\n\nConnecting " + awardA.getUuid() + " \"awarded\" "+ catB.getUuid()+ "\n");
  em.createConnection(awardA,"awarded",catB);
  logger.info("Find all connections for cat A: " + catA.getUuid());
  testEntityConnections(applicationId,catA.getUuid(),1);
  logger.info("Find all connections for award A: " + awardA.getUuid());
  testEntityConnections(applicationId,awardA.getUuid(),1);
  logger.info("\n\nConnecting " + awardA.getUuid() + " \"awarded\" "+ catA.getUuid()+ "\n");
  em.createConnection(awardA,"awarded",catA);
  testEntityConnections(applicationId,catA.getUuid(),1);
  testEntityConnections(applicationId,awardA.getUuid(),2);
  testApplicationCollections(applicationId,"cats",2);
  testApplicationCollections(applicationId,"awards",1);
  logger.info("\n\nSearching Award A for recipients with the name Dylan\n");
}
