{
  String rand=RandomStringUtils.randomAlphanumeric(10);
  final String username="user_" + rand;
  management().orgs().post(new Organization(username,username,username + "@example.com",username,"password",null));
  Map<String,Object> loginInfo=new HashMap<String,Object>(){
{
      put("username",username);
      put("password","password");
      put("grant_type","password");
    }
  }
;
  JsonNode accessInfoNode=management.token().post(JsonNode.class,loginInfo);
  String accessToken=accessInfoNode.get("access_token").asText();
  String suToken=clientSetup.getSuperuserToken().getAccessToken();
  Map<String,String> props=new HashMap<String,String>();
  props.put(USERGRID_EXTERNAL_SSO_PROVIDER_URL,getBaseURI().toURL().toExternalForm());
  pathResource("testproperties").post(props);
  JsonNode node=pathResource("/management/me").get(JsonNode.class,new QueryParameters().addParam("access_token",accessToken));
  logger.info("node: {}",node);
  String token=node.get("access_token").asText();
  assertNotNull(token);
  props.put(USERGRID_EXTERNAL_SSO_PROVIDER_URL,"");
  pathResource("testproperties").post(props);
}
