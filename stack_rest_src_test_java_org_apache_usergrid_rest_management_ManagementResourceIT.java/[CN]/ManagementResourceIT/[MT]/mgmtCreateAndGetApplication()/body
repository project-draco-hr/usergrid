{
  Map<String,String> data=new HashMap<String,String>();
  data.put("name","mgmt-org-app");
  String orgName=orgInfo.getName();
  JsonNode appdata=mapper.readTree(resource().path("/management/orgs/" + orgName + "/applications").queryParam("access_token",this.adminToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(String.class,data));
  logNode(appdata);
  appdata=getEntity(appdata,0);
  refreshIndex(this.orgInfo.getName(),this.appInfo.getName());
  assertEquals(orgName.toLowerCase() + "/mgmt-org-app",appdata.get("name").asText());
  assertNotNull(appdata.get("metadata"));
  assertNotNull(appdata.get("metadata").get("collections"));
  assertNotNull(appdata.get("metadata").get("collections").get("roles"));
  assertNotNull(appdata.get("metadata").get("collections").get("roles").get("title"));
  assertEquals("Roles",appdata.get("metadata").get("collections").get("roles").get("title").asText());
  assertEquals(3,appdata.get("metadata").get("collections").get("roles").get("count").asInt());
  refreshIndex(this.orgInfo.getName(),this.appInfo.getName());
  appdata=mapper.readTree(resource().path("/management/orgs/" + orgInfo.getUuid() + "/applications/mgmt-org-app").queryParam("access_token",this.adminToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  logNode(appdata);
  assertEquals(orgName.toLowerCase(),appdata.get("organization").asText());
  assertEquals("mgmt-org-app",appdata.get("applicationName").asText());
  assertEquals("http://sometestvalue/" + orgName.toLowerCase() + "/mgmt-org-app",appdata.get("uri").textValue());
  appdata=getEntity(appdata,0);
  assertEquals(orgName.toLowerCase() + "/mgmt-org-app",appdata.get("name").asText());
  assertEquals("Roles",appdata.get("metadata").get("collections").get("roles").get("title").asText());
  assertEquals(3,appdata.get("metadata").get("collections").get("roles").get("count").asInt());
}
