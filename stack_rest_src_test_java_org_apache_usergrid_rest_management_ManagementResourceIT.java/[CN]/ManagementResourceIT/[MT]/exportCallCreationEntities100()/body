{
  Status responseStatus=Status.OK;
  JsonNode node=null;
  HashMap<String,Object> payload=new HashMap<String,Object>();
  Map<String,Object> properties=new HashMap<String,Object>();
  Map<String,Object> storage_info=new HashMap<String,Object>();
  properties.put("storage_provider","s3");
  properties.put("storage_info",storage_info);
  payload.put("properties",properties);
  for (int i=0; i < 100; i++) {
    Map<String,String> userCreation=hashMap("type","app_user").map("name","fred" + i);
    node=resource().path("/test-organization/test-app/app_users").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(JsonNode.class,userCreation);
  }
  try {
    node=resource().path("/management/orgs/test-organization/apps/test-app/export").queryParam("access_token",adminToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(JsonNode.class,payload);
  }
 catch (  UniformInterfaceException uie) {
    responseStatus=uie.getResponse().getClientResponseStatus();
  }
  assertEquals(Status.OK,responseStatus);
}
