{
  String username="test" + UUIDUtils.newTimeUUID();
  String name=username;
  String email=username + "@usergrid.com";
  String password="password";
  String orgName=username;
  Map payload=hashMap("email",email).map("username",username).map("name",name).map("password",password).map("organization",orgName).map("company","Apigee");
  JsonNode node=mapper.readTree(resource().path("/management/organizations").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(String.class,payload));
  Status status=null;
  try {
    this.resource().path(String.format("/management/orgs/%s",orgName)).queryParam("access_token",this.adminToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class);
  }
 catch (  UniformInterfaceException uie) {
    status=uie.getResponse().getClientResponseStatus();
  }
  assertNotNull(status);
  assertEquals(Status.UNAUTHORIZED,status);
  status=null;
  try {
    resource().path("/management/orgs/" + this.orgInfo.getName()).queryParam("access_token",this.adminToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class);
  }
 catch (  UniformInterfaceException uie) {
    status=uie.getResponse().getClientResponseStatus();
  }
  assertNull(status);
  status=null;
  try {
    resource().path(String.format("/management/orgs/%s",this.orgInfo.getUuid())).queryParam("access_token",this.adminToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class);
  }
 catch (  UniformInterfaceException uie) {
    status=uie.getResponse().getClientResponseStatus();
  }
  assertNull(status);
}
