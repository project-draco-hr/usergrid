{
  String username="test" + UUIDUtils.newTimeUUID();
  String name="someguy2";
  String email="someguy" + "@usergrid.com";
  String password="password";
  String orgName="someneworg";
  Entity payload=new Entity().chainPut("company","Apigee");
  Organization organization=new Organization(orgName,username,email,name,password,payload);
  Organization node=management().orgs().post(organization);
  management.token().get(clientSetup.getUsername(),clientSetup.getPassword());
  Status status=null;
  String returnVal="";
  try {
    returnVal=this.management().orgs().org(orgName).get(String.class);
  }
 catch (  UniformInterfaceException uie) {
    status=uie.getResponse().getClientResponseStatus();
  }
  assertNotNull(status);
  assertEquals(Status.UNAUTHORIZED,status);
  status=null;
  try {
    this.management().orgs().org(this.clientSetup.getOrganizationName()).get(String.class);
  }
 catch (  UniformInterfaceException uie) {
    status=uie.getResponse().getClientResponseStatus();
  }
  assertNull(status);
  status=null;
  try {
    this.management().orgs().org(this.clientSetup.getOrganizationName()).get(String.class);
  }
 catch (  UniformInterfaceException uie) {
    status=uie.getResponse().getClientResponseStatus();
  }
  assertNull(status);
}
