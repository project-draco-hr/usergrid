{
  final long now=timeService.getCurrentTime();
  final Iterator<Long> maxShards=getShards(scope,nodeId,Long.MAX_VALUE,1,edgeType);
  if (!maxShards.hasNext()) {
    return false;
  }
  final long maxShard=maxShards.next();
  if (maxShard > now) {
    return false;
  }
  final long count=edgeSeriesCounterSerialization.getCount(scope,nodeId,maxShard,edgeType);
  if (count < graphFig.getShardSize()) {
    return false;
  }
  final long newShardTime=timeService.getCurrentTime() + graphFig.getShardCacheTimeout() * 2;
  try {
    this.edgeSeriesSerialization.writeEdgeMeta(scope,nodeId,newShardTime,edgeType).execute();
  }
 catch (  ConnectionException e) {
    throw new RuntimeException("Unable to write the new edge metadata");
  }
  return true;
}
