{
  logger.debug("parseFileToEntities() for file {} ",file.getAbsolutePath());
  EntityManager emManagementApp=emf.getEntityManager(CpNamingUtils.MANAGEMENT_APPLICATION_ID);
  emManagementApp.update(fileImport);
  if (FileImport.State.FAILED.equals(fileImport.getState()) || FileImport.State.FINISHED.equals(fileImport.getState())) {
    return;
  }
  fileImport.setState(FileImport.State.STARTED);
  emManagementApp.update(fileImport);
  if (emManagementApp.get(targetAppId) == null) {
    throw new IllegalArgumentException("Application does not exist: " + targetAppId.toString());
  }
  EntityManager targetEm=emf.getEntityManager(targetAppId);
  logger.debug("   importing into app {} file {}",targetAppId.toString(),file.getAbsolutePath());
  importEntitiesFromFile(execution,file,targetEm,emManagementApp,fileImport);
  Results ImportJobResults=emManagementApp.getConnectingEntities(fileImport,"includes",null,Level.ALL_PROPERTIES);
  List<Entity> importEntity=ImportJobResults.getEntities();
  UUID importId=importEntity.get(0).getUuid();
  Import importUG=emManagementApp.get(importId,Import.class);
  Results entities=emManagementApp.getConnectedEntities(importUG,"includes",null,Level.ALL_PROPERTIES);
  PagingResultsIterator itr=new PagingResultsIterator(entities);
  int failCount=0;
  while (itr.hasNext()) {
    FileImport fi=(FileImport)itr.next();
switch (fi.getState()) {
case FAILED:
      failCount++;
    break;
case FINISHED:
  break;
default :
return;
}
}
if (failCount == 0) {
importUG.setState(Import.State.FINISHED);
}
 else {
importUG.setState(Import.State.FAILED);
}
emManagementApp.update(importUG);
}
