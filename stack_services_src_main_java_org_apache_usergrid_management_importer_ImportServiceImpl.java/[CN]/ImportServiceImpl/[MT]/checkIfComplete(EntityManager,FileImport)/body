{
  int failCount=0;
  int successCount=0;
  final Import importEntity=getImportEntity(rootEM,fileImport);
  try {
    try {
      Thread.sleep(5000);
    }
 catch (    Exception intentionallyIgnored) {
    }
    Query query=new Query();
    query.setEntityType(Schema.getDefaultSchema().getEntityType(FileImport.class));
    query.setConnectionType(IMPORT_FILE_INCLUDES_CONNECTION);
    query.setLimit(MAX_FILE_IMPORTS);
    Results entities=rootEM.searchConnectedEntities(importEntity,query);
    PagingResultsIterator itr=new PagingResultsIterator(entities);
    if (!itr.hasNext()) {
      logger.warn("Found no FileImport entities for import {}, " + "unable to check if complete",importEntity.getUuid());
      return;
    }
    logger.debug("Checking {} file import jobs to see if we are done for file {}",new Object[]{entities.size(),fileImport.getFileName()});
    while (itr.hasNext()) {
      FileImport fi=(FileImport)itr.next();
switch (fi.getState()) {
case FAILED:
        failCount++;
      break;
case FINISHED:
    successCount++;
  continue;
default :
logger.debug("not done yet, bail out...");
return;
}
}
}
 catch (Exception e) {
failCount++;
if (importEntity != null) {
importEntity.setErrorMessage("Error determining status of file import jobs");
}
logger.debug("Error determining status of file import jobs",e);
}
logger.debug("successCount = {} failCount = {}",new Object[]{successCount,failCount});
if (importEntity != null) {
logger.debug("FINISHED");
if (failCount == 0) {
importEntity.setState(Import.State.FINISHED);
}
 else {
importEntity.setState(Import.State.FAILED);
}
try {
rootEM.update(importEntity);
logger.debug("Updated import entity {}:{} with state {}",new Object[]{importEntity.getType(),importEntity.getUuid(),importEntity.getState()});
}
 catch (Exception e) {
logger.error("Error updating import entity",e);
}
}
}
