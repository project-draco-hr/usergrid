{
  logger.info("testQuery");
  Query q=new Query();
  q.addFilter("blah");
  q.addFilter("a=5");
  q.addFilter("b='hello'");
  q.addFilter("c < 7");
  q.addFilter("d gt 5");
  q.addFilter("e in 5,6");
  q.addFilter("f=6.0");
  q.addFilter("g=.05");
  q.addFilter("loc within .05 of 5,6");
  Iterator<FilterPredicate> i=q.getFilterPredicates().iterator();
  FilterPredicate f=i.next();
  testPredicate(f,"a",Query.FilterOperator.EQUAL,new Long(5));
  f=i.next();
  testPredicate(f,"b",Query.FilterOperator.EQUAL,"hello");
  f=i.next();
  testPredicate(f,"c",Query.FilterOperator.LESS_THAN,new Long(7));
  f=i.next();
  testPredicate(f,"d",Query.FilterOperator.GREATER_THAN,new Long(5));
  f=i.next();
  testPredicate(f,"e",Query.FilterOperator.IN,Arrays.asList(new Long(5),new Long(6)));
  f=i.next();
  testPredicate(f,"f",Query.FilterOperator.EQUAL,new Float(6));
  f=i.next();
  testPredicate(f,"g",Query.FilterOperator.EQUAL,new Float(.05));
  f=i.next();
  testPredicate(f,"loc",Query.FilterOperator.WITHIN,Arrays.asList(new Float(.05),new Long(5),new Long(6)));
  q=Query.fromQL("select * where a = 5");
  i=q.getFilterPredicates().iterator();
  f=i.next();
  testPredicate(f,"a",Query.FilterOperator.EQUAL,new Long(5));
  logger.info(q.toString());
  q=Query.fromQL("select * where a = 5 and b = \'hello\'");
  i=q.getFilterPredicates().iterator();
  f=i.next();
  testPredicate(f,"a",Query.FilterOperator.EQUAL,new Long(5));
  f=i.next();
  testPredicate(f,"b",Query.FilterOperator.EQUAL,"hello");
  logger.info(q.toString());
  q=Query.fromQL("select * where a = 5 and b = \'hello\' and c<7");
  i=q.getFilterPredicates().iterator();
  f=i.next();
  testPredicate(f,"a",Query.FilterOperator.EQUAL,new Long(5));
  f=i.next();
  testPredicate(f,"b",Query.FilterOperator.EQUAL,"hello");
  f=i.next();
  testPredicate(f,"c",Query.FilterOperator.LESS_THAN,new Long(7));
  logger.info(q.toString());
  q=Query.fromQL("order by a asc");
  assertNotNull(q.getSortPredicates());
  assertEquals(1,q.getSortPredicates().size());
  assertEquals("a",q.getSortPredicates().get(0).getPropertyName());
  q=Query.fromQL("order by a,b desc");
  assertNotNull(q.getSortPredicates());
  assertEquals(2,q.getSortPredicates().size());
  assertEquals("a",q.getSortPredicates().get(0).getPropertyName());
  assertEquals("b",q.getSortPredicates().get(1).getPropertyName());
  assertEquals(SortDirection.DESCENDING,q.getSortPredicates().get(1).getDirection());
  q=Query.fromQL("select * where loc within 5 of 6,7");
  i=q.getFilterPredicates().iterator();
  f=i.next();
  testPredicate(f,"loc",Query.FilterOperator.WITHIN,Arrays.asList(new Long(5),new Long(6),new Long(7)));
  logger.info(q.toString());
}
