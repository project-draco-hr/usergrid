{
  EdgeGenerator generator=new EdgeGenerator(){
    private Set<Id> sourceIds=new HashSet<Id>();
    @Override public Edge newEdge(){
      Edge edge=createEdge("source","test","target");
      sourceIds.add(edge.getSourceNode());
      return edge;
    }
    @Override public Observable<Edge> doSearch(    final GraphManager manager){
      final long timestamp=System.currentTimeMillis();
      return Observable.create(new Observable.OnSubscribe<Edge>(){
        @Override public void call(        final Subscriber<? super Edge> subscriber){
          try {
            for (            Id sourceId : sourceIds) {
              final Iterable<Edge> edges=manager.loadEdgesFromSource(new SimpleSearchByEdgeType(sourceId,"test",timestamp,SearchByEdgeType.Order.DESCENDING,null)).toBlocking().toIterable();
              for (              Edge edge : edges) {
                log.debug("Firing on next for edge {}",edge);
                subscriber.onNext(edge);
              }
            }
          }
 catch (          Throwable throwable) {
            subscriber.onError(throwable);
          }
        }
      }
);
    }
  }
;
  doTest(generator);
}
