{
  String rand=RandomStringUtils.randomAlphanumeric(10);
  String orgName="org_" + rand;
  String appName="app_" + rand;
  ExportDataCreator creator=new ExportDataCreator();
  creator.startTool(new String[]{"-organization",orgName,"-application",appName,"-host","localhost:" + ServiceITSuite.cassandraResource.getRpcPort()},false);
  long start=System.currentTimeMillis();
  String directoryName="target/export" + rand;
  ExportApp exportApp=new ExportApp();
  exportApp.startTool(new String[]{"-application",orgName + "/" + appName,"-writeThreads","100","-host","localhost:" + ServiceITSuite.cassandraResource.getRpcPort(),"-outputDir",directoryName},false);
  logger.info("100 read and 100 write threads = " + (System.currentTimeMillis() - start) / 1000 + "s");
  File exportDir=new File(directoryName);
  assertTrue(getFileCount(exportDir,"entities") > 0);
  assertTrue(getFileCount(exportDir,"connections") > 0);
  assertTrue(getFileCount(exportDir,"entities") <= 100);
  assertTrue(getFileCount(exportDir,"connections") <= 100);
  File exportDir1=new File(directoryName + "1");
  exportApp.startTool(new String[]{"-application",orgName + "/" + appName,"-writeThreads","5","-host","localhost:" + ServiceITSuite.cassandraResource.getRpcPort(),"-outputDir",directoryName + "1"},false);
  logger.info("5 thread time = " + (System.currentTimeMillis() - start) / 1000 + "s");
  assertTrue(getFileCount(exportDir1,"entities") > 0);
  assertTrue(getFileCount(exportDir1,"connections") > 0);
  assertTrue(getFileCount(exportDir1,"entities") <= 5);
  assertTrue(getFileCount(exportDir1,"connections") <= 5);
}
