{
  UUID applicationId=createApplication("testOrganization","test");
  ServiceManager sm=setup.getSmf().getServiceManager(applicationId);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  Entity userA=testRequest(sm,ServiceAction.POST,1,properties,"users").getEntity();
  assertNotNull(userA);
  properties=new LinkedHashMap<String,Object>();
  properties.put("username","djacobs");
  properties.put("email","djacobs@gmail.com");
  Entity userB=testRequest(sm,ServiceAction.POST,1,properties,"users").getEntity();
  assertNotNull(userB);
  properties=new LinkedHashMap<String,Object>();
  properties.put("username","natpo");
  properties.put("email","npodrazik@gmail.com");
  Entity userC=testRequest(sm,ServiceAction.POST,1,properties,"users").getEntity();
  assertNotNull(userC);
  testRequest(sm,ServiceAction.POST,1,null,"users",userB.getUuid(),"connections","following",userA.getUuid());
  testRequest(sm,ServiceAction.POST,1,null,"users",userC.getUuid(),"connections","following",userA.getUuid());
  properties=Activity.newActivity(Activity.VERB_POST,null,"I ate a sammich",null,userA,null,"tweet",null,null).getProperties();
  Entity activity=testRequest(sm,ServiceAction.POST,1,properties,"users",userA.getUuid(),"activities").getEntity();
  assertNotNull(activity);
  testRequest(sm,ServiceAction.GET,1,null,"users",userA.getUuid(),"activities");
  testRequest(sm,ServiceAction.GET,1,null,"activities");
  testRequest(sm,ServiceAction.GET,1,null,"users",userB.getUuid(),"feed");
  testRequest(sm,ServiceAction.GET,1,null,"users",userC.getUuid(),"feed");
  properties=Activity.newActivity(Activity.VERB_POST,null,"I ate another sammich",null,userA,null,"tweet",null,null).getProperties();
  activity=testRequest(sm,ServiceAction.POST,1,properties,"users",userA.getUuid(),"activities").getEntity();
  assertNotNull(activity);
  properties=Activity.newActivity(Activity.VERB_POST,null,"I ate a cookie",null,userA,null,"tweet",null,null).getProperties();
  activity=testRequest(sm,ServiceAction.POST,1,properties,"users",userA.getUuid(),"activities").getEntity();
  assertNotNull(activity);
  properties=Activity.newActivity(Activity.VERB_CHECKIN,null,"I'm at the cookie shop",null,userA,null,Activity.OBJECT_TYPE_PLACE,"Cookie Shop",null).getProperties();
  activity=testRequest(sm,ServiceAction.POST,1,properties,"users",userA.getUuid(),"activities").getEntity();
  assertNotNull(activity);
  testRequest(sm,ServiceAction.GET,4,null,"users",userC.getUuid(),"feed");
  testRequest(sm,ServiceAction.GET,2,null,"users",userC.getUuid(),"feed",Query.fromQL("select * where content contains 'cookie'"));
  testRequest(sm,ServiceAction.GET,1,null,"users",userC.getUuid(),"feed",Query.fromQL("select * where verb='post' and content contains 'cookie'"));
  properties=new LinkedHashMap<String,Object>();
  properties.put("username","finn");
  properties.put("email","finn@ooo.com");
  Entity userD=testRequest(sm,ServiceAction.POST,1,properties,"users").getEntity();
  assertNotNull(userD);
  testRequest(sm,ServiceAction.POST,1,null,"users",userD.getUuid(),"connections","following",userA.getUuid());
  testRequest(sm,ServiceAction.GET,4,null,"users",userD.getUuid(),"feed");
}
