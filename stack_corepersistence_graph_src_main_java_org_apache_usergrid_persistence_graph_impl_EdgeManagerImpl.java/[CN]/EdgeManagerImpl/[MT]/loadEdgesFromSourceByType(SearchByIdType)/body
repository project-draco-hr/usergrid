{
  return Observable.create(new ObservableIterator<MarkedEdge>(){
    @Override protected Iterator<MarkedEdge> getIterator(){
      return edgeSerialization.getEdgesFromSourceByTargetType(scope,search);
    }
  }
).buffer(graphFig.getScanPageSize()).flatMap(new EdgeBufferFilter(search.getMaxVersion())).distinctUntilChanged(new Func1<Edge,Id>(){
    @Override public Id call(    final Edge edge){
      return edge.getTargetNode();
    }
  }
).cast(Edge.class);
}
