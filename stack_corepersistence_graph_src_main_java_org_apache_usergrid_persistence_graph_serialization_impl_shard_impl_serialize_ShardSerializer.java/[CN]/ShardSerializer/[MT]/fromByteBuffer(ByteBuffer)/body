{
  DynamicComposite composite=DynamicComposite.fromByteBuffer(byteBuffer);
  Preconditions.checkArgument(composite.size() == 1 || composite.size() == 5,"Composite should have 1 or 5 elements");
  if (composite.size() == 1) {
    final boolean isCompacted=composite.get(0,BOOLEAN_SERIALIZER);
    return new Shard(Long.MIN_VALUE,Long.MIN_VALUE,isCompacted);
  }
 else {
    final byte version=composite.get(0,BYTE_SERIALIZER);
    final long shardIndex=composite.get(1,LONG_SERIALIZER);
    final long shardCreated=composite.get(2,LONG_SERIALIZER);
    final DirectedEdge shardEnd=composite.get(3,EDGE_SERIALIZER);
    final boolean isCompacted=composite.get(4,BOOLEAN_SERIALIZER);
    final Shard shard=new Shard(shardIndex,shardCreated,isCompacted);
    shard.setShardEnd(Optional.fromNullable(shardEnd));
    return shard;
  }
}
