{
  ExecutionStage mockExecutionStage=mock(ExecutionStage.class);
  StagePipeline createPipeline=mock(StagePipeline.class);
  StagePipeline updatePipeline=mock(StagePipeline.class);
  StagePipeline deletePipeline=mock(StagePipeline.class);
  StagePipeline loadPipeline=mock(StagePipeline.class);
  when(createPipeline.first()).thenReturn(mockExecutionStage);
  CollectionContext context=new CollectionContextImpl(UUIDGenerator.newTimeUUID(),UUIDGenerator.newTimeUUID(),"test");
  CollectionManager collectionManager=new CollectionManagerImpl(createPipeline,updatePipeline,deletePipeline,loadPipeline,context);
  Entity create=new Entity();
  MvccEntity mvccEntity=mock(MvccEntity.class);
  Entity returned=collectionManager.create(create);
  verify(createPipeline).first();
  ArgumentCaptor<ExecutionContext> contextArg=ArgumentCaptor.forClass(ExecutionContext.class);
  verify(mockExecutionStage).performStage(contextArg.capture());
  assertEquals("Entity should be present in the write context",create,contextArg.getValue().getMessage(Entity.class));
}
