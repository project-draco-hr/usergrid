{
  final int NUM_DEVICES=50;
  app.clear();
  String payload=getPayload();
  Map<String,String> payloads=new HashMap<String,String>(1);
  payloads.put(notifier.getUuid().toString(),payload);
  app.put("payloads",payloads);
  app.put("queued",System.currentTimeMillis());
  Entity e=app.testRequest(ServiceAction.POST,1,"notifications").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifications",e.getUuid());
  final Notification notification=(Notification)e.toTypedEntity();
  app.clear();
  app.put(notifier.getName() + NOTIFIER_ID_POSTFIX,PUSH_TOKEN);
  for (int i=0; i < NUM_DEVICES; i++) {
    Entity entity=app.getEm().create("device",app.getProperties());
    ns.addDevice(notification,entity);
  }
  int oldBatchSize=NotificationsQueueManager.BATCH_SIZE;
  NotificationsQueueManager.BATCH_SIZE=10;
  try {
    ExecutorService pool=Executors.newFixedThreadPool(APNsAdapter.MAX_CONNECTION_POOL_SIZE);
    pool.submit(new Runnable(){
      @Override public void run(){
        try {
          scheduleNotificationAndWait(notification);
        }
 catch (        Exception e) {
        }
      }
    }
);
  }
  finally {
    NotificationsQueueManager.BATCH_SIZE=oldBatchSize;
  }
  checkReceipts(notification,NUM_DEVICES);
  checkStatistics(notification,NUM_DEVICES,0);
}
