{
  app.clear();
  String payload=getPayload();
  Map<String,String> payloads=new HashMap<String,String>(1);
  payloads.put(notifier.getUuid().toString(),payload);
  app.put("payloads",payloads);
  app.put("queued",System.currentTimeMillis());
  Entity e=app.testRequest(ServiceAction.POST,1,"notifications").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifications",e.getUuid());
  Notification notification=app.getEm().get(e.getUuid(),Notification.class);
  assertEquals(notification.getPayloads().get(notifier.getUuid().toString()),payload);
  ns.addDevice(notification,device1);
  Query query=new Query();
  query.addFilter("state='" + Notification.State.STARTED.toString() + "'");
  Results results=app.getEm().searchCollection(app.getEm().getApplicationRef(),"notifications",query);
  Entity entity=results.getEntitiesMap().get(notification.getUuid());
  assertNotNull(entity);
  notification=scheduleNotificationAndWait(notification);
  query=new Query();
  query.addEqualityFilter("state",Notification.State.FINISHED.toString());
  results=app.getEm().searchCollection(app.getEm().getApplicationRef(),"notifications",query);
  entity=results.getEntitiesMap().get(notification.getUuid());
  assertNotNull(entity);
  checkReceipts(notification,1);
  checkStatistics(notification,1,0);
}
