{
  new HystrixCommand<Void>(GRAPH_REPAIR){
    @Override protected Void run() throws Exception {
      final T rootEvent=event.getEvent();
      for (      AsynchronousEventListener<T> listener : listeners) {
        listener.receive(rootEvent);
      }
      return null;
    }
  }
.toObservable(scheduler).subscribe(new Observer<Void>(){
    @Override public void onCompleted(){
      queue.remove(event);
    }
    @Override public void onError(    final Throwable throwable){
      LOG.error("Unable to process async event",throwable);
      for (      ErrorListener listener : errorListeners) {
        listener.onError(event,throwable);
      }
    }
    @Override public void onNext(    final Void args){
    }
  }
);
}
