{
  Map<String,Object> payload=new LinkedHashMap<String,Object>();
  payload.put("timestamp",0);
  payload.put("category","advertising");
  payload.put("counters",new LinkedHashMap<String,Object>(){
{
      put("ad_clicks",5);
    }
  }
);
  ApiResponse node=this.app().collection("events").post(payload);
  assertNotNull(node.getEntities());
  String advertising=node.getEntity().get("uuid").toString();
  refreshIndex();
  payload=new LinkedHashMap<String,Object>();
  payload.put("timestamp",0);
  payload.put("category","sales");
  payload.put("counters",new LinkedHashMap<String,Object>(){
{
      put("ad_sales",20);
    }
  }
);
  node=this.app().collection("events").post(payload);
  assertNotNull(node.getEntities());
  String sales=node.getEntity().get("uuid").toString();
  refreshIndex();
  payload=new LinkedHashMap<String,Object>();
  payload.put("timestamp",0);
  payload.put("category","marketing");
  payload.put("counters",new LinkedHashMap<String,Object>(){
{
      put("ad_clicks",10);
    }
  }
);
  node=this.app().collection("events").post(payload);
  assertNotNull(node.getEntities());
  String marketing=node.getEntity().get("uuid").toString();
  refreshIndex();
  String lastId=null;
  Collection collection;
  for (int i=0; i < 3; i++) {
    collection=this.app().collection("events").get();
    assertEquals("Expected Advertising",advertising,((Map)((ArrayList)collection.getResponse().getProperties().get("messages")).get(0)).get("uuid").toString());
    lastId=collection.getResponse().getProperties().get("last").toString();
  }
  QueryParameters queryParameters=new QueryParameters();
  queryParameters.addParam("last",lastId);
  collection=this.app().collection("events").get(queryParameters);
  assertEquals("Expected Sales",sales,((Map<String,Object>)((ArrayList)collection.getResponse().getProperties().get("messages")).get(0)).get("uuid").toString());
  lastId=collection.getResponse().getProperties().get("last").toString();
  queryParameters.addParam("last",lastId);
  collection=this.app().collection("events").get(queryParameters);
  assertEquals("Expected Marketing",marketing,((Map<String,Object>)((ArrayList)collection.getResponse().getProperties().get("messages")).get(0)).get("uuid").toString());
}
