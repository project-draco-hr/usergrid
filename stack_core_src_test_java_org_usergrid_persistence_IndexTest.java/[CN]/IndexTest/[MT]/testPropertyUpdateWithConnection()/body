{
  UUID applicationId=createApplication("testOrganization","testPropertyUpdateWithConnection");
  EntityManager em=emf.getEntityManager(applicationId);
  Map<String,Object> entity1=new LinkedHashMap<String,Object>();
  entity1.put("name","name_1");
  entity1.put("status","pickled");
  Map<String,Object> entity2=new LinkedHashMap<String,Object>();
  entity2.put("name","name_2");
  entity2.put("status","foo");
  Entity entity1Ref=em.create("names",entity1);
  Entity entity2Ref=em.create("names",entity2);
  em.createConnection(entity2Ref,"connecting",entity1Ref);
  Query query=Query.fromQL("select * where status = 'pickled'");
  Results r=em.searchCollection(em.getApplicationRef(),"names",query);
  assertEquals(1,r.size());
  assertEquals(entity1Ref.getUuid(),r.getEntity().getUuid());
  r=em.searchCollection(em.getApplicationRef(),"names",query);
  assertEquals(1,r.size());
  assertEquals(entity1Ref.getUuid(),r.getEntity().getUuid());
  entity1Ref.setProperty("status","herring");
  em.update(entity1Ref);
  query=Query.fromQL("select * where status = 'pickled'");
  r=em.searchCollection(em.getApplicationRef(),"names",query);
  assertEquals(0,r.size());
  r=em.searchCollection(em.getApplicationRef(),"names",query);
  assertEquals(0,r.size());
  query=Query.fromQL("select * where status = 'herring'");
  r=em.searchCollection(em.getApplicationRef(),"names",query);
  assertEquals(1,r.size());
  assertEquals(entity1Ref.getUuid(),r.getEntity().getUuid());
  r=em.searchCollection(em.getApplicationRef(),"names",query);
  assertEquals(1,r.size());
  assertEquals(entity1Ref.getUuid(),r.getEntity().getUuid());
}
