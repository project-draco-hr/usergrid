{
  Map<EntityRef,Set<String>> results=new LinkedHashMap<EntityRef,Set<String>>();
  Keyspace ko=cass.getApplicationKeyspace(applicationId);
  List<HColumn<DynamicComposite,ByteBuffer>> containers=cass.getAllColumns(ko,ENTITY_COMPOSITE_DICTIONARIES,key(headEntity.getUuid(),Schema.DICTIONARY_CONTAINER_ENTITIES),dce,be);
  if (containers != null) {
    for (    HColumn<DynamicComposite,ByteBuffer> container : containers) {
      DynamicComposite composite=container.getName();
      if (composite != null) {
        String ownerType=(String)composite.get(0);
        String collectionName=(String)composite.get(1);
        UUID ownerId=(UUID)composite.get(2);
        addMapSet(results,new SimpleEntityRef(ownerType,ownerId),collectionName);
        if (logger.isDebugEnabled()) {
          logger.debug(" {} ( {} ) is in collection {} ( {} ).",new Object[]{headEntity.getType(),headEntity.getUuid(),ownerType,collectionName,ownerId});
        }
      }
    }
  }
  EntityRef applicationRef=new SimpleEntityRef(TYPE_APPLICATION,applicationId);
  if (!results.containsKey(applicationRef)) {
    addMapSet(results,applicationRef,defaultCollectionName(headEntity.getType()));
  }
  return results;
}
