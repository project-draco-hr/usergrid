{
  context.clearUser();
  TestUser user1=new TestAppUser("testuser1@usergrid.org","password","testuser1@usergrid.org").create(context).login(context).makeActive(context);
  context.application().users().user("me").devices().create(MapUtils.hashMap("name","device1").map("number","5551112222"));
  context.clearUser();
  TestUser user2=new TestAppUser("testuser2@usergrid.org","password","testuser2@usergrid.org").create(context).login(context).makeActive(context);
  context.application().users().user("me").devices().create(MapUtils.hashMap("name","device2").map("number","5552223333"));
  context.withUser(user1);
  JsonNode data=context.application().users().user("me").devices().device("device1").get();
  assertNotNull(data);
  assertEquals("device1",getEntity(data,0).get("name").asText());
  data=context.application().users().user("me").devices().device("device2").get();
  assertNull(data);
  context.withUser(user2);
  data=context.application().users().user("me").devices().device("device2").get();
  assertNotNull(data);
  assertEquals("device2",getEntity(data,0).get("name").asText());
  data=context.application().users().user("me").devices().device("device1").get();
  assertNull(data);
  DevicesCollection devices=context.application().devices();
  user1.login(context);
  data=devices.device("device1").get();
  assertNotNull(data);
  assertEquals("device1",getEntity(data,0).get("name").asText());
  data=devices.device("device2").get();
  assertNotNull(data);
  assertEquals("device2",getEntity(data,0).get("name").asText());
  data=devices.device("device2").get();
  assertNull(data);
  user2.login(context);
  data=devices.device("device1").get();
  assertNotNull(data);
  assertEquals("device1",getEntity(data,0).get("name").asText());
  data=devices.device("device2").get();
  assertNotNull(data);
  assertEquals("device2",getEntity(data,0).get("name").asText());
  data=devices.device("device2").get();
  assertNull(data);
}
