{
  if (wrapper == null) {
    return null;
  }
  FieldBufferBuilder builder=new FieldBufferBuilder(3);
  builder.addByte(VERSION);
  builder.addUUID(wrapper.version);
  if (!wrapper.entity.isPresent()) {
    builder.addByte(STATE_DELETED);
    return FIELD_BUFFER_SERIALIZER.toByteBuffer(builder.build());
  }
  if (wrapper.status != MvccEntity.Status.COMPLETE) {
    throw new UnsupportedOperationException("Only states " + MvccEntity.Status.DELETED + " and "+ MvccEntity.Status.COMPLETE+ " are supported");
  }
  builder.addByte(STATE_COMPLETE);
  final Entity entity=wrapper.entity.get();
  final String entityString;
  try {
    final EntityMap entityMap=EntityMap.fromEntity(entity);
    entityString=MAPPER.writeValueAsString(entityMap);
  }
 catch (  JsonProcessingException jpe) {
    throw new RuntimeException("Unable to serialize entity",jpe);
  }
  final int maxEntrySize=serializationFig.getMaxEntitySize();
  if (entityString.length() > maxEntrySize) {
    throw new EntityTooLargeException(entity,maxEntrySize,entityString.length(),"Your entity cannot exceed " + maxEntrySize + " bytes. The entity you tried to save was "+ entityString.length()+ " bytes");
  }
  if (log.isDebugEnabled()) {
    log.debug("Entity(" + entityString + ") Version("+ wrapper.version+ ") State("+ wrapper.status+ ")");
  }
  builder.addString(entityString);
  return FIELD_BUFFER_SERIALIZER.toByteBuffer(builder.build());
}
