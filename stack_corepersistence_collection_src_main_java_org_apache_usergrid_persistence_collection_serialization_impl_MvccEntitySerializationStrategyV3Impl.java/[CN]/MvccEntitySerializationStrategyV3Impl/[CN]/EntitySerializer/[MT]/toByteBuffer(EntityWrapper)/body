{
  if (wrapper == null) {
    return null;
  }
  wrapper.setSerailizationVersion(VERSION);
  if (!wrapper.getOptionalEntity().isPresent()) {
    try {
      return ByteBuffer.wrap(MAPPER.writeValueAsBytes(wrapper));
    }
 catch (    JsonProcessingException jpe) {
      throw new RuntimeException("Unable to serialize entity",jpe);
    }
  }
  if (wrapper.getStatus() != MvccEntity.Status.COMPLETE) {
    throw new UnsupportedOperationException("Only states " + MvccEntity.Status.DELETED + " and "+ MvccEntity.Status.COMPLETE+ " are supported");
  }
  wrapper.setStatus(MvccEntity.Status.COMPLETE);
  final byte[] wrapperBytes;
  try {
    wrapperBytes=MAPPER.writeValueAsBytes(wrapper);
    final int maxEntrySize=serializationFig.getMaxEntitySize();
    if (wrapperBytes.length > maxEntrySize) {
      throw new EntityTooLargeException(Entity.fromMap(wrapper.getEntity()),maxEntrySize,wrapperBytes.length,"Your entity cannot exceed " + maxEntrySize + " bytes. The entity you tried to save was "+ wrapperBytes.length+ " bytes");
    }
  }
 catch (  JsonProcessingException jpe) {
    throw new RuntimeException("Unable to serialize entity",jpe);
  }
  return ByteBuffer.wrap(wrapperBytes);
}
