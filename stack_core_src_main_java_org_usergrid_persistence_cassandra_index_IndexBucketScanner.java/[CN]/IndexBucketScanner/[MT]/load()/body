{
  if (!hasMore) {
    return false;
  }
  List<String> keys=indexBucketLocator.getBuckets(applicationId,indexType,indexPath);
  List<Object> cassKeys=new ArrayList<Object>(keys.size());
  for (  String bucket : keys) {
    cassKeys.add(key(keyPrefix,bucket));
  }
  int selectSize=pageSize;
  final boolean firstPageSkipFirst=this.skipFirst && start == scanStart;
  if (firstPageSkipFirst) {
    selectSize++;
  }
  TreeSet<HColumn<ByteBuffer,ByteBuffer>> resultsTree=IndexMultiBucketSetLoader.load(cass,columnFamily,applicationId,cassKeys,start,finish,selectSize,reversed);
  if (resultsTree.size() == selectSize) {
    hasMore=true;
    start=resultsTree.pollLast().getName();
  }
 else {
    hasMore=false;
  }
  if (firstPageSkipFirst) {
    resultsTree.pollFirst();
  }
  lastResults=resultsTree;
  return lastResults != null && lastResults.size() > 0;
}
