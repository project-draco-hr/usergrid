{
  QuerySlice slice=node.getSlice();
  queryProcessor.applyCursorAndSort(slice);
  int size=queryProcessor.getPageSizeHint(node);
  ByteBuffer start=null;
  if (slice.hasCursor()) {
    start=slice.getCursor();
  }
  boolean skipFirst=node.isForceKeepFirst() ? false : slice.hasCursor();
  UUID entityIdToUse;
  String dictionaryType;
  String targetType;
  if (outgoing) {
    entityIdToUse=connection.getConnectingEntityId();
    dictionaryType=DICTIONARY_CONNECTED_ENTITIES;
    targetType=connection.getConnectedEntityType();
  }
 else {
    entityIdToUse=connection.getConnectedEntityId();
    dictionaryType=DICTIONARY_CONNECTING_ENTITIES;
    targetType=connection.getConnectingEntityType();
  }
  final String connectionType=connection.getConnectionType();
  final ConnectionIndexSliceParser connectionParser=new ConnectionIndexSliceParser(targetType);
  final Iterator<String> connectionTypes;
  if (connectionType != null) {
    connectionTypes=Collections.singleton(connectionType).iterator();
  }
 else {
    connectionTypes=new ConnectionTypesIterator(cassandraService,applicationId,entityIdToUse,outgoing,size);
  }
  IndexScanner connectionScanner=new ConnectedIndexScanner(cassandraService,dictionaryType,applicationId,entityIdToUse,connectionTypes,start,slice.isReversed(),size,skipFirst);
  this.results.push(new SliceIterator(slice,connectionScanner,connectionParser));
}
