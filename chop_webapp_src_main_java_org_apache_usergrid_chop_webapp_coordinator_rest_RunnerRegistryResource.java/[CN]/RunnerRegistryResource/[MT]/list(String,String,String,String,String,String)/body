{
  List<Runner> runnerList=Collections.emptyList();
  if (inTestMode(testMode)) {
    LOG.info("Calling /runners/list in test mode ...");
    return Response.ok(runnerList).build();
  }
  Preconditions.checkNotNull(user,"The 'user' request parameter MUST NOT be null.");
  Preconditions.checkNotNull(artifactId,"The 'artifactId' request parameter MUST NOT be null.");
  Preconditions.checkNotNull(groupId,"The 'groupId' request parameter MUST NOT be null.");
  Preconditions.checkNotNull(version,"The 'version' request parameter MUST NOT be null.");
  Preconditions.checkNotNull(commitId,"The 'commitId' request parameter MUST NOT be null.");
  String moduleId=BasicModule.createId(groupId,artifactId,version);
  Module inStore=moduleDao.get(moduleId);
  if (inStore == null) {
    LOG.warn("Returning empty runner list for request associated with non-existent module: {}",groupId + "." + artifactId+ "-"+ version);
    return Response.ok(runnerList).build();
  }
  LOG.info("Calling /runners/list for commitId {} on module {}",commitId,moduleId);
  try {
    runnerList=runnerDao.getRunners(user,commitId,inStore.getId());
  }
 catch (  IndexMissingException e) {
    LOG.warn("Got a missing index exception. Returning empty list of Runners.");
  }
  Runner[] runners=new Runner[runnerList.size()];
  return Response.status(Response.Status.CREATED).entity(runnerList.toArray(runners)).build();
}
