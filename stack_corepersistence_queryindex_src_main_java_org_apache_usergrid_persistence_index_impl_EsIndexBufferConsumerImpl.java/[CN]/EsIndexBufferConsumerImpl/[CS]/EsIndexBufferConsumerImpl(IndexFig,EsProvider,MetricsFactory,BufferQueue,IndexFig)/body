{
  this.flushTimer=metricsFactory.getTimer(EsIndexBufferConsumerImpl.class,"buffer.flush");
  this.flushMeter=metricsFactory.getMeter(EsIndexBufferConsumerImpl.class,"buffer.meter");
  this.indexSizeCounter=metricsFactory.getCounter(EsIndexBufferConsumerImpl.class,"buffer.size");
  this.indexErrorCounter=metricsFactory.getCounter(EsIndexBufferConsumerImpl.class,"error.count");
  metricsFactory.addGauge(EsIndexBufferConsumerImpl.class,"inflight.meter",new Gauge<Long>(){
    @Override public Long getValue(){
      return inFlight.longValue();
    }
  }
);
  this.config=config;
  this.failureMonitor=new FailureMonitorImpl(config,provider);
  this.client=provider.getClient();
  this.produceTimer=metricsFactory.getTimer(EsIndexBufferConsumerImpl.class,"index.buffer.consumer.messageFetch");
  this.bufferQueue=bufferQueue;
  this.indexFig=indexFig;
  subscriptions=new ArrayList<>(indexFig.getWorkerCount());
  start();
}
