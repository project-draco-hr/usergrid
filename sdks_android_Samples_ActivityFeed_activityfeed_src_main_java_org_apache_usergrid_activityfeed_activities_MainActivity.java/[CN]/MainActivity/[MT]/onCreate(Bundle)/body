{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.activity_main);
  UsergridManager.initializeSharedInstance(this);
  final EditText usernameEditText=(EditText)findViewById(R.id.usernameText);
  if (usernameEditText != null) {
    usernameEditText.setSelection(usernameEditText.getText().length());
  }
  final EditText passwordEditText=(EditText)findViewById(R.id.passwordEditText);
  if (passwordEditText != null) {
    passwordEditText.setSelection(passwordEditText.getText().length());
  }
  final Button signInButton=(Button)findViewById(R.id.signInButton);
  if (signInButton != null) {
    signInButton.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        if (usernameEditText != null && passwordEditText != null) {
          final String username=usernameEditText.getText().toString();
          final String password=passwordEditText.getText().toString();
          if (!username.isEmpty() && !password.isEmpty()) {
            UsergridManager.loginUser(MainActivity.this,username,password);
          }
 else {
            AlertDialogHelpers.showAlert(MainActivity.this,"Error Authenticating User","Username and password must not be empty.");
          }
        }
      }
    }
);
  }
  final TextView createAccountTextView=(TextView)findViewById(R.id.createAccountTextView);
  if (createAccountTextView != null) {
    final Intent createAccountIntent=new Intent(this,CreateAccountActivity.class);
    createAccountTextView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        MainActivity.this.startActivity(createAccountIntent);
      }
    }
);
  }
}
