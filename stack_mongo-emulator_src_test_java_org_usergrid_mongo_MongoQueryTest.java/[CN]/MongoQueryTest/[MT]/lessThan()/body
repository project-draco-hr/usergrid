{
  UUID appId=emf.lookupApplication("test-organization/test-app");
  EntityManager em=emf.getEntityManager(appId);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("name","Kings of Leon");
  properties.put("genre","Southern Rock");
  properties.put("founded",2000);
  em.create("lessthan",properties);
  properties=new LinkedHashMap<String,Object>();
  properties.put("name","Stone Temple Pilots");
  properties.put("genre","Rock");
  properties.put("founded",1986);
  em.create("lessthan",properties);
  properties=new LinkedHashMap<String,Object>();
  properties.put("name","Journey");
  properties.put("genre","Classic Rock");
  properties.put("founded",1973);
  em.create("lessthan",properties);
  Mongo m=new Mongo("localhost",27017);
  DB db=m.getDB("test-organization/test-app");
  db.authenticate("test@usergrid.com","test".toCharArray());
  BasicDBObject query=new BasicDBObject();
  query.put("founded",new BasicDBObject("$lt",2000));
  DBCollection coll=db.getCollection("lessthans");
  DBCursor cur=coll.find(query);
  assertTrue(cur.hasNext());
  DBObject result=cur.next();
  assertEquals("Journey",result.get("name"));
  assertEquals("Classic Rock",result.get("genre"));
  result=cur.next();
  assertEquals("Stone Temple Pilots",result.get("name"));
  assertEquals("Rock",result.get("genre"));
  assertFalse(cur.hasNext());
}
