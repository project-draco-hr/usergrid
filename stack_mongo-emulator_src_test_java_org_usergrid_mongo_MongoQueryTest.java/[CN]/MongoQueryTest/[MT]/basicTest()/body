{
  UUID appId=emf.lookupApplication("test-organization/test-query-app");
  EntityManager em=emf.getEntityManager(appId);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("name","Kings of Leon");
  properties.put("genre","Southern Rock");
  em.create("band",properties);
  properties=new LinkedHashMap<String,Object>();
  properties.put("name","Stone Temple Pilots");
  properties.put("genre","Rock");
  em.create("band",properties);
  properties=new LinkedHashMap<String,Object>();
  properties.put("name","Journey");
  properties.put("genre","Classic Rock");
  em.create("band",properties);
  Mongo m=new Mongo("localhost",27017);
  DB db=m.getDB("test-organization/test-query-app");
  db.authenticate("test@usergrid.com","test".toCharArray());
  Set<String> colls=db.getCollectionNames();
  boolean found=false;
  for (  String s : colls) {
    if ("bands".equals(s)) {
      found=true;
      break;
    }
  }
  assertTrue(found);
  DBCollection coll=db.getCollection("bands");
  DBCursor cur=coll.find();
  int count=0;
  while (cur.hasNext()) {
    count++;
  }
  assertEquals(3,count);
  BasicDBObject query=new BasicDBObject();
  query.put("genre","Southern Rock");
  cur=coll.find(query);
  assertTrue(cur.hasNext());
  DBObject result=cur.next();
  assertEquals("Kings of Leon",result.get("name"));
  assertEquals("Southern Rock",result.get("genre"));
  assertFalse(cur.hasNext());
}
