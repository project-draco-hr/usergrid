{
  io.doSetup();
  int size=10;
  int queryLimit=Query.MAX_LIMIT;
  int matchMax=queryLimit - 1;
  long start=System.currentTimeMillis();
  LOG.info("Writing {} entities.",size);
  List<String> expected=new ArrayList<String>(matchMax);
  for (int i=0; i < size; i++) {
    String name=String.valueOf(i);
    boolean searched=i < matchMax;
    Map<String,Object> entity=new HashMap<String,Object>();
    entity.put("name",name);
    entity.put("searched",searched);
    io.writeEntity(entity);
    if (searched) {
      expected.add(name);
    }
  }
  long stop=System.currentTimeMillis();
  LOG.info("Writes took {} ms",stop - start);
  Query query=new Query();
  query.addSort("created");
  query.setLimit(queryLimit);
  query.addEqualityFilter("searched",true);
  int count=0;
  start=System.currentTimeMillis();
  Results results=io.getResults(query);
  for (int i=0; i < results.size(); i++) {
    assertEquals(expected.get(count),results.getEntities().get(i).getName());
    count++;
  }
  assertTrue(results.getCursor() == null);
  stop=System.currentTimeMillis();
  LOG.info("Query took {} ms to return {} entities",stop - start,count);
  assertEquals(expected.size(),count);
}
