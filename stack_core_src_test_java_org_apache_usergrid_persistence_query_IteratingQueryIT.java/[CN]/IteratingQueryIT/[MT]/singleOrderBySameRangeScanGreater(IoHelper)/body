{
  io.doSetup();
  int size=200;
  int queryLimit=100;
  int startValue=99;
  long start=System.currentTimeMillis();
  LOG.info("Writing {} entities.",size);
  List<String> expected=new ArrayList<String>(size);
  for (int i=0; i < size; i++) {
    String name=String.valueOf(i);
    Map<String,Object> entity=new HashMap<String,Object>();
    entity.put("name",name);
    entity.put("index",i);
    io.writeEntity(entity);
    expected.add(name);
  }
  long stop=System.currentTimeMillis();
  LOG.info("Writes took {} ms",stop - start);
  Query query=Query.fromQL("select * where index = " + startValue + " sort by index desc");
  query.setLimit(queryLimit);
  int count=0;
  start=System.currentTimeMillis();
  Results results;
  do {
    results=io.getResults(query);
    for (int i=0; i < results.size(); i++) {
      assertEquals(expected.get(size - count - 1),results.getEntities().get(i).getName());
      count++;
    }
    query.setCursor(results.getCursor());
  }
 while (results.hasCursor());
  assertEquals(expected.size() - startValue - 1,count);
  stop=System.currentTimeMillis();
  LOG.info("Query took {} ms to return {} entities",stop - start,count);
}
