{
  return Observable.create(new Observable.OnSubscribeFunc<OperationResult<R>>(){
    @Override public Subscription onSubscribe(    final Observer<? super OperationResult<R>> observer){
      try {
        Futures.addCallback(execution.executeAsync(),new FutureCallback<OperationResult<R>>(){
          @Override public void onSuccess(          OperationResult<R> result){
            observer.onNext(result);
            observer.onCompleted();
          }
          @Override public void onFailure(          Throwable t){
            observer.onError(t);
          }
        }
);
      }
 catch (      ConnectionException e) {
        observer.onError(e);
      }
catch (      Throwable e) {
        observer.onError(e);
      }
      return Subscriptions.empty();
    }
  }
);
}
