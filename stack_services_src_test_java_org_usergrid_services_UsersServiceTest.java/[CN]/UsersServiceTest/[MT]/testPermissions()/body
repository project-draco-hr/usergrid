{
  logger.info("PermissionsTest.testPermissions");
  UUID applicationId=createApplication("testPermissions");
  assertNotNull(applicationId);
  ServiceManager sm=smf.getServiceManager(applicationId);
  assertNotNull(sm);
  EntityManager em=sm.getEntityManager();
  assertNotNull(em);
  em.createRole("manager",null);
  em.createRole("member",null);
  em.grantRolePermission("admin","users:access:*");
  em.grantRolePermission("admin","groups:access:*");
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  Entity user=em.create("user",properties);
  assertNotNull(user);
  testRequest(sm,ServiceAction.POST,1,null,"users",user.getUuid(),"roles","admin");
  testRequest(sm,ServiceAction.POST,1,null,"users",user.getUuid(),"roles","manager");
  em.grantUserPermission(user.getUuid(),"users:access:*");
  em.grantUserPermission(user.getUuid(),"groups:access:*");
  testDataRequest(sm,ServiceAction.GET,null,"users",user.getUuid(),"rolenames");
  testDataRequest(sm,ServiceAction.GET,null,"users",user.getUuid(),"permissions");
  testDataRequest(sm,ServiceAction.GET,null,"users",user.getUuid(),"roles","admin","permissions");
}
