{
  Map<String,String> originalProperties=getRemoteTestProperties();
  try {
    setTestProperty(PROPERTIES_SYSADMIN_APPROVES_ADMIN_USERS,"false");
    setTestProperty(PROPERTIES_SYSADMIN_APPROVES_ORGANIZATIONS,"false");
    setTestProperty(PROPERTIES_ADMIN_USERS_REQUIRE_CONFIRMATION,"false");
    setTestProperty(PROPERTIES_SYSADMIN_EMAIL,"sysadmin-1@mockserver.com");
    JsonNode node=postCreateOrgAndAdmin("test-org-1","test-user-1","Test User","test-user-1@mockserver.com","testpassword");
    UUID owner_uuid=UUID.fromString(node.findPath("data").findPath("owner").findPath("uuid").getTextValue());
    List<Message> inbox=org.jvnet.mock_javamail.Mailbox.get("test-user-1@mockserver.com");
    assertFalse(inbox.isEmpty());
    Message account_confirmation_message=inbox.get(0);
    assertEquals("User Account Confirmation: test-user-1@mockserver.com",account_confirmation_message.getSubject());
    String token=getTokenFromMessage(account_confirmation_message);
    logger.info(token);
    setup.getMgmtSvc().disableAdminUser(owner_uuid);
    try {
      resource().path("/management/token").queryParam("grant_type","password").queryParam("username","test-user-1").queryParam("password","testpassword").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(JsonNode.class);
      fail("request for disabled user should fail");
    }
 catch (    UniformInterfaceException uie) {
      ClientResponse.Status status=uie.getResponse().getClientResponseStatus();
      JsonNode body=uie.getResponse().getEntity(JsonNode.class);
      assertEquals("user disabled",body.findPath("error_description").getTextValue());
    }
    setup.getMgmtSvc().deactivateUser(setup.getEmf().getManagementAppId(),owner_uuid);
    try {
      resource().path("/management/token").queryParam("grant_type","password").queryParam("username","test-user-1").queryParam("password","testpassword").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(JsonNode.class);
      fail("request for deactivated user should fail");
    }
 catch (    UniformInterfaceException uie) {
      ClientResponse.Status status=uie.getResponse().getClientResponseStatus();
      JsonNode body=uie.getResponse().getEntity(JsonNode.class);
      assertEquals("user not activated",body.findPath("error_description").getTextValue());
    }
  }
  finally {
    setTestProperties(originalProperties);
  }
}
