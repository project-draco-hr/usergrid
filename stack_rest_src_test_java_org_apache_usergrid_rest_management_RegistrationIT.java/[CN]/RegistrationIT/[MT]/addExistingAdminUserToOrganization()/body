{
  Map<String,Object> originalProperties=getRemoteTestProperties();
  try {
    Mailbox.clearAll();
    setTestProperty(PROPERTIES_SYSADMIN_APPROVES_ADMIN_USERS,"false");
    setTestProperty(PROPERTIES_SYSADMIN_APPROVES_ORGANIZATIONS,"false");
    setTestProperty(PROPERTIES_ADMIN_USERS_REQUIRE_CONFIRMATION,"false");
    setTestProperty(PROPERTIES_DEFAULT_SYSADMIN_EMAIL,"sysadmin-1@mockserver.com");
    String adminUserName="AdminUserFromOtherOrg";
    String adminUserEmail="AdminUserFromOtherOrg@otherorg.com";
    Form userForm=new Form();
    userForm.add("username",adminUserEmail);
    userForm.add("name",adminUserEmail);
    userForm.add("email",adminUserEmail);
    userForm.add("password","password1");
    Map adminUserPostResponse=(management().users().post(User.class,userForm));
    refreshIndex();
    Map adminDataMap=(Map)adminUserPostResponse.get("data");
    Entity adminUser=new Entity((Map<String,Object>)adminDataMap.get("user"));
    assertNotNull(adminUser);
    Entity node=postAddAdminToOrg(this.clientSetup.getOrganizationName(),adminUserEmail,"password1");
    UUID userId=node.getUuid();
    assertEquals(adminUser.getUuid(),userId);
    Message[] msgs=getMessages("otherorg.com",adminUserName,"password1");
    assertEquals(1,msgs.length);
    String invited="User Invited To Organization";
    assertEquals(invited,msgs[0].getSubject());
  }
  finally {
    setTestProperties(originalProperties);
  }
}
