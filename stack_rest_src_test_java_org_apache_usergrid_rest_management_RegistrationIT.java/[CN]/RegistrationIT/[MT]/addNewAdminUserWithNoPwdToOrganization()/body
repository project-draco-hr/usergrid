{
  Map<String,Object> originalProperties=getRemoteTestProperties();
  try {
    Mailbox.clearAll();
    setTestProperty(PROPERTIES_SYSADMIN_APPROVES_ADMIN_USERS,"false");
    setTestProperty(PROPERTIES_SYSADMIN_APPROVES_ORGANIZATIONS,"false");
    setTestProperty(PROPERTIES_ADMIN_USERS_REQUIRE_CONFIRMATION,"false");
    setTestProperty(PROPERTIES_DEFAULT_SYSADMIN_EMAIL,"sysadmin-1@mockserver.com");
    String adminToken=getAdminToken().getAccessToken();
    Entity node=postAddAdminToOrg(this.clientSetup.getOrganizationName(),this.clientSetup.getUsername() + "@servertest.com","");
    UUID userId=node.getUuid();
    refreshIndex();
    String subject="Password Reset";
    Map<String,Object> testProperties=this.getRemoteTestProperties();
    String reset_url=String.format((String)testProperties.get(PROPERTIES_ADMIN_RESETPW_URL),userId.toString());
    String invited="User Invited To Organization";
    Message[] msgs=getMessages("servertest.com",this.clientSetup.getUsername(),"password");
    assertTrue(msgs.length == 2);
    assertEquals(subject,msgs[0].getSubject());
    assertEquals(invited,msgs[1].getSubject());
    String mailContent=(String)((MimeMultipart)msgs[0].getContent()).getBodyPart(1).getContent();
    logger.info(mailContent);
    assertTrue(StringUtils.contains(mailContent,reset_url));
    String token=getTokenFromMessage(msgs[0]);
    this.management().orgs().org(this.clientSetup.getOrganizationName()).users().getResource(false).queryParam("access_token",token).get(String.class);
  }
  finally {
    setTestProperties(originalProperties);
  }
}
