{
  int maxOrgs=3;
  int maxApps=3;
  int maxEntities=20;
  List<ApplicationInfo> appsMade=new ArrayList<>();
  List<OrganizationInfo> orgsMade=new ArrayList<>();
  for (int orgIndex=0; orgIndex < maxOrgs; orgIndex++) {
    String orgName="org_" + RandomStringUtils.randomAlphanumeric(10);
    OrganizationInfo orgMade=setup.getMgmtSvc().createOrganization(orgName,adminUser,true);
    orgsMade.add(orgMade);
    logger.debug("Created org {}",orgName);
    for (int appIndex=0; appIndex < maxApps; appIndex++) {
      String appName="app_" + RandomStringUtils.randomAlphanumeric(10);
      ApplicationInfo appMade=setup.getMgmtSvc().createApplication(orgMade.getUuid(),appName);
      appsMade.add(appMade);
      logger.debug("Created app {}",appName);
      for (int entityIndex=0; entityIndex < maxEntities; entityIndex++) {
        EntityManager appEm=setup.getEmf().getEntityManager(appMade.getId());
        appEm.create(appName + "_type",new HashMap<String,Object>(){
{
            put("property1","value1");
            put("property2","value2");
          }
        }
);
      }
    }
  }
  String exportFileName="exportOneOrganization.json";
  S3Export s3Export=new MockS3ExportImpl(exportFileName);
  HashMap<String,Object> payload=payloadBuilder(appsMade.get(0).getName());
  payload.put("organizationId",orgsMade.get(0).getUuid());
  payload.put("applicationId",appsMade.get(0).getId());
  ExportService exportService=setup.getExportService();
  UUID exportUUID=exportService.schedule(payload);
  JobData jobData=jobDataCreator(payload,exportUUID,s3Export);
  JobExecution jobExecution=mock(JobExecution.class);
  when(jobExecution.getJobData()).thenReturn(jobData);
  exportService.doExport(jobExecution);
  File exportedFile=new File(exportFileName);
  exportedFile.deleteOnExit();
  TypeReference<HashMap<String,Object>> typeRef=new TypeReference<HashMap<String,Object>>(){
  }
;
  ObjectMapper mapper=new ObjectMapper();
  Map<String,Object> jsonMap=mapper.readValue(new FileReader(exportedFile),typeRef);
  Map collectionsMap=(Map)jsonMap.get("collections");
  List collectionList=(List)collectionsMap.get("users");
  assertEquals(3,collectionList.size());
}
