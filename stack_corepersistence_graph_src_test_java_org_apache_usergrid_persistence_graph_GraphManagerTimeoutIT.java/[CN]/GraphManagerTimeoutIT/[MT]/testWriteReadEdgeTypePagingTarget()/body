{
  GraphManager em=emf.createGraphManager(scope);
  final Id targetId=createId("target");
  Edge edge1=createEdge(createId("source"),"test",targetId);
  em.writeEdge(edge1).toBlockingObservable().last();
  Edge edge2=createEdge(createId("source"),"test",targetId);
  em.writeEdge(edge2).toBlockingObservable().last();
  Edge edge3=createEdge(createId("source"),"test",targetId);
  em.writeEdge(edge3).toBlockingObservable().last();
  SearchByEdgeType search=createSearchByEdge(edge1.getTargetNode(),edge1.getType(),edge1.getVersion(),null);
  Observable<Edge> edges=em.loadEdgesToTarget(search);
  Iterator<Edge> returned=edges.toBlockingObservable().getIterator();
  assertEquals("Correct edge returned",edge1,returned.next());
  assertFalse("No more edges",returned.hasNext());
  search=createSearchByEdge(edge1.getTargetNode(),edge1.getType(),edge3.getVersion(),edge2);
  edges=em.loadEdgesToTarget(search);
  returned=edges.toBlockingObservable().getIterator();
  assertEquals("Paged correctly",edge3,returned.next());
  assertFalse("End of stream",returned.hasNext());
}
