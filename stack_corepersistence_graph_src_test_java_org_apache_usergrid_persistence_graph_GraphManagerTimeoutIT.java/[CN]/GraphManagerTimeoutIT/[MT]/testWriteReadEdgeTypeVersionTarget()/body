{
  GraphManager em=emf.createEdgeManager(scope);
  final UUID earlyVersion=UUIDGenerator.newTimeUUID();
  Edge edge=createEdge("source","test","target");
  em.writeEdge(edge).toBlockingObservable().last();
  SearchByEdgeType search=createSearchByEdge(edge.getTargetNode(),edge.getType(),edge.getVersion(),null);
  Observable<Edge> edges=em.loadEdgesToTarget(search);
  Edge returned=edges.toBlockingObservable().single();
  assertEquals("Correct edge returned",edge,returned);
  search=createSearchByEdge(edge.getTargetNode(),edge.getType(),earlyVersion,null);
  edges=em.loadEdgesToTarget(search);
  returned=edges.toBlockingObservable().singleOrDefault(null);
  assertNull("Earlier version should not be returned",returned);
}
