{
  final BlockingQueue<Runnable> queue=new ArrayBlockingQueue<Runnable>(maxQueueSize);
  if (rejectionAction == RejectionAction.ABORT) {
    return new MaxSizeThreadPool(queue,schedulerName,maxThreadCount);
  }
 else   if (rejectionAction == RejectionAction.CALLERRUNS) {
    return new MaxSizeThreadPoolCallerRuns(queue,schedulerName,maxThreadCount);
  }
 else   if (rejectionAction == RejectionAction.DROP) {
    return new MaxSizeThreadPoolDrops(queue,schedulerName,maxThreadCount);
  }
 else {
    throw new IllegalArgumentException("Unable to create a scheduler with the arguments provided");
  }
}
