{
  context.clearUser();
  TestUser user1=new TestAppUser("testuser1@usergrid.org","password","testuser1@usergrid.org").create(context).login(context).makeActive(context);
  JsonNode data=context.application().collection("restaurants").create(MapUtils.hashMap("name","4peaks"));
  String peaksId=getEntity(data,0).get("uuid").asText();
  data=context.application().users().user("me").connection("likes").entity(peaksId).post();
  context.clearUser();
  TestUser user2=new TestAppUser("testuser2@usergrid.org","password","testuser2@usergrid.org").create(context).login(context).makeActive(context);
  data=context.application().collection("restaurants").create(MapUtils.hashMap("name","arrogantbutcher"));
  String arrogantButcherId=getEntity(data,0).get("uuid").asText();
  data=context.application().users().user("me").connection("likes").entity(arrogantButcherId).post();
  Connection likeRestaurants=context.withUser(user1).application().users().user("me").connection("likes");
  data=likeRestaurants.entity(peaksId).get();
  assertNotNull(data);
  assertEquals("4peaks",getEntity(data,0).get("name").asText());
  data=likeRestaurants.entity(arrogantButcherId).get();
  assertNull(data);
  data=likeRestaurants.get();
  assertEquals("4peaks",getEntity(data,0).get("name").asText());
  assertNull(getEntity(data,1));
  likeRestaurants=context.withUser(user2).application().users().user("me").connection("likes");
  data=likeRestaurants.entity(arrogantButcherId).get();
  assertNotNull(data);
  assertEquals("arrogantbutcher",getEntity(data,0).get("name").asText());
  data=likeRestaurants.entity(peaksId).get();
  assertNull(data);
  data=likeRestaurants.get();
  assertEquals("arrogantbutcher",getEntity(data,0).get("name").asText());
  assertNull(getEntity(data,1));
  CustomCollection restaurants=context.withUser(user1).application().collection("restaurants");
  data=restaurants.entity("4peaks").get();
  assertNotNull(data);
  assertEquals("4peaks",getEntity(data,0).get("name").asText());
  data=restaurants.entity("arrogantbutcher").get();
  assertNotNull(data);
  assertEquals("arrogantbutcher",getEntity(data,0).get("name").asText());
  restaurants=context.withUser(user1).application().collection("restaurants");
  data=restaurants.entity("4peaks").get();
  assertNotNull(data);
  assertEquals("4peaks",getEntity(data,0).get("name").asText());
  data=restaurants.entity("arrogantbutcher").get();
  assertNotNull(data);
  assertEquals("arrogantbutcher",getEntity(data,0).get("name").asText());
}
