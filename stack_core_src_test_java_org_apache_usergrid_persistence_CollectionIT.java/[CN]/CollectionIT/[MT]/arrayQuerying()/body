{
  EntityManager em=app.getEntityManager();
  assertNotNull(em);
  logger.debug("arrayQuerying");
  Map<String,Object> root=new HashMap<String,Object>();
  root.put("intprop",10);
  root.put("array",new String[]{"val1","val2","val3 with spaces"});
  Map<String,Object> jsonData=(Map<String,Object>)JsonUtils.parse(JsonUtils.mapToJsonString(root));
  Entity saved=em.create("test",jsonData);
  app.refreshIndex();
  Query query=Query.fromQL("intprop = 10");
  Results results=em.searchCollection(em.getApplicationRef(),"tests",query);
  Entity entity=results.getEntitiesMap().get(saved.getUuid());
  assertNotNull(entity);
  query=Query.fromQL("array = 'val1'");
  results=em.searchCollection(em.getApplicationRef(),"tests",query);
  entity=results.getEntitiesMap().get(saved.getUuid());
  assertNotNull(entity);
  query=Query.fromQL("array = 'val2'");
  results=em.searchCollection(em.getApplicationRef(),"tests",query);
  entity=results.getEntitiesMap().get(saved.getUuid());
  assertNotNull(entity);
  query=Query.fromQL("array = 'val3'");
  results=em.searchCollection(em.getApplicationRef(),"tests",query);
  entity=results.getEntitiesMap().get(saved.getUuid());
  assertNull(entity);
  query=Query.fromQL("array contains 'spaces'");
  results=em.searchCollection(em.getApplicationRef(),"tests",query);
  entity=results.getEntitiesMap().get(saved.getUuid());
  assertNotNull(entity);
}
