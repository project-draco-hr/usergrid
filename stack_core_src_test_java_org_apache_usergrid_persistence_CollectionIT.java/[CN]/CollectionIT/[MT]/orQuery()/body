{
  LOG.debug("orQuery");
  EntityManager em=app.getEntityManager();
  assertNotNull(em);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("keywords","blah,test,game");
  properties.put("title","Solitaire");
  Entity game1=em.create("orquerygame",properties);
  assertNotNull(game1);
  properties=new LinkedHashMap<String,Object>();
  properties.put("keywords","random,test");
  properties.put("title","Hearts");
  Entity game2=em.create("orquerygame",properties);
  assertNotNull(game2);
  app.refreshIndex();
  Query query=Query.fromQL("select * where keywords contains 'Random' " + "OR keywords contains 'Game' order by title desc");
  Results r=em.searchCollection(em.getApplicationRef(),"orquerygames",query);
  assertEquals(2,r.size());
  Entity returned=r.getEntities().get(0);
  assertEquals(game1.getUuid(),returned.getUuid());
  returned=r.getEntities().get(1);
  assertEquals(game2.getUuid(),returned.getUuid());
  query=Query.fromQL("select * where ( keywords contains 'Random' " + "OR keywords contains 'Game') order by title desc");
  r=em.searchCollection(em.getApplicationRef(),"orquerygames",query);
  assertEquals(2,r.size());
  returned=r.getEntities().get(0);
  assertEquals(game1.getUuid(),returned.getUuid());
  returned=r.getEntities().get(1);
  assertEquals(game2.getUuid(),returned.getUuid());
  query=Query.fromQL("select * where keywords contains 'blah' " + "OR title contains 'blah'  order by title desc");
  r=em.searchCollection(em.getApplicationRef(),"orquerygames",query);
  assertEquals(1,r.size());
  returned=r.getEntities().get(0);
  assertEquals(game1.getUuid(),returned.getUuid());
  query=Query.fromQL("select * where  title contains 'blah' " + "OR keywords contains 'blah' order by title desc");
  r=em.searchCollection(em.getApplicationRef(),"orquerygames",query);
  assertEquals(1,r.size());
  returned=r.getEntities().get(0);
  assertEquals(game1.getUuid(),returned.getUuid());
}
