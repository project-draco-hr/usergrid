{
  UUID applicationId=setup.createApplication("testOrganization","pagingWithBoundsCriteria2");
  assertNotNull(applicationId);
  EntityManager em=setup.getEmf().getEntityManager(applicationId);
  assertNotNull(em);
  int size=40;
  List<UUID> entityIds=new ArrayList<UUID>();
  for (int i=0; i < size; i++) {
    Map<String,Object> properties=new LinkedHashMap<String,Object>();
    properties.put("index",i);
    Entity created=em.create("page",properties);
    entityIds.add(created.getUuid());
  }
  int pageSize=10;
  Query query=new Query();
  query.setLimit(pageSize);
  query.addFilter("index >= 10");
  query.addFilter("index <= 29");
  Results r=em.searchCollection(em.getApplicationRef(),"pages",query);
  for (int i=1; i < 3; i++) {
    LOG.info(JsonUtils.mapToFormattedJsonString(r.getEntities()));
    assertEquals(pageSize,r.size());
    for (int j=0; j < pageSize; j++) {
      assertEquals(entityIds.get(i * pageSize + j),r.getEntities().get(j).getUuid());
    }
    r=r.getNextPageResults();
  }
  assertEquals(0,r.size());
  assertNull(r.getCursor());
}
