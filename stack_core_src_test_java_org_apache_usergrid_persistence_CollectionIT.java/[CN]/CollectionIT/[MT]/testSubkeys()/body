{
  LOG.debug("testSubkeys");
  EntityManager em=app.getEntityManager();
  assertNotNull(em);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  Entity user=em.create("user",properties);
  assertNotNull(user);
  properties=new LinkedHashMap<String,Object>();
  properties.put("actor",hashMap("displayName","Ed Anuff").map("objectType","person"));
  properties.put("verb","tweet");
  properties.put("content","I ate a sammich");
  em.addToCollection(user,"activities",em.create("activity",properties));
  properties=new LinkedHashMap<String,Object>();
  properties.put("actor",hashMap("displayName","Ed Anuff").map("objectType","person"));
  properties.put("verb","post");
  properties.put("content","I wrote a blog post");
  em.addToCollection(user,"activities",em.create("activity",properties));
  properties=new LinkedHashMap<String,Object>();
  properties.put("actor",hashMap("displayName","Ed Anuff").map("objectType","person"));
  properties.put("verb","tweet");
  properties.put("content","I ate another sammich");
  em.addToCollection(user,"activities",em.create("activity",properties));
  properties=new LinkedHashMap<String,Object>();
  properties.put("actor",hashMap("displayName","Ed Anuff").map("objectType","person"));
  properties.put("verb","post");
  properties.put("content","I wrote another blog post");
  em.addToCollection(user,"activities",em.create("activity",properties));
  app.refreshIndex();
  Results r=em.searchCollection(user,"activities",Query.searchForProperty("verb","post"));
  LOG.info(JsonUtils.mapToFormattedJsonString(r.getEntities()));
  assertEquals(2,r.size());
}
