{
  logger.debug("testGroups");
  EntityManager em=app.getEntityManager();
  assertNotNull(em);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  Entity user1=em.create("user",properties);
  assertNotNull(user1);
  properties=new LinkedHashMap<String,Object>();
  properties.put("username","djacobs");
  properties.put("email","djacobs@gmail.com");
  Entity user2=em.create("user",properties);
  assertNotNull(user2);
  properties=new LinkedHashMap<String,Object>();
  properties.put("path","group1");
  Entity group=em.create("group",properties);
  assertNotNull(group);
  em.addToCollection(group,"users",user1);
  em.addToCollection(group,"users",user2);
  properties=new LinkedHashMap<String,Object>();
  properties.put("nickname","ed");
  em.updateProperties(user1,properties);
  app.refreshIndex();
  Thread.sleep(1000);
  final Query query=Query.fromQL("nickname = 'ed'");
  Results r=em.searchCollectionConsistent(group,"users",query.withResultsLevel(Level.LINKED_PROPERTIES),1);
  logger.info(JsonUtils.mapToFormattedJsonString(r.getEntities()));
  assertEquals(1,r.size());
  assertTrue(r.getEntities().get(0).getUuid().equals(user1.getUuid()));
  em.removeFromCollection(user1,"groups",group);
  r=em.searchCollection(user1,"groups",Query.all());
  List<Entity> entities=r.getEntities();
  assertTrue(entities.size() == 0);
}
