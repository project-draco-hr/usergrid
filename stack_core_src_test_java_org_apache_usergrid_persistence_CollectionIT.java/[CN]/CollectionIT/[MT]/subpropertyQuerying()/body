{
  EntityManager em=app.getEntityManager();
  assertNotNull(em);
  LOG.debug("subpropertyQuerying");
  Map<String,Object> root=new HashMap<String,Object>();
  Map<String,Object> subEntity=new HashMap<String,Object>();
  root.put("rootprop1","simpleprop");
  subEntity.put("intprop",10);
  subEntity.put("substring","I'm a tokenized string that should be indexed");
  root.put("subentity",subEntity);
  Entity saved=em.create("test",root);
  app.refreshIndex();
  Query query=new Query();
  query.addEqualityFilter("rootprop1","simpleprop");
  Entity entity;
  Results results;
  do {
    results=em.searchCollection(em.getApplicationRef(),"tests",query);
    entity=results.getEntitiesMap().get(saved.getUuid());
    if (entity == null) {
      Thread.sleep(200);
    }
  }
 while (entity == null);
  assertNotNull(entity);
  query=new Query();
  query.addEqualityFilter("subentity.intprop",10);
  results=em.searchCollection(em.getApplicationRef(),"tests",query);
  entity=results.getEntitiesMap().get(saved.getUuid());
  assertNotNull(entity);
  query=new Query();
  query.addContainsFilter("subentity.substring","tokenized");
  query.addContainsFilter("subentity.substring","indexed");
  results=em.searchCollection(em.getApplicationRef(),"tests",query);
  entity=results.getEntitiesMap().get(saved.getUuid());
  assertNotNull(entity);
}
