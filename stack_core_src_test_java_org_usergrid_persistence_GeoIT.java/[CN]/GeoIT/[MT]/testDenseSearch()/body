{
  UUID applicationId=setup.createApplication("testOrganization","testDistanceByLimit");
  assertNotNull(applicationId);
  EntityManager em=setup.getEmf().getEntityManager(applicationId);
  assertNotNull(em);
  int numEntities=500;
  float minLattitude=48.32455f;
  float maxLattitude=48.46481f;
  float minLongitude=9.89561f;
  float maxLongitude=10.0471f;
  float lattitudeDelta=(maxLattitude - minLattitude) / numEntities;
  float longitudeDelta=(maxLongitude - minLongitude) / numEntities;
  for (int i=0; i < numEntities; i++) {
    float lattitude=minLattitude + lattitudeDelta * i;
    float longitude=minLongitude + longitudeDelta * i;
    Map<String,Float> location=MapUtils.hashMap("latitude",lattitude).map("longitude",longitude);
    Map<String,Object> data=new HashMap<String,Object>(2);
    data.put("name",String.valueOf(i));
    data.put("location",location);
    em.create("store",data);
  }
  float lattitude=48.38626f;
  float longtitude=9.94175f;
  int distance=1000;
  int limit=8;
  QuerySlice slice=new QuerySlice("location",0);
  GeoIterator itr=new GeoIterator(new CollectionGeoSearch(em,setup.getIbl(),setup.getCassSvc(),em.getApplicationRef(),"stores"),limit,slice,"location",new Point(lattitude,longtitude),distance);
  assertFalse(itr.hasNext());
  List<String> cells=itr.getLastCellsSearched();
  assertEquals(1,cells.size());
  assertEquals(4,cells.get(0).length());
  long startTime=System.currentTimeMillis();
  Query query=new Query();
  query.addFilter("location within 1000 of 48.38626, 9.94175");
  query.setLimit(8);
  Results results=em.searchCollection(em.getApplicationRef(),"stores",query);
  assertEquals(0,results.size());
  long endTime=System.currentTimeMillis();
  LOG.info("Runtime took {} milliseconds to search",endTime - startTime);
}
