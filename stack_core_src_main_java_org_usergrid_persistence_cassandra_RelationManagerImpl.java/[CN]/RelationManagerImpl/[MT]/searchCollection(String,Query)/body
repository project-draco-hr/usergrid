{
  if (query == null) {
    query=new Query();
  }
  headEntity=em.validate(headEntity);
  CollectionInfo collection=getDefaultSchema().getCollection(headEntity.getType(),collectionName);
  query.setEntityType(collection.getType());
  boolean reversed=query.isReversed();
  if (!query.hasQueryPredicates() && !query.hasSortPredicates()) {
    List<UUID> ids=query.getUuidIdentifiers();
    if (ids == null) {
      ids=cass.getIdList(cass.getApplicationKeyspace(applicationId),key(headEntity.getUuid(),DICTIONARY_COLLECTIONS,collectionName),query.getStartResult(),null,query.getLimit() + 1,reversed,indexBucketLocator,applicationId,collectionName);
    }
    Results results=Results.fromIdList(ids,collection.getType());
    if (results != null) {
      results.setQuery(query);
    }
    return em.loadEntities(results,query.getResultsLevel(),query.getLimit());
  }
  QueryProcessor qp=new QueryProcessor(query,collection);
  SearchCollectionVisitor visitor=new SearchCollectionVisitor(query,qp,collection);
  List<Entity> searchEntities=qp.getEntities(em,visitor);
  Results results=Results.fromEntities(searchEntities);
  if (results == null) {
    return null;
  }
  results.setCursor(qp.getCursor());
  results.setQuery(query);
  logger.debug("Query cursor: {}",results.getCursor());
  return results;
}
