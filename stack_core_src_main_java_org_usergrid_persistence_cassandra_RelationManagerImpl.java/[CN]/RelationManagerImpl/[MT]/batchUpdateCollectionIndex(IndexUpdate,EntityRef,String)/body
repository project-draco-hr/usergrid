{
  logger.info("batchUpdateCollectionIndex");
  Entity indexedEntity=indexUpdate.getEntity();
  String bucketId=indexBucketLocator.getBucket(applicationId,IndexType.COLLECTION,indexedEntity.getUuid(),indexedEntity.getType(),indexUpdate.getEntryName());
  CollectionInfo collection=getDefaultSchema().getCollection(owner.getType(),collectionName);
  Object index_name=null;
  Object index_key=null;
  for (  IndexEntry entry : indexUpdate.getPrevEntries()) {
    if (entry.getValue() != null) {
      index_name=key(owner.getUuid(),collectionName,entry.getPath());
      index_key=key(index_name,bucketId);
      addDeleteToMutator(indexUpdate.getBatch(),ENTITY_INDEX,index_key,entry.getIndexComposite(),indexUpdate.getTimestamp());
      if (collection != null) {
        if (collection.hasSubkeys()) {
          List<String[]> combos=collection.getSubkeyCombinations();
          for (          String[] combo : combos) {
            List<Object> subkey_props=new ArrayList<Object>();
            for (            String subkey_name : combo) {
              Object subkey_value=null;
              if (subkey_name != null) {
                subkey_value=indexUpdate.getEntity().getProperty(subkey_name);
              }
              subkey_props.add(subkey_value);
            }
            Object subkey_key=key(subkey_props.toArray());
            Object index_subkey_key=key(owner.getUuid(),collectionName,subkey_key,entry.getPath());
            addDeleteToMutator(indexUpdate.getBatch(),ENTITY_INDEX,index_subkey_key,entry.getIndexComposite(),indexUpdate.getTimestamp());
          }
        }
      }
      if ("location.coordinates".equals(entry.getPath())) {
        EntityLocationRef loc=new EntityLocationRef(indexUpdate.getEntity(),entry.getTimestampUuid(),entry.getValue().toString());
        batchRemoveLocationFromCollectionIndex(indexUpdate.getBatch(),indexBucketLocator,applicationId,index_name,loc);
      }
    }
 else {
      logger.error("Unexpected condition - deserialized property value is null");
    }
  }
  if ((indexUpdate.getNewEntries().size() > 0) && (!indexUpdate.isMultiValue() || (indexUpdate.isMultiValue() && !indexUpdate.isRemoveListEntry()))) {
    for (    IndexEntry indexEntry : indexUpdate.getNewEntries()) {
      index_name=key(owner.getUuid(),collectionName,indexEntry.getPath());
      index_key=key(index_name,bucketId);
      addInsertToMutator(indexUpdate.getBatch(),ENTITY_INDEX,index_key,indexEntry.getIndexComposite(),null,indexUpdate.getTimestamp());
      if (collection != null) {
        if (collection.hasSubkeys()) {
          List<String[]> combos=collection.getSubkeyCombinations();
          for (          String[] combo : combos) {
            List<Object> subkey_props=new ArrayList<Object>();
            for (            String subkey_name : combo) {
              Object subkey_value=null;
              if (subkey_name != null) {
                subkey_value=indexUpdate.getEntity().getProperty(subkey_name);
              }
              subkey_props.add(subkey_value);
            }
            Object subkey_key=key(subkey_props.toArray());
            Object index_subkey_key=key(owner.getUuid(),collectionName,subkey_key,indexEntry.getPath(),bucketId);
            addInsertToMutator(indexUpdate.getBatch(),ENTITY_INDEX,index_subkey_key,indexEntry.getIndexComposite(),null,indexUpdate.getTimestamp());
          }
        }
      }
      if ("location.coordinates".equals(indexEntry.getPath())) {
        EntityLocationRef loc=new EntityLocationRef(indexUpdate.getEntity(),indexEntry.getTimestampUuid(),indexEntry.getValue().toString());
        batchStoreLocationInCollectionIndex(indexUpdate.getBatch(),indexBucketLocator,applicationId,index_name,indexedEntity.getUuid(),loc);
      }
    }
  }
  for (  String index : indexUpdate.getIndexesSet()) {
    addInsertToMutator(indexUpdate.getBatch(),ENTITY_DICTIONARIES,key(owner.getUuid(),collectionName,Schema.DICTIONARY_INDEXES),index,null,indexUpdate.getTimestamp());
  }
  return indexUpdate;
}
