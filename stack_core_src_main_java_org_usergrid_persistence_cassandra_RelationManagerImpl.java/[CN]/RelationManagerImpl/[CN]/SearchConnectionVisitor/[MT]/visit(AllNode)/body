{
  QuerySlice slice=node.getSlice();
  queryProcessor.applyCursorAndSort(slice);
  int size=queryProcessor.getPageSizeHint(node);
  ByteBuffer start=null;
  if (slice.hasCursor()) {
    start=slice.getCursor();
  }
  if (start != null) {
    size++;
  }
  boolean skipFirst=node.isForceKeepFirst() ? false : slice.hasCursor();
  UUID entityIdToUse=connection.getConnectedEntityId();
  String dictionaryType=connection.isSource() ? DICTIONARY_CONNECTED_ENTITIES : DICTIONARY_CONNECTING_ENTITIES;
  String connectionType=connection.getConnectionType();
  ConnectionIndexSliceParser connectionParser=new ConnectionIndexSliceParser(connection.getConnectedEntityType());
  IndexScanner connectionScanner=new ConnectedIndexScanner(cass,dictionaryType,applicationId,entityIdToUse,connectionType,start,slice.isReversed(),size);
  this.results.push(new SliceIterator<DynamicComposite>(slice,connectionScanner,connectionParser,skipFirst));
}
