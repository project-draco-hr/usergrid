{
  Object subKey=getCFKeyForSubkey(collection,node);
  IntersectionIterator intersection=new IntersectionIterator(queryProcessor.getPageSizeHint(node));
  for (  QuerySlice slice : node.getAllSlices()) {
    Object indexKey=subKey == null ? key(headEntity.getUuid(),collection.getName()) : key(headEntity.getUuid(),collection.getName(),subKey);
    queryProcessor.applyCursorAndSort(slice);
    IndexScanner columns=null;
    if (slice.isComplete()) {
      columns=new NoOpIndexScanner();
    }
 else {
      columns=searchIndexBuckets(indexKey,slice,collection.getName(),queryProcessor.getPageSizeHint(node));
    }
    intersection.addIterator(new SliceIterator<DynamicComposite>(columns,slice,COLLECTION_PARSER,slice.hasCursor()));
  }
  this.results.push(intersection);
}
