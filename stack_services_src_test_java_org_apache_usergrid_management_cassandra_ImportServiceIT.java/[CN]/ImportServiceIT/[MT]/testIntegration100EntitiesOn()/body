{
  S3Export s3Export=new S3ExportImpl();
  HashMap<String,Object> payload=payloadBuilder();
  payload.put("organizationId",organization.getUuid());
  payload.put("applicationId",applicationId);
  String bucketName=System.getProperty("bucketName");
  String accessId=System.getProperty("accessKey");
  String secretKey=System.getProperty("secretKey");
  Properties overrides=new Properties();
  overrides.setProperty("s3" + ".identity",accessId);
  overrides.setProperty("s3" + ".credential",secretKey);
  final Iterable<? extends Module> MODULES=ImmutableSet.of(new JavaUrlHttpCommandExecutorServiceModule(),new Log4JLoggingModule(),new NettyPayloadModule());
  BlobStoreContext context=ContextBuilder.newBuilder("s3").credentials(accessId,secretKey).modules(MODULES).overrides(overrides).buildView(BlobStoreContext.class);
  FileOutputStream fop=null;
  File ephemeral=new File("temp_file");
  ephemeral.deleteOnExit();
  try {
    BlobStore blobStore=context.getBlobStore();
    Blob blob=blobStore.getBlob(bucketName,s3Export.getFilename());
    fop=new FileOutputStream(ephemeral);
    blob.getPayload().writeTo(fop);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
catch (  ContainerNotFoundException m) {
    m.printStackTrace();
  }
  assertNotNull(ephemeral);
}
