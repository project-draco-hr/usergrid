{
  EntityManager em=setup.getEmf().getEntityManager(MANAGEMENT_APPLICATION_ID);
  Group organizationEntity=new Group();
  organizationEntity.setPath("tst-counter");
  organizationEntity.setProperty("name","testCounter");
  organizationEntity=em.create(organizationEntity);
  UUID applicationId=setup.getEmf().createApplication("testCounter","testEntityCounters");
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("name","testCounter/testEntityCounters");
  Entity applicationEntity=em.create(applicationId,"application_info",properties);
  em.createConnection(new SimpleEntityRef("group",organizationEntity.getUuid()),"owns",new SimpleEntityRef("application_info",applicationId));
  Event event=new Event();
  event.setTimestamp(System.currentTimeMillis());
  event.addCounter("admin.logins",1);
  event.setGroup(organizationEntity.getUuid());
  em.create(event);
  Map<String,Long> counts=em.getApplicationCounters();
  LOG.info(JsonUtils.mapToJsonString(counts));
  assertNotNull(counts.get("admin.logins"));
  assertEquals(1,counts.get("admin.logins").longValue());
  Results r=em.getAggregateCounters(null,null,null,"admin.logins",CounterResolution.ALL,ts,System.currentTimeMillis(),false);
  LOG.info(JsonUtils.mapToJsonString(r.getCounters()));
  assertEquals(1,r.getCounters().get(0).getValues().get(0).getValue());
  Query query=new Query();
  query.addCounterFilter("admin.logins:*:*:*");
  query.setStartTime(ts);
  query.setFinishTime(System.currentTimeMillis());
  query.setResolution(CounterResolution.SIX_HOUR);
  r=em.getAggregateCounters(query);
  LOG.info(JsonUtils.mapToJsonString(r.getCounters()));
  assertEquals(1,r.getCounters().get(0).getValues().get(0).getValue());
}
