{
  try {
    int _type=FLOAT;
    int _channel=DEFAULT_TOKEN_CHANNEL;
{
      int alt12=2;
switch (input.LA(1)) {
case '-':
{
          alt12=1;
        }
      break;
  }
switch (alt12) {
case 1:
{
      match('-');
    }
  break;
}
int alt19=3;
alt19=dfa19.predict(input);
switch (alt19) {
case 1:
{
  int cnt13=0;
  loop13:   do {
    int alt13=2;
switch (input.LA(1)) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
        alt13=1;
      }
    break;
}
switch (alt13) {
case 1:
{
    if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
      input.consume();
    }
 else {
      MismatchedSetException mse=new MismatchedSetException(null,input);
      recover(mse);
      throw mse;
    }
  }
break;
default :
if (cnt13 >= 1) break loop13;
EarlyExitException eee=new EarlyExitException(13,input);
throw eee;
}
cnt13++;
}
 while (true);
match('.');
loop14: do {
int alt14=2;
switch (input.LA(1)) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
alt14=1;
}
break;
}
switch (alt14) {
case 1:
{
if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
input.consume();
}
 else {
MismatchedSetException mse=new MismatchedSetException(null,input);
recover(mse);
throw mse;
}
}
break;
default :
break loop14;
}
}
 while (true);
int alt15=2;
switch (input.LA(1)) {
case 'E':
case 'e':
{
alt15=1;
}
break;
}
switch (alt15) {
case 1:
{
mEXPONENT();
}
break;
}
}
break;
case 2:
{
match('.');
int cnt16=0;
loop16: do {
int alt16=2;
switch (input.LA(1)) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
alt16=1;
}
break;
}
switch (alt16) {
case 1:
{
if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
input.consume();
}
 else {
MismatchedSetException mse=new MismatchedSetException(null,input);
recover(mse);
throw mse;
}
}
break;
default :
if (cnt16 >= 1) break loop16;
EarlyExitException eee=new EarlyExitException(16,input);
throw eee;
}
cnt16++;
}
 while (true);
int alt17=2;
switch (input.LA(1)) {
case 'E':
case 'e':
{
alt17=1;
}
break;
}
switch (alt17) {
case 1:
{
mEXPONENT();
}
break;
}
}
break;
case 3:
{
int cnt18=0;
loop18: do {
int alt18=2;
switch (input.LA(1)) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
alt18=1;
}
break;
}
switch (alt18) {
case 1:
{
if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
input.consume();
}
 else {
MismatchedSetException mse=new MismatchedSetException(null,input);
recover(mse);
throw mse;
}
}
break;
default :
if (cnt18 >= 1) break loop18;
EarlyExitException eee=new EarlyExitException(18,input);
throw eee;
}
cnt18++;
}
 while (true);
mEXPONENT();
}
break;
}
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
