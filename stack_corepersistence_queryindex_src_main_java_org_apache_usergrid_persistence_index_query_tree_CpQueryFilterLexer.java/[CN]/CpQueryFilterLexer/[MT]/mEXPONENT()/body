{
  try {
{
      if (input.LA(1) == 'E' || input.LA(1) == 'e') {
        input.consume();
      }
 else {
        MismatchedSetException mse=new MismatchedSetException(null,input);
        recover(mse);
        throw mse;
      }
      int alt22=2;
switch (input.LA(1)) {
case '+':
case '-':
{
          alt22=1;
        }
      break;
  }
switch (alt22) {
case 1:
{
      if (input.LA(1) == '+' || input.LA(1) == '-') {
        input.consume();
      }
 else {
        MismatchedSetException mse=new MismatchedSetException(null,input);
        recover(mse);
        throw mse;
      }
    }
  break;
}
int cnt23=0;
loop23: do {
int alt23=2;
switch (input.LA(1)) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
    alt23=1;
  }
break;
}
switch (alt23) {
case 1:
{
if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
  input.consume();
}
 else {
  MismatchedSetException mse=new MismatchedSetException(null,input);
  recover(mse);
  throw mse;
}
}
break;
default :
if (cnt23 >= 1) break loop23;
EarlyExitException eee=new EarlyExitException(23,input);
throw eee;
}
cnt23++;
}
 while (true);
}
}
  finally {
}
}
