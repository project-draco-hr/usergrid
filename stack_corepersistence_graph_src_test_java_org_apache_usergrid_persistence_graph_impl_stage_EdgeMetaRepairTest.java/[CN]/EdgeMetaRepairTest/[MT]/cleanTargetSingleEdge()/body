{
  Edge edge=createEdge("source","test","target");
  edgeSerialization.writeEdge(scope,edge).execute();
  edgeMetadataSerialization.writeEdge(scope,edge).execute();
  int value=edgeMetaRepair.repairTargets(scope,edge.getTargetNode(),edge.getType(),edge.getVersion()).toBlockingObservable().single();
  assertEquals("No subtypes removed, edge exists",1,value);
  edgeSerialization.deleteEdge(scope,edge).execute();
  value=edgeMetaRepair.repairTargets(scope,edge.getTargetNode(),edge.getType(),edge.getVersion()).toBlockingObservable().single();
  assertEquals("Single subtype should be removed",0,value);
  Iterator<String> edgeTypes=edgeMetadataSerialization.getEdgeTypesToTarget(scope,new SimpleSearchEdgeType(edge.getTargetNode(),null));
  assertFalse("No edge types exist",edgeTypes.hasNext());
  Iterator<String> sourceTypes=edgeMetadataSerialization.getIdTypesToTarget(scope,new SimpleSearchIdType(edge.getTargetNode(),edge.getType(),null));
  assertFalse("No edge types exist",sourceTypes.hasNext());
}
