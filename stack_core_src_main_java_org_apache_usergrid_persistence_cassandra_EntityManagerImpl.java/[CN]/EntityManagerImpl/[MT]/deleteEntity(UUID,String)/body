{
  logger.info("deleteEntity {} of application {}",entityId,applicationId);
  EntityRef entity=new SimpleEntityRef(type,entityId);
  logger.info("deleteEntity: {} is of type {}",entityId,entity.getType());
  Keyspace ko=cass.getApplicationKeyspace(applicationId);
  Mutator<ByteBuffer> m=createMutator(ko,be);
  UUID timestampUuid=newTimeUUID();
  long timestamp=getTimestampInMicros(timestampUuid);
  getRelationManager(ref(entityId)).batchDisconnect(m,timestampUuid);
  Set<String> properties=getPropertyNames(entity);
  if (properties != null) {
    for (    String propertyName : properties) {
      m=batchSetProperty(m,entity,propertyName,null,true,false,timestampUuid);
    }
  }
  Set<String> dictionaries=getDictionaryNames(entity);
  if (dictionaries != null) {
    for (    String dictionary : dictionaries) {
      Set<Object> values=getDictionaryAsSet(entity,dictionary);
      if (values != null) {
        for (        Object value : values) {
          batchUpdateDictionary(m,entity,dictionary,value,true,timestampUuid);
        }
      }
    }
  }
  getRelationManager(entity).batchRemoveFromContainers(m,timestampUuid);
  if (!TYPE_APPLICATION.equals(entity.getType())) {
    String collection_name=Schema.defaultCollectionName(entity.getType());
    decrementEntityCollection(collection_name);
  }
  timestamp+=1;
  if (dictionaries != null) {
    for (    String dictionary : dictionaries) {
      ApplicationCF cf=getDefaultSchema().hasDictionary(entity.getType(),dictionary) ? ENTITY_DICTIONARIES : ENTITY_COMPOSITE_DICTIONARIES;
      addDeleteToMutator(m,cf,key(entity.getUuid(),dictionary),timestamp);
    }
  }
  addDeleteToMutator(m,ENTITY_PROPERTIES,key(entityId),timestamp);
  batchExecute(m,CassandraService.RETRY_COUNT);
}
