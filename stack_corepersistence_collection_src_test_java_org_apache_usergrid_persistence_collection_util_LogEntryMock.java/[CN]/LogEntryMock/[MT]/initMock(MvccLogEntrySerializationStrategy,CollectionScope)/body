{
  when(logEntrySerializationStrategy.load(same(scope),same(entityId),any(UUID.class),any(Integer.class))).thenAnswer(new Answer<List<MvccLogEntry>>(){
    @Override public List<MvccLogEntry> answer(    final InvocationOnMock invocation) throws Throwable {
      final UUID startVersion=(UUID)invocation.getArguments()[2];
      final int count=(Integer)invocation.getArguments()[3];
      final List<MvccLogEntry> results=new ArrayList<>(count);
      final Iterator<MvccLogEntry> itr=entries.tailMap(startVersion,true).values().iterator();
      for (int i=0; i < count && itr.hasNext(); i++) {
        results.add(itr.next());
      }
      return results;
    }
  }
);
}
