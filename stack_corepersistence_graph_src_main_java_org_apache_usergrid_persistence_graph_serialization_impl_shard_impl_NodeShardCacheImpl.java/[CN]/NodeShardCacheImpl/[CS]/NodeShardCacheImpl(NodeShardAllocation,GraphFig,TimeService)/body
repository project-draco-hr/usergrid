{
  Preconditions.checkNotNull(nodeShardAllocation,"nodeShardAllocation is required");
  Preconditions.checkNotNull(graphFig,"consistencyFig is required");
  Preconditions.checkNotNull(timeservice,"timeservice is required");
  this.nodeShardAllocation=nodeShardAllocation;
  this.graphFig=graphFig;
  this.timeservice=timeservice;
  this.graphFig.addPropertyChangeListener(new PropertyChangeListener(){
    @Override public void propertyChange(    final PropertyChangeEvent evt){
      final String propertyName=evt.getPropertyName();
      if (propertyName.equals(GraphFig.SHARD_CACHE_SIZE) || propertyName.equals(GraphFig.SHARD_CACHE_TIMEOUT) || propertyName.equals(GraphFig.SHARD_CACHE_REFRESH_WORKERS)) {
        updateCache();
      }
    }
  }
);
  updateCache();
}
