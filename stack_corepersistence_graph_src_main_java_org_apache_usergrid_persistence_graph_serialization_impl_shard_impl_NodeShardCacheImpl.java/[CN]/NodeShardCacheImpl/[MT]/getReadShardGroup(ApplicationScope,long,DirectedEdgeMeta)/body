{
  ValidationUtils.validateApplicationScope(scope);
  GraphValidation.validateDirectedEdgeMeta(directedEdgeMeta);
  final CacheKey key=new CacheKey(scope,directedEdgeMeta);
  CacheEntry entry;
  if (graphFig.getShardReadCacheEnabled()) {
    try {
      entry=this.graphs.get(key);
    }
 catch (    ExecutionException e) {
      throw new GraphRuntimeException("Unable to load shard key for graph",e);
    }
  }
 else {
    entry=new CacheEntry(nodeShardAllocation.getShards(key.scope,key.directedEdgeMeta));
  }
  Iterator<ShardEntryGroup> iterator=entry.getShards(maxTimestamp);
  if (iterator == null) {
    return Collections.<ShardEntryGroup>emptyList().iterator();
  }
  return iterator;
}
