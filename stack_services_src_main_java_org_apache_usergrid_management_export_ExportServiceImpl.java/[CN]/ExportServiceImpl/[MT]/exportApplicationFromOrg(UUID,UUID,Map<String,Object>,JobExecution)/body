{
  UUID exportId=(UUID)jobExecution.getJobData().getProperty(EXPORT_ID);
  EntityManager exportManager=emf.getEntityManager(MANAGEMENT_APPLICATION_ID);
  Export export=exportManager.get(exportId,Export.class);
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  ApplicationInfo application=managementService.getApplicationInfo(applicationId);
  String appFileName=prepareOutputFileName("application",application.getName(),null);
  JsonGenerator jg=getJsonGenerator(baos);
  EntityManager em=emf.getEntityManager(applicationId);
  jg.writeStartArray();
  Map<String,Object> metadata=em.getApplicationCollectionMetadata();
  long starting_time=System.currentTimeMillis();
  for (  String collectionName : metadata.keySet()) {
    if (collectionName.equals("exports")) {
      continue;
    }
    if ((config.get("collectionName") == null) || collectionName.equals(config.get("collectionName"))) {
      Query query=null;
      if (config.get("query") == null) {
        query=new Query();
      }
 else {
        try {
          query=Query.fromQL((String)config.get("query"));
        }
 catch (        Exception e) {
          export.setErrorMessage(e.getMessage());
        }
      }
      query.setLimit(MAX_ENTITY_FETCH);
      query.setResultsLevel(Results.Level.ALL_PROPERTIES);
      query.setCollection(collectionName);
      Results entities=em.searchCollection(em.getApplicationRef(),collectionName,query);
      PagingResultsIterator itr=new PagingResultsIterator(entities);
      for (      Object e : itr) {
        starting_time=checkTimeDelta(starting_time,jobExecution);
        Entity entity=(Entity)e;
        jg.writeStartObject();
        jg.writeFieldName("Metadata");
        jg.writeObject(entity);
        saveCollectionMembers(jg,em,(String)config.get("collectionName"),entity);
        jg.writeEndObject();
      }
    }
  }
  jg.writeEndArray();
  jg.close();
  baos.flush();
  baos.close();
  InputStream is=new ByteArrayInputStream(baos.toByteArray());
  try {
    s3Export.copyToS3(is,config,appFileName);
  }
 catch (  Exception e) {
    export.setState(Export.State.FAILED);
    return;
  }
}
