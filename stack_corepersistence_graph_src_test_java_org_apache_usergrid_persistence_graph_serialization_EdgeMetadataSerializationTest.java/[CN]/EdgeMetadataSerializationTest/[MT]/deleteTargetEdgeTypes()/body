{
  final long timestamp=1000l;
  final Edge edge1=createEdge("source","edge","target",timestamp);
  final Id sourceId=edge1.getSourceNode();
  final Edge edge2=createEdge(sourceId,"edge",createId("target2"),timestamp + 1);
  final Edge edge3=createEdge(sourceId,"edge2",createId("target3"),timestamp + 2);
  serialization.writeEdge(scope,edge1).execute();
  serialization.writeEdge(scope,edge2).execute();
  serialization.writeEdge(scope,edge3).execute();
  Iterator<String> edges=serialization.getEdgeTypesFromSource(scope,createSearchEdge(sourceId,null));
  assertEquals("edge",edges.next());
  assertEquals("edge2",edges.next());
  assertFalse(edges.hasNext());
  serialization.removeEdgeTypeFromSource(scope,edge1).execute();
  edges=serialization.getEdgeTypesFromSource(scope,createSearchEdge(sourceId,null));
  assertEquals("edge",edges.next());
  assertEquals("edge2",edges.next());
  assertFalse(edges.hasNext());
  serialization.removeEdgeTypeFromSource(scope,edge2).execute();
  edges=serialization.getEdgeTypesFromSource(scope,createSearchEdge(sourceId,null));
  assertEquals("edge2",edges.next());
  assertFalse(edges.hasNext());
  serialization.removeEdgeTypeFromSource(scope,edge3).execute();
  edges=serialization.getEdgeTypesFromSource(scope,createSearchEdge(sourceId,null));
  assertFalse(edges.hasNext());
}
