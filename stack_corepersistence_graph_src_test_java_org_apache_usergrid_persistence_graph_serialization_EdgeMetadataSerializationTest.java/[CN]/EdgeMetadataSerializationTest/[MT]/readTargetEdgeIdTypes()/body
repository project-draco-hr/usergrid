{
  final Edge edge1=createEdge("source","edge","target");
  final Id sourceId=edge1.getSourceNode();
  final Edge edge2=createEdge(sourceId,"edge",IdGenerator.createId("target"));
  final Edge edge3=createEdge(sourceId,"edge",IdGenerator.createId("target2"));
  final Edge edge4=createEdge(sourceId,"edge2",IdGenerator.createId("target3"));
  serialization.writeEdge(scope,edge1).execute();
  serialization.writeEdge(scope,edge2).execute();
  serialization.writeEdge(scope,edge3).execute();
  serialization.writeEdge(scope,edge4).execute();
  Iterator<String> types=serialization.getIdTypesFromSource(scope,createSearchIdType(sourceId,"edge",null));
  assertEquals("target",types.next());
  assertEquals("target2",types.next());
  assertFalse(types.hasNext());
  types=serialization.getIdTypesFromSource(scope,createSearchIdType(sourceId,"edge","target"));
  assertEquals("target2",types.next());
  assertFalse(types.hasNext());
  types=serialization.getIdTypesFromSource(scope,createSearchIdType(sourceId,"edge2",null));
  assertEquals("target3",types.next());
  assertFalse(types.hasNext());
}
