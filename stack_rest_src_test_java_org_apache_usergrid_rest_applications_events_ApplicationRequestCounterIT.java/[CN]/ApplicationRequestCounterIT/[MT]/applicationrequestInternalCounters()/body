{
  JsonNode node=mapper.readTree(resource().path("/test-organization/test-app").queryParam("access_token",access_token).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  assertNotNull(node.get("entities"));
  String uuid=node.get("application").asText();
  assertEquals(true,UUIDUtils.isUUID(uuid));
  refreshIndex("test-organization","test-app");
  UUID applicationId=UUID.fromString(uuid);
  EntityManagerFactory emf=setup.getEmf();
  EntityManager em=emf.getEntityManager(applicationId);
  int beforeTotalCall=getCounter(em,ServiceManager.APPLICATION_REQUESTS);
  int beforeCall=getCounter(em,ServiceManager.APPLICATION_REQUESTS_PER.concat("get"));
  node=mapper.readTree(resource().path("/test-organization/test-app/counters").queryParam("resolution","all").queryParam("counter","application.requests").queryParam("access_token",adminToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  assertNotNull(node.get("counters"));
  int afterTotalCall=getCounter(em,ServiceManager.APPLICATION_REQUESTS);
  int afterCall=getCounter(em,ServiceManager.APPLICATION_REQUESTS_PER.concat("get"));
  assertEquals(1,afterCall - beforeCall);
  assertEquals(1,afterTotalCall - beforeTotalCall);
}
