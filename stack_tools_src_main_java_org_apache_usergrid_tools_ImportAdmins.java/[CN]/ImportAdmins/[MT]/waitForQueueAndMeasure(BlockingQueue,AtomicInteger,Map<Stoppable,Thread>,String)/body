{
  double rateAverageSum=0;
  int iterations=0;
  while (emptyCounter.get() < threadMap.size()) {
    iterations+=1;
    int sizeLast=workQueue.size();
    long lastTime=System.currentTimeMillis();
    logger.info("Queue {} is not empty, remaining size={}, waiting...",identifier,sizeLast);
    Thread.sleep(10000);
    long timeNow=System.currentTimeMillis();
    int sizeNow=workQueue.size();
    int processed=sizeLast - sizeNow;
    long timeDelta=timeNow - lastTime;
    double rateLast=(double)processed / (timeDelta / 1000);
    rateAverageSum+=rateLast;
    long timeRemaining=(long)(sizeLast / (rateAverageSum / iterations));
    logger.info("++PROGRESS ({}): sizeLast={} nowSize={} processed={} rateLast={}/s rateAvg={}/s timeRemaining={}s",new Object[]{identifier,sizeLast,sizeNow,processed,rateLast,(rateAverageSum / iterations),timeRemaining});
  }
  for (  Stoppable worker : threadMap.keySet()) {
    worker.setDone(true);
  }
}
