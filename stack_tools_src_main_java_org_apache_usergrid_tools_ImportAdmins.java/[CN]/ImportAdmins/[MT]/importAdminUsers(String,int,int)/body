{
  int count=0;
  File adminUsersFile=new File(importDir,fileName);
  logger.info("----- Loading file: " + adminUsersFile.getAbsolutePath());
  JsonParser jp=getJsonParserForFile(adminUsersFile);
  int loopCounter=0;
  BlockingQueue<Map<String,Object>> workQueue=new LinkedBlockingQueue<Map<String,Object>>();
  BlockingQueue<Map<String,Object>> auditQueue=new LinkedBlockingQueue<Map<String,Object>>();
  startAdminWorkers(workQueue,auditQueue,writeThreadCount);
  startAdminAuditors(auditQueue,auditThreadCount);
  JsonToken token=jp.nextToken();
  validateStartArray(token);
  while (jp.nextValue() != JsonToken.END_ARRAY) {
    loopCounter+=1;
    @SuppressWarnings("unchecked") Map<String,Object> entityProps=jp.readValueAs(HashMap.class);
    if (loopCounter % 1000 == 0) {
      logger.debug("Publishing to queue... counter=" + loopCounter);
    }
    workQueue.add(entityProps);
  }
  waitForQueueAndMeasure(workQueue,writeEmptyCount,adminWriteThreads,"Admin Write");
  waitForQueueAndMeasure(auditQueue,auditEmptyCount,adminAuditThreads,"Admin Audit");
  logger.info("----- End: Imported {} admin users from file {}",count,adminUsersFile.getAbsolutePath());
  jp.close();
}
