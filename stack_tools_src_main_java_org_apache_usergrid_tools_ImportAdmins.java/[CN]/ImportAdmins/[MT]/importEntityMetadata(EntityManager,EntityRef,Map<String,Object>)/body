{
  List<Object> organizationsList=(List<Object>)metadata.get("organizations");
  if (organizationsList != null && !organizationsList.isEmpty()) {
    User user=em.get(entityRef,User.class);
    if (user == null) {
      logger.error("User with uuid={} not found, not adding to organizations");
    }
 else {
      final UserInfo userInfo=managementService.getAdminUserByEmail(user.getEmail());
      for (      Object orgObject : organizationsList) {
        Map<String,Object> orgMap=(Map<String,Object>)orgObject;
        UUID orgUuid=UUID.fromString((String)orgMap.get("uuid"));
        String orgName=(String)orgMap.get("name");
        OrganizationInfo orgInfo=managementService.getOrganizationByUuid(orgUuid);
        if (orgInfo == null) {
          try {
            managementService.createOrganization(orgUuid,orgName,userInfo,false);
            orgInfo=managementService.getOrganizationByUuid(orgUuid);
            logger.debug("Created new org {} for user {}",new Object[]{orgInfo.getName(),user.getEmail()});
          }
 catch (          DuplicateUniquePropertyExistsException dpee) {
            logger.debug("Org {} already exists",orgName);
          }
        }
 else {
          try {
            managementService.addAdminUserToOrganization(userInfo,orgInfo,false);
            logger.debug("Added user {} to org {}",new Object[]{user.getEmail(),orgName});
          }
 catch (          Exception e) {
            logger.error("Error Adding user {} to org {}",new Object[]{user.getEmail(),orgName});
          }
        }
      }
    }
  }
 else {
    logger.warn("User {} has no organizations",entityRef.getUuid());
  }
  Map<String,Object> dictionariesMap=(Map<String,Object>)metadata.get("dictionaries");
  if (dictionariesMap != null && !dictionariesMap.isEmpty()) {
    for (    String name : dictionariesMap.keySet()) {
      try {
        Map<String,Object> dictionary=(Map<String,Object>)dictionariesMap.get(name);
        em.addMapToDictionary(entityRef,name,dictionary);
        logger.debug("Creating dictionary for {} name {}",new Object[]{entityRef,name});
      }
 catch (      Exception e) {
        if (logger.isDebugEnabled()) {
          logger.error("Error importing dictionary name " + name + " for user "+ entityRef.getUuid(),e);
        }
 else {
          logger.error("Error importing dictionary name " + name + " for user "+ entityRef.getUuid());
        }
      }
    }
  }
 else {
    logger.warn("User {} has no dictionaries",entityRef.getUuid());
  }
}
