{
  checkPermissionsForCollection(context);
  if (context.getPayload().isBatch()) {
    List<Entity> entities=new ArrayList<Entity>();
    List<Map<String,Object>> batch=context.getPayload().getBatchProperties();
    if (logger.isTraceEnabled()) {
      logger.trace("Attempting to batch create {} entities in collection {}",batch.size(),context.getCollectionName());
    }
    final Map<String,Boolean> nameValues=new HashMap<>(batch.size());
    for (    Map<String,Object> p : batch) {
      String name=p.get("name").toString();
      if (name != null && nameValues.get(name) != null) {
        logger.warn("Batch contains more than 1 entity with the same name: {}",name);
      }
 else {
        nameValues.put(name,true);
      }
      if (logger.isTraceEnabled()) {
        logger.trace("Creating entity [{}] in collection [{}]",p,context.getCollectionName());
      }
      Entity item=null;
      try {
        item=em.createItemInCollection(context.getOwner(),context.getCollectionName(),getEntityType(),p);
      }
 catch (      Exception e) {
        logger.error("Entity [{}] unable to be created in collection [{}] due to [{} - {}]",p,context.getCollectionName(),e.getClass().getSimpleName(),e.getMessage());
        continue;
      }
      if (logger.isTraceEnabled()) {
        logger.trace("Successfully created entity [{}] in collection [{}]",p,context.getCollectionName());
      }
      item=importEntity(context,item);
      entities.add(item);
    }
    return new ServiceResults(this,context,Type.COLLECTION,Results.fromEntities(entities),null,null);
  }
  Entity item=em.createItemInCollection(context.getOwner(),context.getCollectionName(),getEntityType(),context.getProperties());
  item=importEntity(context,item);
  return new ServiceResults(this,context,Type.COLLECTION,Results.fromEntity(item),null,null);
}
