{
  setServiceManager(serviceRequest.getServices());
  ServiceContext context=serviceRequest.getAppContext();
  checkPermissionsForCollection(context);
  Subject currentUser=SubjectUtils.getSubject();
  Object currentUserPrincipal=currentUser.getPrincipal();
  Map collectionSchema=null;
  if (currentUserPrincipal instanceof AdminUserPrincipal) {
    AdminUserPrincipal adminUserPrincipal=(AdminUserPrincipal)currentUserPrincipal;
    collectionSchema=em.createCollectionSchema(context.getCollectionName(),adminUserPrincipal.getUser().getEmail(),context.getProperties());
  }
 else   if (currentUserPrincipal instanceof ApplicationPrincipal) {
    collectionSchema=em.createCollectionSchema(context.getCollectionName(),"app credentials",context.getProperties());
  }
 else   if (currentUserPrincipal instanceof PrincipalIdentifier) {
    collectionSchema=em.createCollectionSchema(context.getCollectionName(),"generic credentials",context.getProperties());
  }
  return new ServiceResults(this,context,Type.COLLECTION,Results.fromData(collectionSchema),null,null);
}
