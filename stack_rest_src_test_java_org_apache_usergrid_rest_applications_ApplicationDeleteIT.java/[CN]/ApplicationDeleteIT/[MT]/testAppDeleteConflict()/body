{
  String orgName=clientSetup.getOrganization().getName();
  String appToDeleteName=clientSetup.getAppName() + "_appToDelete";
  Token orgAdminToken=getAdminToken(clientSetup.getUsername(),clientSetup.getUsername());
  List<Entity> entities=new ArrayList<>();
  UUID appToDeleteId=createAppWithCollection(orgName,appToDeleteName,orgAdminToken,entities);
  clientSetup.getRestClient().management().orgs().org(orgName).apps().app(appToDeleteId.toString()).getTarget().queryParam("access_token",orgAdminToken.getAccessToken()).queryParam("app_delete_confirm","confirm_delete_of_application_and_data").request().delete();
  UUID newAppId=createAppWithCollection(orgName,appToDeleteName,orgAdminToken,entities);
  try {
    clientSetup.getRestClient().management().orgs().org(orgName).apps().app(newAppId.toString()).getTarget().queryParam("access_token",orgAdminToken.getAccessToken()).queryParam("app_delete_confirm","confirm_delete_of_application_and_data").request().delete();
    fail("Must fail to delete app with same name as deleted app");
  }
 catch (  ResponseProcessingException e) {
    Assert.assertEquals(409,e.getResponse().getStatus());
  }
}
