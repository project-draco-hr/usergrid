{
  String orgName=clientSetup.getOrganization().getName();
  String appToDeleteName=clientSetup.getAppName() + "_appToDelete";
  Token orgAdminToken=getAdminToken(clientSetup.getUsername(),clientSetup.getUsername());
  List<Entity> entities=new ArrayList<>();
  UUID appToDeleteId=createAppWithCollection(orgName,appToDeleteName,orgAdminToken,entities);
  clientSetup.getRestClient().management().orgs().org(orgName).apps().app(appToDeleteId.toString()).getTarget().queryParam("access_token",orgAdminToken.getAccessToken()).queryParam(CONFIRM_APPLICATION_IDENTIFIER,appToDeleteId).request().delete();
  UUID newAppId=null;
  int retries=0;
  while (retries++ < 20) {
    try {
      newAppId=createAppWithCollection(orgName,appToDeleteName,orgAdminToken,entities);
      break;
    }
 catch (    Exception e) {
      logger.error("Application not deleted yet. Waiting... ({})",retries);
      Thread.sleep(1000);
    }
  }
  Assert.assertNotNull(newAppId);
  final Response response=clientSetup.getRestClient().management().orgs().org(orgName).apps().app(newAppId.toString()).getTarget().queryParam("access_token",orgAdminToken.getAccessToken()).queryParam(CONFIRM_APPLICATION_IDENTIFIER,newAppId).request().delete();
  Assert.assertEquals(409,response.getStatus());
}
