{
  if (startDatabaseWithServer) {
    startCassandra();
  }
  httpServer=org.glassfish.grizzly.http.server.HttpServer.createSimpleServer(".",port);
  handler=new org.glassfish.grizzly.servlet.ServletHandler();
  handler.addContextParameter(com.sun.jersey.spi.spring.container.servlet.SpringServlet.CONTEXT_CONFIG_LOCATION,"classpath:/usergrid-standalone-context.xml");
  handler.addServletListener(org.springframework.web.context.ContextLoaderListener.class.getName());
  handler.addServletListener(org.springframework.web.context.request.RequestContextListener.class.getName());
  com.sun.jersey.api.json.JSONConfiguration.badgerFish();
  handler.addInitParameter(com.sun.jersey.api.core.PackagesResourceConfig.PROPERTY_PACKAGES,"org.usergrid");
  handler.addInitParameter(com.sun.jersey.api.json.JSONConfiguration.FEATURE_POJO_MAPPING,"true");
  handler.addInitParameter(com.sun.jersey.api.core.ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS,"org.usergrid.rest.filters.MeteringFilter,org.usergrid.rest.filters.JSONPCallbackFilter," + "org.usergrid.rest.security.shiro.filters.OAuth2AccessTokenSecurityFilter," + "org.usergrid.rest.security.shiro.filters.BasicAuthSecurityFilter,"+ "org.usergrid.rest.security.shiro.filters.ClientCredentialsSecurityFilter");
  handler.addInitParameter(com.sun.jersey.api.core.ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS,"org.usergrid.rest.security.CrossOriginRequestFilter,org.usergrid.rest.filters.MeteringFilter");
  handler.addInitParameter(com.sun.jersey.api.core.ResourceConfig.PROPERTY_RESOURCE_FILTER_FACTORIES,"org.usergrid.rest.security.SecuredResourceFilterFactory,com.sun.jersey.api.container.filter" + ".RolesAllowedResourceFilterFactory");
  handler.addInitParameter(com.sun.jersey.api.core.ResourceConfig.FEATURE_DISABLE_WADL,"true");
  handler.addInitParameter(com.sun.jersey.spi.container.servlet.ServletContainer.JSP_TEMPLATES_BASE_PATH,"/WEB-INF/jsp");
  handler.addInitParameter(com.sun.jersey.spi.container.servlet.ServletContainer.PROPERTY_WEB_PAGE_CONTENT_REGEX,"/(((images|css|js|jsp|WEB-INF/jsp)/.*)|(favicon\\.ico))");
  handler.setServletInstance(new com.sun.jersey.spi.spring.container.servlet.SpringServlet());
  handler.setProperty("load-on-startup",1);
  java.util.Map<String,String> initParameters=new java.util.HashMap<String,String>();
  initParameters.put("targetFilterLifecycle","true");
  handler.addFilter(new org.usergrid.rest.filters.ContentTypeFilter(),"contentTypeFilter",java.util.Collections.EMPTY_MAP);
  handler.addFilter(new org.springframework.web.filter.DelegatingFilterProxy(),"shiroFilter",initParameters);
  handler.addFilter(new org.usergrid.rest.SwaggerServlet(),"swagger",null);
  setupJspMappings();
  httpServer.getServerConfiguration().addHttpHandler(handler,"/*");
  ClasspathStaticHttpHandler static_handler=new ClasspathStaticHttpHandler("/html/css/");
  httpServer.getServerConfiguration().addHttpHandler(static_handler,"/css/*");
  httpServer.getServerConfiguration().setJmxEnabled(true);
  setThreadSize();
  try {
    httpServer.start();
  }
 catch (  java.io.IOException e) {
    e.printStackTrace();
  }
  if (daemon) {
    while (true) {
      try {
        Thread.sleep(Long.MAX_VALUE);
      }
 catch (      InterruptedException e) {
        logger.warn("Interrupted");
      }
    }
  }
}
