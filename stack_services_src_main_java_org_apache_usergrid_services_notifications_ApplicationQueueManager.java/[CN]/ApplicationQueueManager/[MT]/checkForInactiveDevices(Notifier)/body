{
  ProviderAdapter providerAdapter=providerAdapters.get(notifier.getProvider());
  if (providerAdapter != null) {
    LOG.debug("checking notifier {} for inactive devices",notifier);
    Map<String,Date> inactiveDeviceMap=providerAdapter.getInactiveDevices(notifier,em);
    if (inactiveDeviceMap != null && inactiveDeviceMap.size() > 0) {
      LOG.debug("processing {} inactive devices",inactiveDeviceMap.size());
      Map<String,Object> clearPushtokenMap=new HashMap<String,Object>(2);
      clearPushtokenMap.put(notifier.getName() + NOTIFIER_ID_POSTFIX,"");
      clearPushtokenMap.put(notifier.getUuid() + NOTIFIER_ID_POSTFIX,"");
      for (      Map.Entry<String,Date> entry : inactiveDeviceMap.entrySet()) {
        Query query=new Query();
        query.addEqualityFilter(notifier.getName() + NOTIFIER_ID_POSTFIX,entry.getKey());
        Results results=em.searchCollection(em.getApplication(),"devices",query);
        for (        Entity e : results.getEntities()) {
          em.updateProperties(e,clearPushtokenMap);
        }
        query=new Query();
        query.addEqualityFilter(notifier.getUuid() + NOTIFIER_ID_POSTFIX,entry.getKey());
        results=em.searchCollection(em.getApplication(),"devices",query);
        for (        Entity e : results.getEntities()) {
          em.updateProperties(e,clearPushtokenMap);
        }
      }
    }
    LOG.debug("finished checking notifier {} for inactive devices",notifier);
  }
}
