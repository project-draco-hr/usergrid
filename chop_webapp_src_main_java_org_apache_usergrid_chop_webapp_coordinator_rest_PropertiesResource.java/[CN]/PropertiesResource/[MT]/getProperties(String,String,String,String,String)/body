{
  CoordinatedStack stack=coordinator.findCoordinatedStack(commitId,artifactId,groupId,version,user);
  if (stack == null) {
    return Response.ok().entity("No stack could be found that matches given parameters").build();
  }
 else   if (stack.getSetupState() != SetupStackState.SetUp) {
    return Response.ok().entity("Stack's setup state is: " + stack.getSetupState()).build();
  }
  StringWriter writer=new StringWriter();
  Properties properties=new Properties();
  for (  ICoordinatedCluster cluster : stack.getClusters()) {
    String keyBase=cluster.getName() + ".cluster";
    StringBuilder privateAddresses=new StringBuilder();
    StringBuilder publicAddresses=new StringBuilder();
    StringBuilder privateHostnames=new StringBuilder();
    StringBuilder publicHostnames=new StringBuilder();
    for (    Instance instance : cluster.getInstances()) {
      privateAddresses.append(instance.getPrivateIpAddress()).append(DELIMITER);
      publicAddresses.append(instance.getPublicIpAddress()).append(DELIMITER);
      privateHostnames.append(instance.getPrivateDnsName()).append(DELIMITER);
      publicHostnames.append(instance.getPublicDnsName()).append(DELIMITER);
    }
    properties.setProperty(keyBase + ".private.addresses",privateAddresses.toString());
    properties.setProperty(keyBase + ".public.addresses",publicAddresses.toString());
    properties.setProperty(keyBase + ".private.hostnames",privateHostnames.toString());
    properties.setProperty(keyBase + ".public.hostnames",publicHostnames.toString());
  }
  properties.store(writer,"Generated by ChopUI");
  return Response.ok().entity(writer.toString()).build();
}
