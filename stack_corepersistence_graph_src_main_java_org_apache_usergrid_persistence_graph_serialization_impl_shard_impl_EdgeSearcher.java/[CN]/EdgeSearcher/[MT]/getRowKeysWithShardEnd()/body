{
  final List<SmartShard> rowKeysWithShardEnd=new ArrayList<>(shards.size());
  for (  Shard shard : shards) {
    final ScopedRowKey<R> rowKey=ScopedRowKey.fromKey(scope.getApplication(),generateRowKey(shard.getShardIndex()));
    final C shardEnd;
    if (shard.getShardEnd().isPresent()) {
      shardEnd=createColumn((T)shard.getShardEnd().get());
    }
 else {
      shardEnd=null;
    }
    rowKeysWithShardEnd.add(new SmartShard(rowKey,shardEnd));
  }
  return rowKeysWithShardEnd;
}
