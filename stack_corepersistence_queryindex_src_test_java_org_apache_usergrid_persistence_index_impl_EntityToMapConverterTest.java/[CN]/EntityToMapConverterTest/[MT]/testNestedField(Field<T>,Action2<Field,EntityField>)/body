{
  EntityObject leafEntity=new EntityObject();
  leafEntity.setField(storedField);
  final EntityObjectField nested2Field=new EntityObjectField("nested2",leafEntity);
  final EntityObject nested2=new EntityObject();
  nested2.setField(nested2Field);
  final EntityObjectField nested1Field=new EntityObjectField("nested1",nested2);
  Entity rootEntity=new Entity("test");
  rootEntity.setField(nested1Field);
  final UUID version=UUIDGenerator.newTimeUUID();
  EntityUtils.setVersion(rootEntity,version);
  final ApplicationScope scope=new ApplicationScopeImpl(createId("application"));
  final IndexEdge indexEdge=new IndexEdgeImpl(createId("source"),"testEdgeType",SearchEdge.NodeType.SOURCE,1000);
  final Map<String,Object> entityMap=EntityToMapConverter.convert(scope,indexEdge,rootEntity);
  final Set<EntityField> fieldSet=(Set<EntityField>)entityMap.get(IndexingUtils.ENTITY_FIELDS);
  final List<EntityField> fields=new ArrayList<>();
  fields.addAll(fieldSet);
  assertEquals(1,fields.size());
  for (int i=0; i < fields.size(); i++) {
    final EntityField field=fields.get(i);
    final String path="nested1.nested2." + storedField.getName();
    assertEquals(path,field.get(IndexingUtils.FIELD_NAME));
    assertFunction.call(storedField,field);
  }
}
