{
  final CassandraConfig cassandraConfig=new CassandraConfig(){
    @Override public ConsistencyLevel getReadCL(){
      return ConsistencyLevel.CL_LOCAL_ONE;
    }
    @Override public ConsistencyLevel getConsistentReadCL(){
      return ConsistencyLevel.CL_LOCAL_QUORUM;
    }
    @Override public ConsistencyLevel getWriteCL(){
      return ConsistencyLevel.CL_QUORUM;
    }
    @Override public com.datastax.driver.core.ConsistencyLevel getDataStaxReadCl(){
      return com.datastax.driver.core.ConsistencyLevel.LOCAL_ONE;
    }
    @Override public com.datastax.driver.core.ConsistencyLevel getDataStaxReadConsistentCl(){
      return com.datastax.driver.core.ConsistencyLevel.ALL;
    }
    @Override public com.datastax.driver.core.ConsistencyLevel getDataStaxWriteCl(){
      return com.datastax.driver.core.ConsistencyLevel.QUORUM;
    }
    @Override public int[] getShardSettings(){
      return new int[]{20};
    }
  }
;
  AstyanaxKeyspaceProvider astyanaxKeyspaceProvider=new AstyanaxKeyspaceProvider(cassandraCluster);
  keyspace=astyanaxKeyspaceProvider.get();
  TestUtils.createKeyspace(keyspace);
  TestUtils.createColumnFamiliy(keyspace,COLUMN_FAMILY,new HashMap<String,Object>());
}
