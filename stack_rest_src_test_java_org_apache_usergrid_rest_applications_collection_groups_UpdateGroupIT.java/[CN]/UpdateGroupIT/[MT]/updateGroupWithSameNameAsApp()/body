{
  String groupId=null;
  String groupPath=context.getAppName();
  try {
    Map<String,Object> groupMap=new HashMap<String,Object>();
    groupMap.put("title","Old Title");
    groupMap.put("path",groupPath);
    String path=context.getOrgName() + "/" + context.getAppName()+ "/groups";
    JsonNode groupJson=mapper.readTree(webResourceBuilder(path).post(String.class,groupMap));
    groupId=groupJson.get("entities").get(0).get("uuid").textValue();
  }
 catch (  UniformInterfaceException e) {
    fail("Error creating group: " + IOUtils.toString(e.getResponse().getEntityInputStream()));
  }
  assertTitle(groupId,"Old Title");
  refreshIndex(context.getOrgName(),context.getAppName());
  try {
    Map<String,Object> group=new HashMap<String,Object>();
    group.put("title","New Title");
    String path=context.getOrgName() + "/" + context.getAppName()+ "/groups/"+ groupPath;
    webResourceBuilder(path).put(String.class,group);
  }
 catch (  UniformInterfaceException e) {
    fail("Error updating group: " + IOUtils.toString(e.getResponse().getEntityInputStream()));
  }
  assertTitle(groupId,"New Title");
  refreshIndex(context.getOrgName(),context.getAppName());
  try {
    Map<String,Object> group=new HashMap<String,Object>();
    group.put("title","Even Newer Title");
    String path=context.getOrgName() + "/" + context.getAppName()+ "/groups/"+ groupId;
    webResourceBuilder(path).put(String.class,group);
  }
 catch (  UniformInterfaceException e) {
    fail("Error updating group: " + IOUtils.toString(e.getResponse().getEntityInputStream()));
  }
  assertTitle(groupId,"Even Newer Title");
}
