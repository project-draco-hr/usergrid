{
  final EdgeSeriesSerialization edgeSeriesSerialization=mock(EdgeSeriesSerialization.class);
  final EdgeSeriesCounterSerialization edgeSeriesCounterSerialization=mock(EdgeSeriesCounterSerialization.class);
  final TimeService timeService=mock(TimeService.class);
  final Keyspace keyspace=mock(Keyspace.class);
  final MutationBatch batch=mock(MutationBatch.class);
  when(keyspace.prepareMutationBatch()).thenReturn(batch);
  NodeShardAllocation approximation=new NodeShardAllocationImpl(edgeSeriesSerialization,edgeSeriesCounterSerialization,timeService,graphFig,keyspace);
  final Id nodeId=createId("test");
  final String type="type";
  final String subType="subType";
  final long timeservicetime=System.currentTimeMillis();
  when(timeService.getCurrentTime()).thenReturn(timeservicetime);
  when(edgeSeriesSerialization.getEdgeMetaData(same(scope),same(nodeId),any(Long.class),eq(1),same(type),same(subType))).thenReturn(Arrays.asList(0l).iterator());
  final long count=graphFig.getShardSize() - 1;
  when(edgeSeriesCounterSerialization.getCount(same(scope),same(nodeId),eq(0l),same(type),same(subType))).thenReturn(count);
  final boolean result=approximation.auditMaxShard(scope,nodeId,type,subType);
  assertFalse("Shard allocated",result);
}
