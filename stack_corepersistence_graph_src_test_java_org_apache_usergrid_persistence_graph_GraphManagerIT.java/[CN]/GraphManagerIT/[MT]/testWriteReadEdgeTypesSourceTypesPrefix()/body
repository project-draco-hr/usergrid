{
  final GraphManager gm=getHelper(emf.createEdgeManager(scope));
  Id sourceId=new SimpleId("source");
  Id targetId=new SimpleId("target");
  Edge testTargetEdge=createEdge(sourceId,"test1edge1",targetId,System.currentTimeMillis());
  gm.writeEdge(testTargetEdge).toBlockingObservable().singleOrDefault(null);
  Edge testTarget2Edge=createEdge(sourceId,"test1edge2",targetId,System.currentTimeMillis());
  gm.writeEdge(testTarget2Edge).toBlockingObservable().singleOrDefault(null);
  Edge test2TargetEdge=createEdge(sourceId,"test2edge1",targetId,System.currentTimeMillis());
  gm.writeEdge(test2TargetEdge).toBlockingObservable().singleOrDefault(null);
  Observable<String> edges=gm.getEdgeTypesFromSource(new SimpleSearchEdgeType(testTargetEdge.getSourceNode(),"test1",null));
  Iterator<String> results=edges.toBlockingObservable().getIterator();
  assertEquals("Edges correct","test1edge1",results.next());
  assertEquals("Edges correct","test1edge2",results.next());
  assertFalse("No more edges",results.hasNext());
  edges=gm.getEdgeTypesFromSource(new SimpleSearchEdgeType(testTargetEdge.getSourceNode(),"test2",null));
  results=edges.toBlockingObservable().getIterator();
  assertEquals("Edges correct","test2edge1",results.next());
  assertFalse("No more edges",results.hasNext());
}
