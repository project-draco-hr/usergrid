{
  GraphManager gm=emf.createEdgeManager(scope);
  final Id targetId=IdGenerator.createId("target");
  Edge edge1=createEdge(IdGenerator.createId("source"),"test",targetId);
  gm.writeEdge(edge1).toBlocking().last();
  Edge edge2=createEdge(IdGenerator.createId("source"),"test",targetId);
  gm.writeEdge(edge2).toBlocking().last();
  Edge edge3=createEdge(IdGenerator.createId("source"),"test",targetId);
  gm.writeEdge(edge3).toBlocking().last();
  SearchByEdgeType search=createSearchByEdge(edge1.getTargetNode(),edge1.getType(),edge3.getTimestamp(),null);
  Observable<MarkedEdge> edges=gm.loadEdgesToTarget(search);
  Iterator<MarkedEdge> returned=edges.toBlocking().getIterator();
  assertEquals("Correct edge returned",edge3,returned.next());
  assertEquals("Correct edge returned",edge2,returned.next());
  assertEquals("Correct edge returned",edge1,returned.next());
  assertFalse("No more edges",returned.hasNext());
  search=createSearchByEdge(edge1.getTargetNode(),edge1.getType(),edge3.getTimestamp(),edge2);
  edges=gm.loadEdgesToTarget(search);
  returned=edges.toBlocking().getIterator();
  assertEquals("Paged correctly",edge1,returned.next());
  assertFalse("End of stream",returned.hasNext());
}
