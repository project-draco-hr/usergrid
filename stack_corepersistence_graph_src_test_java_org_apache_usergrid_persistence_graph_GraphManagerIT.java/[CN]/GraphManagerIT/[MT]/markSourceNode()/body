{
  final GraphManager gm=emf.createEdgeManager(scope);
  Id sourceId=new SimpleId("source");
  Id targetId1=new SimpleId("target");
  Id targetId2=new SimpleId("target2");
  Edge edge1=createEdge(sourceId,"test",targetId1,System.currentTimeMillis());
  gm.writeEdge(edge1).toBlocking().singleOrDefault(null);
  Edge edge2=createEdge(sourceId,"test",targetId2,System.currentTimeMillis());
  gm.writeEdge(edge2).toBlocking().singleOrDefault(null);
  final long maxVersion=System.currentTimeMillis();
  Iterator<MarkedEdge> results=gm.loadEdgesFromSource(createSearchByEdge(sourceId,edge1.getType(),maxVersion,null)).toBlocking().getIterator();
  assertEquals("Edge found",edge2,results.next());
  assertEquals("Edge found",edge1,results.next());
  assertFalse("No more edges",results.hasNext());
  results=gm.loadEdgesFromSourceByType(createSearchByEdgeAndId(sourceId,edge1.getType(),maxVersion,targetId1.getType(),null)).toBlocking().getIterator();
  assertEquals("Edges correct",edge1,results.next());
  assertFalse("No more edges",results.hasNext());
  results=gm.loadEdgesFromSourceByType(createSearchByEdgeAndId(sourceId,edge2.getType(),maxVersion,targetId2.getType(),null)).toBlocking().getIterator();
  assertEquals("Edges correct",edge2,results.next());
  assertFalse("No more edges",results.hasNext());
  gm.markNode(sourceId,edge2.getTimestamp()).toBlocking().last();
  results=gm.loadEdgesFromSource(createSearchByEdge(sourceId,edge1.getType(),maxVersion,null)).toBlocking().getIterator();
  assertFalse("No more edges",results.hasNext());
  results=gm.loadEdgesFromSourceByType(createSearchByEdgeAndId(sourceId,edge1.getType(),maxVersion,targetId1.getType(),null)).toBlocking().getIterator();
  assertFalse("No more edges",results.hasNext());
  results=gm.loadEdgesFromSourceByType(createSearchByEdgeAndId(sourceId,edge2.getType(),maxVersion,targetId2.getType(),null)).toBlocking().getIterator();
  assertFalse("No more edges",results.hasNext());
  results=gm.loadEdgesFromSource(createSearchByEdgeUnfiltered(sourceId,edge1.getType(),maxVersion,null)).toBlocking().getIterator();
  assertEquals("Edge found",edge2,results.next());
  assertEquals("Edge found",edge1,results.next());
  assertFalse("No more edges",results.hasNext());
  results=gm.loadEdgesFromSourceByType(createSearchByEdgeAndIdUnfiltered(sourceId,edge1.getType(),maxVersion,targetId1.getType(),null)).toBlocking().getIterator();
  assertEquals("Edges correct",edge1,results.next());
  assertFalse("No more edges",results.hasNext());
  results=gm.loadEdgesFromSourceByType(createSearchByEdgeAndIdUnfiltered(sourceId,edge2.getType(),maxVersion,targetId2.getType(),null)).toBlocking().getIterator();
  assertEquals("Edges correct",edge2,results.next());
  assertFalse("No more edges",results.hasNext());
}
