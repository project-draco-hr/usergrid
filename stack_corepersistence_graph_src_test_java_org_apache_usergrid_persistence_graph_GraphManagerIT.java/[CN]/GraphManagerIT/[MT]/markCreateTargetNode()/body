{
  final GraphManager gm=emf.createEdgeManager(scope);
  Id sourceId1=new SimpleId("source");
  Id targetId=new SimpleId("target");
  Edge edge1=createEdge(sourceId1,"test",targetId,System.currentTimeMillis());
  gm.writeEdge(edge1).toBlocking().singleOrDefault(null);
  final long maxVersion=System.currentTimeMillis();
  Iterator<Edge> results=gm.loadEdgesToTarget(createSearchByEdge(targetId,edge1.getType(),maxVersion,null)).toBlocking().getIterator();
  assertEquals("Edge found",edge1,results.next());
  assertFalse("No more edges",results.hasNext());
  results=gm.loadEdgesToTargetByType(createSearchByEdgeAndId(targetId,edge1.getType(),maxVersion,sourceId1.getType(),null)).toBlocking().getIterator();
  assertEquals("Edges correct",edge1,results.next());
  assertFalse("No more edges",results.hasNext());
  gm.markNode(targetId,edge1.getTimestamp()).toBlocking().last();
  results=gm.loadEdgesToTarget(createSearchByEdge(targetId,edge1.getType(),maxVersion,null)).toBlocking().getIterator();
  assertFalse("No more edges",results.hasNext());
  results=gm.loadEdgesToTargetByType(createSearchByEdgeAndId(targetId,edge1.getType(),maxVersion,sourceId1.getType(),null)).toBlocking().getIterator();
  assertFalse("No more edges",results.hasNext());
  Edge edge2=createEdge(sourceId1,"test",targetId,edge1.getTimestamp() + 1);
  gm.writeEdge(edge2).toBlocking().singleOrDefault(null);
  results=gm.loadEdgesToTarget(createSearchByEdge(targetId,edge2.getType(),edge2.getTimestamp(),null)).toBlocking().getIterator();
  assertEquals("Edge found",edge2,results.next());
  assertFalse("No more edges",results.hasNext());
}
