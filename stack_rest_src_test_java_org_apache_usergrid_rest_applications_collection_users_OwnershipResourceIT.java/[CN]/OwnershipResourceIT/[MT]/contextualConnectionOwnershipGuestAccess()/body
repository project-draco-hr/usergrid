{
  this.app().collection("roles").entity("guest").collection("permissions").post(new Entity().chainPut("permission","get,put,post,delete:/**"));
  Entity city=this.app().collection("cities").post(new Entity().chainPut("name","tempe"));
  refreshIndex();
  String cityId=city.get("uuid").toString();
  Entity data=this.app().collection("cities").entity("tempe").connection("likes").collection("restaurants").post(new Entity().chainPut("name","4peaks"));
  String peaksId=data.get("uuid").toString();
  data=this.app().collection("cities").entity("tempe").connection("likes").collection("restaurants").post(new Entity().chainPut("name","arrogantbutcher"));
  String arrogantButcherId=data.get("uuid").toString();
  this.app().token().post(new Token(user1.getUsername(),"password"));
  CollectionEndpoint likeRestaurants=this.app().collection("cities").entity("tempe").connection("likes");
  refreshIndex();
  data=likeRestaurants.entity(peaksId).get();
  assertNotNull(data);
  assertEquals("4peaks",data.get("name").toString());
  data=likeRestaurants.entity(arrogantButcherId).get();
  assertEquals("arrogantbutcher",data.get("name").toString());
  data=likeRestaurants.collection("restaurants").entity(peaksId).get();
  assertNotNull(data);
  assertEquals("4peaks",data.get("name").toString());
  data=likeRestaurants.collection("restaurants").entity(arrogantButcherId).get();
  assertEquals("arrogantbutcher",data.get("name").toString());
  ApiResponse deleteResponse=likeRestaurants.collection("restaurants").entity(peaksId).delete();
  assertNotNull(deleteResponse);
  assertEquals("4peaks",deleteResponse.getEntities().get(0).get("name").toString());
  deleteResponse=likeRestaurants.collection("restaurants").entity(arrogantButcherId).delete();
  assertNotNull(deleteResponse);
  assertEquals("arrogantbutcher",deleteResponse.getEntities().get(0).get("name").toString());
}
