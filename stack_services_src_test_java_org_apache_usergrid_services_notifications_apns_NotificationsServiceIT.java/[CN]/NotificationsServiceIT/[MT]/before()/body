{
  super.before();
  app.clear();
  app.put("name",notifierName);
  app.put("provider",PROVIDER);
  app.put("environment",USE_REAL_CONNECTIONS ? "development" : "mock");
  InputStream fis=getClass().getClassLoader().getResourceAsStream("pushtest_dev_recent.p12");
  byte[] certBytes=IOUtils.toByteArray(fis);
  app.put("p12Certificate",certBytes);
  fis.close();
  Entity e=app.testRequest(ServiceAction.POST,1,"notifiers").getEntity();
  notifier=app.getEm().get(e.getUuid(),Notifier.class);
  final String notifierKey=notifier.getName() + NOTIFIER_ID_POSTFIX;
  app.clear();
  app.put(notifierKey,PUSH_TOKEN);
  app.put("name","device1");
  e=app.testRequest(ServiceAction.POST,1,"devices").getEntity();
  app.testRequest(ServiceAction.GET,1,"devices",e.getUuid());
  device1=app.getEm().get(e.getUuid(),Device.class);
  assertEquals(device1.getProperty(notifierKey),PUSH_TOKEN);
  app.clear();
  app.put(notifierKey,PUSH_TOKEN);
  app.put("name","device2");
  e=app.testRequest(ServiceAction.POST,1,"devices").getEntity();
  device2=app.getEm().get(e.getUuid(),Device.class);
  Map<String,Object> props=app.getEm().getProperties(e);
  assertEquals(device2.getProperty(notifierKey),PUSH_TOKEN);
  app.getEm().refreshIndex();
  user1=new User();
  user1.setUsername("user1");
  user1.setEmail("user1@usergrid.org");
  user1=app.getEm().create(user1);
  user2=new User();
  user2.setUsername("user2");
  user2.setEmail("user2@usergrid.org");
  user2=app.getEm().create(user2);
  ns=getNotificationService();
  TestQueueManager qm=new TestQueueManager();
  ns.TEST_QUEUE_MANAGER=qm;
  app.getEm().refreshIndex();
  listener=new QueueListener(ns.getServiceManagerFactory(),ns.getEntityManagerFactory(),ns.getMetricsFactory(),new Properties());
  listener.TEST_QUEUE_MANAGER=qm;
  listener.DEFAULT_SLEEP=200;
  listener.start();
}
