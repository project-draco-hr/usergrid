{
  String notifier2Name="apNs2";
  app.clear();
  app.put("name",notifier2Name);
  app.put("provider",PROVIDER);
  app.put("environment","development");
  InputStream fis=getClass().getClassLoader().getResourceAsStream("pushtest_dev_recent.p12");
  byte[] certBytes=IOUtils.toByteArray(fis);
  app.put("p12Certificate",certBytes);
  fis.close();
  Entity e=app.testRequest(ServiceAction.POST,1,"notifiers").getEntity();
  setup.getEntityIndex().refresh(app.getId());
  app.testRequest(ServiceAction.GET,1,"notifiers","apNs2");
  Notifier notifier2=app.getEntityManager().get(e.getUuid(),Notifier.class);
  assertEquals(notifier2.getName(),"apNs2");
  assertEquals(notifier2.getProvider(),PROVIDER);
  assertEquals(notifier2.getEnvironment(),"development");
  String key=notifierName + NOTIFIER_ID_POSTFIX;
  String key2=notifier2Name + NOTIFIER_ID_POSTFIX;
  device2.setProperty(key,null);
  device2.setProperty(key2,PUSH_TOKEN);
  app.getEntityManager().update(device2);
  setup.getEntityIndex().refresh(app.getId());
  app.clear();
  String payload=getPayload();
  Map<String,String> payloads=new HashMap<String,String>(1);
  payloads.put(notifierName,payload);
  payloads.put(notifier2Name,payload);
  app.put("payloads",payloads);
  app.put("queued",System.currentTimeMillis());
  app.put("debug",true);
  e=app.testRequest(ServiceAction.POST,1,"devices","notifications").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifications",e.getUuid());
  setup.getEntityIndex().refresh(app.getId());
  Notification notification=app.getEntityManager().get(e.getUuid(),Notification.class);
  assertEquals(notification.getPayloads().get(notifierName),payload);
  notification=notificationWaitForComplete(notification);
  setup.getEntityIndex().refresh(app.getId());
  checkReceipts(notification,2);
}
