{
  app.clear();
  app.put("name","prod_apns");
  app.put("provider",PROVIDER);
  app.put("environment","development");
  InputStream fis=getClass().getClassLoader().getResourceAsStream("empty.p12");
  byte[] certBytes=IOUtils.toByteArray(fis);
  app.put("p12Certificate",certBytes);
  fis.close();
  Entity e=app.testRequest(ServiceAction.POST,1,"notifiers").getEntity();
  notifier=app.getEntityManager().get(e.getUuid(),Notifier.class);
  if (!USE_REAL_CONNECTIONS) {
  }
  app.clear();
  String payload=getPayload();
  Map<String,String> payloads=new HashMap<String,String>(1);
  payloads.put(notifier.getUuid().toString(),payload);
  app.put("payloads",payloads);
  app.put("queued",System.currentTimeMillis());
  app.put("debug",true);
  e=app.testRequest(ServiceAction.POST,1,"devices",device1.getUuid(),"notifications").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifications",e.getUuid());
  Notification notification=app.getEntityManager().get(e.getUuid(),Notification.class);
  assertEquals(notification.getPayloads().get(notifier.getUuid().toString()),payload);
  try {
    notificationWaitForComplete(notification);
    fail("testConnection() should have failed");
  }
 catch (  Exception ex) {
  }
  Query query=Query.fromEquals("state",Notification.State.FAILED.toString());
  Results results=app.getEntityManager().searchCollection(app.getEntityManager().getApplicationRef(),"notifications",query);
  Entity entity=results.getEntitiesMap().get(notification.getUuid());
  assertNotNull(entity);
}
