{
  Object nameValue="apNs2";
  Object environValue="development";
  app.clear();
  app.put("name",nameValue);
  app.put("provider",PROVIDER);
  app.put("environment",environValue);
  InputStream fis=getClass().getClassLoader().getResourceAsStream("pushtest_dev_recent.p12");
  byte[] certBytes=IOUtils.toByteArray(fis);
  app.put("p12Certificate",certBytes);
  fis.close();
  Entity e=app.testRequest(ServiceAction.POST,1,"notifiers").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifiers",nameValue);
  app.getEm().refreshIndex();
  Notifier notifier2=app.getEm().get(e.getUuid(),Notifier.class);
  assertEquals(notifier2.getName(),nameValue);
  assertEquals(notifier2.getProvider(),PROVIDER);
  assertEquals(notifier2.getEnvironment(),environValue);
  String key2=notifier2.getName() + NOTIFIER_ID_POSTFIX;
  device1.setProperty(key2,PUSH_TOKEN);
  app.getEm().update(device1);
  app.getEm().refreshIndex();
  app.clear();
  String payload=getPayload();
  Map<String,String> payloads=new HashMap<String,String>(1);
  payloads.put(notifier.getUuid().toString(),payload);
  payloads.put(notifier2.getUuid().toString(),payload);
  app.put("payloads",payloads);
  app.put("queued",System.currentTimeMillis());
  e=app.testRequest(ServiceAction.POST,1,"notifications").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifications",e.getUuid());
  app.getEm().refreshIndex();
  Notification notification=app.getEm().get(e.getUuid(),Notification.class);
  assertEquals(notification.getPayloads().get(notifier.getUuid().toString()),payload);
  ns.addDevice(notification,device1);
  app.getEm().refreshIndex();
  notification=scheduleNotificationAndWait(notification);
  app.getEm().refreshIndex();
  checkReceipts(notification,2);
}
