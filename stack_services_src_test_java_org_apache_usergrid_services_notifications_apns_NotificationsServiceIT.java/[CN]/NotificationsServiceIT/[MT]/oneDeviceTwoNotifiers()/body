{
  Object notifierName1="apNs2";
  Object environment1="development";
  app.clear();
  app.put("name",notifierName1);
  app.put("provider",PROVIDER);
  app.put("environment",environment1);
  InputStream fis=getClass().getClassLoader().getResourceAsStream("pushtest_dev_recent.p12");
  byte[] certBytes=IOUtils.toByteArray(fis);
  app.put("p12Certificate",certBytes);
  fis.close();
  Entity e=app.testRequest(ServiceAction.POST,1,"notifiers").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifiers",notifierName1);
  Notifier notifier2=app.getEntityManager().get(e.getUuid(),Notifier.class);
  assertEquals(notifier2.getName(),notifierName1);
  assertEquals(notifier2.getProvider(),PROVIDER);
  assertEquals(notifier2.getEnvironment(),environment1);
  String key2=notifier2.getName() + NOTIFIER_ID_POSTFIX;
  device1.setProperty(key2,PUSH_TOKEN);
  app.getEntityManager().update(device1);
  setup.getEntityIndex().refresh(app.getId());
  app.clear();
  String payload=getPayload();
  Map<String,String> payloads=new HashMap<String,String>(1);
  payloads.put(notifier.getUuid().toString(),payload);
  app.put("payloads",payloads);
  app.put("debug",true);
  Entity notificationEntity=app.testRequest(ServiceAction.POST,1,"devices",device1.getUuid(),"notifications").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifications",notificationEntity.getUuid());
  Notification notification=app.getEntityManager().get(notificationEntity.getUuid(),Notification.class);
  assertEquals(notification.getPayloads().get(notifier.getUuid().toString()),payload);
  notification=notificationWaitForComplete(notification);
  checkReceipts(notification,1);
}
