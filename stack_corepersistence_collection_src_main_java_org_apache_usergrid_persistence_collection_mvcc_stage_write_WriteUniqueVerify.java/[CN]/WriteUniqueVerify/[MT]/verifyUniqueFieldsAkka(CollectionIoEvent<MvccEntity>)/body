{
  MvccValidationUtils.verifyMvccEntityWithEntity(ioevent.getEvent());
  final MvccEntity mvccEntity=ioevent.getEvent();
  final Entity entity=mvccEntity.getEntity().get();
  final ApplicationScope applicationScope=ioevent.getEntityCollection();
  String region=ioevent.getRegion();
  if (region == null) {
    region=uniqueValuesFig.getAuthoritativeRegion();
  }
  if (region == null) {
    region=actorSystemFig.getRegionLocal();
  }
  try {
    akkaUvService.reserveUniqueValues(applicationScope,entity,mvccEntity.getVersion(),region);
  }
 catch (  UniqueValueException e) {
    Map<String,Field> violations=new HashMap<>();
    violations.put(e.getField().getName(),e.getField());
    throw new WriteUniqueVerifyException(mvccEntity,applicationScope,violations);
  }
}
