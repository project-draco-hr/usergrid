{
  try {
    int _type=FLOAT;
    int _channel=DEFAULT_TOKEN_CHANNEL;
{
      int alt4=2;
switch (input.LA(1)) {
case '-':
{
          alt4=1;
        }
      break;
  }
switch (alt4) {
case 1:
{
      match('-');
    }
  break;
}
int alt11=3;
alt11=dfa11.predict(input);
switch (alt11) {
case 1:
{
  int cnt5=0;
  loop5:   do {
    int alt5=2;
switch (input.LA(1)) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
        alt5=1;
      }
    break;
}
switch (alt5) {
case 1:
{
    if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
      input.consume();
    }
 else {
      MismatchedSetException mse=new MismatchedSetException(null,input);
      recover(mse);
      throw mse;
    }
  }
break;
default :
if (cnt5 >= 1) break loop5;
EarlyExitException eee=new EarlyExitException(5,input);
throw eee;
}
cnt5++;
}
 while (true);
match('.');
loop6: do {
int alt6=2;
switch (input.LA(1)) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
alt6=1;
}
break;
}
switch (alt6) {
case 1:
{
if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
input.consume();
}
 else {
MismatchedSetException mse=new MismatchedSetException(null,input);
recover(mse);
throw mse;
}
}
break;
default :
break loop6;
}
}
 while (true);
int alt7=2;
switch (input.LA(1)) {
case 'E':
case 'e':
{
alt7=1;
}
break;
}
switch (alt7) {
case 1:
{
mEXPONENT();
}
break;
}
}
break;
case 2:
{
match('.');
int cnt8=0;
loop8: do {
int alt8=2;
switch (input.LA(1)) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
alt8=1;
}
break;
}
switch (alt8) {
case 1:
{
if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
input.consume();
}
 else {
MismatchedSetException mse=new MismatchedSetException(null,input);
recover(mse);
throw mse;
}
}
break;
default :
if (cnt8 >= 1) break loop8;
EarlyExitException eee=new EarlyExitException(8,input);
throw eee;
}
cnt8++;
}
 while (true);
int alt9=2;
switch (input.LA(1)) {
case 'E':
case 'e':
{
alt9=1;
}
break;
}
switch (alt9) {
case 1:
{
mEXPONENT();
}
break;
}
}
break;
case 3:
{
int cnt10=0;
loop10: do {
int alt10=2;
switch (input.LA(1)) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
alt10=1;
}
break;
}
switch (alt10) {
case 1:
{
if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
input.consume();
}
 else {
MismatchedSetException mse=new MismatchedSetException(null,input);
recover(mse);
throw mse;
}
}
break;
default :
if (cnt10 >= 1) break loop10;
EarlyExitException eee=new EarlyExitException(10,input);
throw eee;
}
cnt10++;
}
 while (true);
mEXPONENT();
}
break;
}
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
