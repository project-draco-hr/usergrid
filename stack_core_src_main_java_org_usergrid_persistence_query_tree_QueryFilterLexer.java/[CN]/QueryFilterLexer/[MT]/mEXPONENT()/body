{
  try {
{
      if (input.LA(1) == 'E' || input.LA(1) == 'e') {
        input.consume();
      }
 else {
        MismatchedSetException mse=new MismatchedSetException(null,input);
        recover(mse);
        throw mse;
      }
      int alt19=2;
switch (input.LA(1)) {
case '+':
case '-':
{
          alt19=1;
        }
      break;
  }
switch (alt19) {
case 1:
{
      if (input.LA(1) == '+' || input.LA(1) == '-') {
        input.consume();
      }
 else {
        MismatchedSetException mse=new MismatchedSetException(null,input);
        recover(mse);
        throw mse;
      }
    }
  break;
}
int cnt20=0;
loop20: do {
int alt20=2;
switch (input.LA(1)) {
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
    alt20=1;
  }
break;
}
switch (alt20) {
case 1:
{
if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
  input.consume();
}
 else {
  MismatchedSetException mse=new MismatchedSetException(null,input);
  recover(mse);
  throw mse;
}
}
break;
default :
if (cnt20 >= 1) break loop20;
EarlyExitException eee=new EarlyExitException(20,input);
throw eee;
}
cnt20++;
}
 while (true);
}
}
  finally {
}
}
