{
  try {
    int _type=WS;
    int _channel=DEFAULT_TOKEN_CHANNEL;
{
      int cnt23=0;
      loop23:       do {
        int alt23=2;
switch (input.LA(1)) {
case '\t':
case '\n':
case '\f':
case '\r':
case ' ':
{
            alt23=1;
          }
        break;
    }
switch (alt23) {
case 1:
{
        if ((input.LA(1) >= '\t' && input.LA(1) <= '\n') || (input.LA(1) >= '\f' && input.LA(1) <= '\r') || input.LA(1) == ' ') {
          input.consume();
        }
 else {
          MismatchedSetException mse=new MismatchedSetException(null,input);
          recover(mse);
          throw mse;
        }
      }
    break;
default :
  if (cnt23 >= 1)   break loop23;
EarlyExitException eee=new EarlyExitException(23,input);
throw eee;
}
cnt23++;
}
 while (true);
_channel=HIDDEN;
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
