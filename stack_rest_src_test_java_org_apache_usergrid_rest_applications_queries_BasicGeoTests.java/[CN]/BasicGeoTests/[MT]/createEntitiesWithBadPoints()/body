{
  String collectionType="stores";
  Entity node=null;
  Double lat=37.776753;
  Double lon=-122.407846;
  Map<String,Double> latitudeOnly=hashMap("latitude",lat);
  Map<String,Object> latitudeOnlyEntityData=new HashMap<String,Object>();
  latitudeOnlyEntityData.put("location",latitudeOnly);
  try {
    node=this.app().collection(collectionType).post(latitudeOnlyEntityData).getEntity();
    fail("System allowed location with only one point, latitude, which it should not");
  }
 catch (  ResponseProcessingException e) {
    JsonNode nodeError=mapper.readTree(e.getResponse().readEntity(String.class));
    assertEquals("illegal_argument",nodeError.get("error").textValue());
  }
  Map<String,String> notDoubleLatLon=hashMap("latitude","fred");
  notDoubleLatLon.put("longitude","barney");
  Map<String,Object> notDoubleLatLonEntityData=new HashMap<String,Object>();
  notDoubleLatLonEntityData.put("location",notDoubleLatLon);
  try {
    node=this.app().collection(collectionType).post(notDoubleLatLonEntityData).getEntity();
    fail("System allowed misspelled location values that are not doubles for latitude and longitude, which it should not");
  }
 catch (  ResponseProcessingException e) {
    JsonNode nodeError=mapper.readTree(e.getResponse().readEntity(String.class));
    assertEquals("illegal_argument",nodeError.get("error").textValue());
  }
}
