{
  final MvccEntity mvccEntity=ioEvent.getEvent();
  MvccValidationUtils.verifyMvccEntityWithEntity(mvccEntity);
  final Id entityId=mvccEntity.getId();
  final UUID version=mvccEntity.getVersion();
  final ApplicationScope applicationScope=ioEvent.getEntityCollection();
  final Entity entity=mvccEntity.getEntity().get();
  try {
    akkaUvService.confirmUniqueValues(applicationScope,entity,mvccEntity.getVersion());
  }
 catch (  UniqueValueException e) {
    Map<String,Field> violations=new HashMap<>();
    violations.put(e.getField().getName(),e.getField());
    throw new WriteUniqueVerifyException(mvccEntity,applicationScope,violations);
  }
  return ioEvent;
}
