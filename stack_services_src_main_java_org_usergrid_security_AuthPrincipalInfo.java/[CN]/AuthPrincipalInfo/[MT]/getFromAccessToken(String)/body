{
  String uuidStr=stringOrSubstringBeforeFirst(token,':');
  if (isEmpty(uuidStr)) {
    throw new BadAccessTokenException("Unable to get uuid from token");
  }
  UUID uuid=null;
  try {
    uuid=uuid(decodeBase64(uuidStr));
  }
 catch (  Exception e) {
    throw new BadAccessTokenException("Unable to get entity from token");
  }
  UUID applicationId=MANAGEMENT_APPLICATION_ID;
  int first_colon=token.indexOf(':');
  if (first_colon >= 0) {
    int second_colon=token.indexOf(':',first_colon + 1);
    if (second_colon >= 0) {
      uuidStr=token.substring(first_colon + 1,second_colon);
      try {
        applicationId=uuid(decodeBase64(uuidStr));
      }
 catch (      Exception e) {
        throw new BadAccessTokenException("Unable to get application from token");
      }
      if (applicationId == null) {
        applicationId=MANAGEMENT_APPLICATION_ID;
      }
    }
  }
  AuthPrincipalType type=AuthPrincipalType.getFromBase64String(stringOrSubstringAfterLast(token,':'));
  if (type == null) {
    throw new BadAccessTokenException("Unable to get type from token");
  }
  return new AuthPrincipalInfo(type,uuid,applicationId);
}
