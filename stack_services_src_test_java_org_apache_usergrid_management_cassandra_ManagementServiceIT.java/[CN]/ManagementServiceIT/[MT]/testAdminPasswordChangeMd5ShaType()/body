{
  String username=uniqueUsername();
  String password="test";
  User user=new User();
  user.setActivated(true);
  user.setUsername(username);
  EntityManager em=setup.getEmf().getEntityManager(setup.getEmf().getManagementAppId());
  User storedUser=em.create(user);
  setup.getEntityIndex().refresh(applicationId);
  UUID userId=storedUser.getUuid();
  CredentialsInfo info=new CredentialsInfo();
  info.setRecoverable(false);
  info.setEncrypted(true);
  Md5HashCommand md5=new Md5HashCommand();
  Sha1HashCommand sha1=new Sha1HashCommand();
  byte[] hashed=md5.hash(password.getBytes("UTF-8"),info,userId,setup.getEmf().getManagementAppId());
  hashed=sha1.hash(hashed,info,userId,setup.getEmf().getManagementAppId());
  info.setSecret(encodeBase64URLSafeString(hashed));
  info.setCipher(sha1.getName());
  info.setHashType(md5.getName());
  em.addToDictionary(storedUser,DICTIONARY_CREDENTIALS,"password",info);
  User authedUser=setup.getMgmtSvc().verifyAppUserPasswordCredentials(setup.getEmf().getManagementAppId(),username,password);
  assertEquals(userId,authedUser.getUuid());
  String newPassword="test2";
  setup.getMgmtSvc().setAppUserPassword(setup.getEmf().getManagementAppId(),userId,password,newPassword);
  authedUser=setup.getMgmtSvc().verifyAppUserPasswordCredentials(setup.getEmf().getManagementAppId(),username,newPassword);
  assertEquals(userId,authedUser.getUuid());
}
