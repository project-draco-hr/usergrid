{
  S3Export s3Export=new S3ExportImpl();
  ExportService exportService=setup.getExportService();
  HashMap<String,Object> payload=payloadBuilder();
  payload.put("organizationId",organization.getUuid());
  payload.put("applicationId",applicationId);
  EntityManager em=setup.getEmf().getEntityManager(applicationId);
  Map<String,Object> userProperties=null;
  Entity[] entity;
  entity=new Entity[100];
  for (int i=0; i < 100; i++) {
    userProperties=new LinkedHashMap<String,Object>();
    userProperties.put("username","bojangles" + i);
    userProperties.put("email","bojangles" + i + "@anuff.com");
    entity[i]=em.create("user",userProperties);
  }
  UUID exportUUID=exportService.schedule(payload);
  exportService.setS3Export(s3Export);
  JobData jobData=new JobData();
  jobData.setProperty("jobName","exportJob");
  jobData.setProperty("exportInfo",payload);
  jobData.setProperty("exportId",exportUUID);
  JobExecution jobExecution=mock(JobExecution.class);
  when(jobExecution.getJobData()).thenReturn(jobData);
  exportService.doExport(jobExecution);
  while (!exportService.getState(applicationId,exportUUID).equals("FINISHED"))   ;
  AWSCredentials myCredentials=new BasicAWSCredentials(System.getProperty("accessKey"),System.getProperty("secretKey"));
  AmazonS3 s3client=new AmazonS3Client(myCredentials);
  S3Object sd=null;
  try {
    sd=s3client.getObject(new GetObjectRequest(System.getProperty("bucketName"),s3Export.getFilename()));
  }
 catch (  Exception e) {
    assert(false);
  }
  assertNotNull(sd);
}
