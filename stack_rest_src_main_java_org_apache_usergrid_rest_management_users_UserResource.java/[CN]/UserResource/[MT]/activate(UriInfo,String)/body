{
  if (tokens.isExternalSSOProviderEnabled() && !isServiceAdmin()) {
    throw new IllegalArgumentException("External SSO integration is enabled, admin users must activate via" + " provider: " + properties.getProperty(TokenServiceImpl.USERGRID_EXTERNAL_SSO_PROVIDER));
  }
  UUID organizationId=null;
  try {
    TokenInfo tokenInfo=management.getActivationTokenInfoForAdminUser(token);
    organizationId=tokenInfo.getWorkflowOrgId();
    management.handleActivationTokenForAdminUser(user.getUuid(),tokenInfo);
    return handleViewable("activate",this,organizationId);
  }
 catch (  TokenException e) {
    return handleViewable("bad_activation_token",this,organizationId);
  }
catch (  RedirectionException e) {
    throw e;
  }
catch (  Exception e) {
    return handleViewable("error",e,organizationId);
  }
}
