{
  final boolean externalTokensEnabled=Boolean.valueOf(properties.getProperty(USERGRID_EXTERNAL_SSO_ENABLED));
  if (externalTokensEnabled) {
    throw new IllegalArgumentException("Admin Users must confirm via " + properties.getProperty(USERGRID_EXTERNAL_PROVIDER_URL));
  }
  UUID organizationId=null;
  try {
    TokenInfo tokenInfo=management.getConfirmationTokenInfoForAdminUser(token);
    organizationId=tokenInfo.getWorkflowOrgId();
    ActivationState state=management.handleConfirmationTokenForAdminUser(user.getUuid(),tokenInfo);
    if (state == ActivationState.CONFIRMED_AWAITING_ACTIVATION) {
      return handleViewable("confirm",this,organizationId);
    }
    return handleViewable("activate",this,organizationId);
  }
 catch (  TokenException e) {
    return handleViewable("bad_confirmation_token",this,organizationId);
  }
catch (  RedirectionException e) {
    throw e;
  }
catch (  Exception e) {
    return handleViewable("error",e,organizationId);
  }
}
