{
  final boolean externalTokensEnabled=!StringUtils.isEmpty(properties.getProperty(ManagementResource.USERGRID_CENTRAL_URL));
  if (externalTokensEnabled) {
    throw new IllegalArgumentException("Admin Users must confirm via " + properties.getProperty(ManagementResource.USERGRID_CENTRAL_URL));
  }
  try {
    ActivationState state=management.handleConfirmationTokenForAdminUser(user.getUuid(),token);
    if (state == ActivationState.CONFIRMED_AWAITING_ACTIVATION) {
      return handleViewable("confirm",this);
    }
    return handleViewable("activate",this);
  }
 catch (  TokenException e) {
    return handleViewable("bad_confirmation_token",this);
  }
catch (  RedirectionException e) {
    throw e;
  }
catch (  Exception e) {
    return new Viewable("error",e);
  }
}
