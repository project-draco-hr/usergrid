{
  logger.info("PermissionsIT.testPermissions");
  UUID applicationId=createApplication("testOrganization","testPermissions");
  assertNotNull(applicationId);
  EntityManager em=emf.getEntityManager(applicationId);
  assertNotNull(em);
  em.createRole("manager",null,0);
  em.createRole("member",null,100000);
  Map<String,String> roles=em.getRoles();
  assertEquals("proper number of roles not set",5,roles.size());
  dump("roles",roles);
  em.deleteRole("member");
  roles=em.getRoles();
  assertEquals("proper number of roles not set",4,roles.size());
  dump("roles",roles);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  Entity user=em.create("user",properties);
  assertNotNull(user);
  properties=new LinkedHashMap<String,Object>();
  properties.put("path","mmmeow");
  Entity group=em.create("group",properties);
  assertNotNull(user);
  em.addToCollection(group,"users",user);
  em.createGroupRole(group.getUuid(),"admin",0);
  em.createGroupRole(group.getUuid(),"author",100000);
  roles=em.getGroupRoles(group.getUuid());
  assertEquals("proper number of group roles not set",2,roles.size());
  dump("group roles",roles);
  em.deleteGroupRole(group.getUuid(),"author");
  roles=em.getGroupRoles(group.getUuid());
  assertEquals("proper number of group roles not set",1,roles.size());
  dump("group roles",roles);
  em.addUserToGroupRole(user.getUuid(),group.getUuid(),"admin");
  Results r=em.getUsersInGroupRole(group.getUuid(),"admin",Results.Level.ALL_PROPERTIES);
  assertEquals("proper number of users in group role not set",1,r.size());
  dump("entities",r.getEntities());
  em.grantRolePermission("admin","users:access:*");
  em.grantRolePermission("admin","groups:access:*");
  Set<String> permissions=em.getRolePermissions("admin");
  assertEquals("proper number of role permissions not set",2,permissions.size());
  dump("permissions",permissions);
  em.revokeRolePermission("admin","groups:access:*");
  permissions=em.getRolePermissions("admin");
  assertEquals("proper number of role permissions not set",1,permissions.size());
  dump("permissions",permissions);
  em.grantGroupRolePermission(group.getUuid(),"admin","users:access:*");
  em.grantGroupRolePermission(group.getUuid(),"admin","groups:access:*");
  permissions=em.getGroupRolePermissions(group.getUuid(),"admin");
  assertEquals("proper number of group role permissions not set",2,permissions.size());
  dump("group permissions",permissions);
  em.revokeGroupRolePermission(group.getUuid(),"admin","groups:access:*");
  permissions=em.getGroupRolePermissions(group.getUuid(),"admin");
  assertEquals("proper number of group role permissions not set",1,permissions.size());
  dump("group permissions",permissions);
  roles=em.getRoles();
  assertEquals("proper number of roles not set",4,roles.size());
  dump("roles",roles);
  em.grantUserPermission(user.getUuid(),"users:access:*");
  em.grantUserPermission(user.getUuid(),"groups:access:*");
  permissions=em.getUserPermissions(user.getUuid());
  assertEquals("proper number of user permissions not set",2,permissions.size());
  dump("user permissions",permissions);
}
