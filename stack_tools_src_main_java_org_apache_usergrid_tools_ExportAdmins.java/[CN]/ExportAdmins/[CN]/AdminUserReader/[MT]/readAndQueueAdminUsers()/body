{
  EntityManager em=emf.getEntityManager(CpNamingUtils.MANAGEMENT_APPLICATION_ID);
  while (true) {
    UUID uuid=null;
    try {
      uuid=readQueue.poll(30,TimeUnit.SECONDS);
      if (uuid == null) {
        break;
      }
      Entity entity=em.get(uuid);
      AdminUserWriteTask task=new AdminUserWriteTask();
      task.adminUser=entity;
      addDictionariesToTask(task,entity);
      addOrganizationsToTask(task);
      String actionTaken="Processed";
      if (ignoreInvalidUsers && (task.orgNamesByUuid.isEmpty() || task.dictionariesByName.isEmpty() || task.dictionariesByName.get("credentials").isEmpty())) {
        actionTaken="Ignored";
      }
 else {
        writeQueue.add(task);
      }
      Map<String,Object> creds=(Map<String,Object>)(task.dictionariesByName.isEmpty() ? 0 : task.dictionariesByName.get("credentials"));
      logger.error("{} admin user {}:{}:{} has organizations={} dictionaries={} credentials={}",new Object[]{actionTaken,task.adminUser.getProperty("username"),task.adminUser.getProperty("email"),task.adminUser.getUuid(),task.orgNamesByUuid.size(),task.dictionariesByName.size(),creds == null ? 0 : creds.size()});
    }
 catch (    Exception e) {
      logger.error("Error reading data for user " + uuid,e);
    }
  }
}
