{
  UUID applicationId=createApplication("testOrganization","testCollection");
  ServiceManager sm=smf.getServiceManager(applicationId);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("path","test-group/test-group");
  properties.put("title","Collection Test group");
  Entity group=testRequest(sm,ServiceAction.POST,1,properties,"groups").getEntity();
  assertNotNull(group);
  testRequest(sm,ServiceAction.GET,1,null,"groups","test-group","test-group");
  testRequest(sm,ServiceAction.GET,1,null,"groups");
  properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  Entity user=testRequest(sm,ServiceAction.POST,1,properties,"users").getEntity();
  assertNotNull(user);
  try {
    testRequest(sm,ServiceAction.GET,0,null,"users",group.getUuid());
    Assert.fail();
  }
 catch (  UnexpectedEntityTypeException uee) {
  }
  try {
    testRequest(sm,ServiceAction.GET,0,null,"users","test-group");
    Assert.fail();
  }
 catch (  ServiceResourceNotFoundException srnfe) {
  }
  properties=new LinkedHashMap<String,Object>();
  properties.put("group-size","10");
  try {
    testRequest(sm,ServiceAction.POST,0,properties,"users",group.getUuid());
    Assert.fail();
  }
 catch (  UnexpectedEntityTypeException uee) {
  }
  try {
    testRequest(sm,ServiceAction.POST,0,properties,"users","test-group");
    Assert.fail();
  }
 catch (  ServiceResourceNotFoundException srnfe) {
  }
  try {
    testRequest(sm,ServiceAction.PUT,0,properties,"users",group.getUuid());
    Assert.fail();
  }
 catch (  UnexpectedEntityTypeException uee) {
  }
  try {
    testRequest(sm,ServiceAction.PUT,0,properties,"users","test-group");
    Assert.fail();
  }
 catch (  ServiceResourceNotFoundException srnfe) {
  }
  try {
    testRequest(sm,ServiceAction.DELETE,0,null,"users",group.getUuid());
    Assert.fail();
  }
 catch (  UnexpectedEntityTypeException uee) {
  }
  try {
    testRequest(sm,ServiceAction.DELETE,0,null,"users","test-group");
    Assert.fail();
  }
 catch (  ServiceResourceNotFoundException srnfe) {
  }
}
