{
  final EntityManager em;
  try {
    em=getEmf().getEntityManager(app);
  }
 catch (  Throwable ex) {
    log.error("Error getting Entity Manager, aborting",ex);
    return;
  }
  BufferedReader br;
  try {
    InputStreamReader isr=new InputStreamReader(getClass().getResourceAsStream("/finefoods.txt"));
    br=new BufferedReader(isr);
  }
 catch (  Exception ex) {
    throw new RuntimeException("Error opening file",ex);
  }
  String s=null;
  Map<String,Object> currentEntityMap=new HashMap<String,Object>();
  UUID appId=app;
  int count=0;
  try {
    while ((s=br.readLine()) != null && count < maxEntities) {
      try {
        if (s.trim().equals("")) {
          Entity entity=em.create("review",currentEntityMap);
          if (maxEntities < 20) {
            log.info("Index written for {}",entity.getUuid());
            log.info("---");
          }
          currentEntityMap=new HashMap<String,Object>();
          count++;
          if (count % 100000 == 0) {
            log.info("Indexed {} reviews in {}",count,appId);
          }
          continue;
        }
        String name=s.substring(0,s.indexOf(":")).replace("/","_").toLowerCase();
        String value=s.substring(s.indexOf(":") + 1).trim();
        if (maxEntities < 20) {
          log.info("Indexing {} = {}",name,value);
        }
        if (NumberUtils.isNumber(value) && value.contains(".")) {
          currentEntityMap.put(name,Double.parseDouble(value));
        }
 else         if (NumberUtils.isNumber(value)) {
          currentEntityMap.put(name,Long.parseLong(value));
        }
 else {
          currentEntityMap.put(name,value.toString());
        }
      }
 catch (      Exception e) {
        log.info("Error on line " + count);
      }
    }
  }
 catch (  IOException ex) {
    throw new RuntimeException("Error reading file",ex);
  }
}
