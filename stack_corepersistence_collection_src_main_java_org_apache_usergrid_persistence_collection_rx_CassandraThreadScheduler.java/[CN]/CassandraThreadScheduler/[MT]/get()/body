{
  final ThreadFactory factory=new ThreadFactory(){
    private final AtomicLong counter=new AtomicLong();
    @Override public Thread newThread(    final Runnable r){
      final String threadName="RxCassandraIOThreadPool-" + counter.incrementAndGet();
      LOG.info("Allocating new IO thread with name {}",threadName);
      Thread t=new Thread(r,threadName);
      t.setDaemon(true);
      return t;
    }
  }
;
  final ThreadPoolExecutor pool=new ThreadPoolExecutor(0,rxFig.getMaxThreadCount(),60L,TimeUnit.SECONDS,new SynchronousQueue<Runnable>(),factory,new ThreadPoolExecutor.AbortPolicy());
  rxFig.addPropertyChangeListener(new PropertyChangeListener(){
    @Override public void propertyChange(    final PropertyChangeEvent evt){
      if (evt.getPropertyName().equals(rxFig.getKeyByMethod("getMaxThreadCount"))) {
        pool.setMaximumPoolSize((Integer)evt.getNewValue());
      }
    }
  }
);
  return Schedulers.executor(pool);
}
