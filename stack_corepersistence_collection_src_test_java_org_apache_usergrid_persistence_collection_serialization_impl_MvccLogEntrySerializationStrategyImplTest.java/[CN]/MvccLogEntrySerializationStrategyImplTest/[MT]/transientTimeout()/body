{
  final Id applicationId=new SimpleId("application");
  final String name="test";
  CollectionScope context=new CollectionScopeImpl(applicationId,name);
  final SimpleId id=new SimpleId("test");
  final UUID version=UUIDGenerator.newTimeUUID();
  for (  Stage stage : Stage.values()) {
    MvccLogEntry saved=new MvccLogEntryImpl(id,version,stage);
    logEntryStrategy.write(context,saved).execute();
    Thread.sleep(TIMEOUT * 1000);
    MvccLogEntry returned=logEntryStrategy.load(context,id,version);
    if (stage.isTransient()) {
      assertNull("Active is transient and should time out",returned);
    }
 else {
      assertNotNull("Committed is not transient and should be returned",returned);
      assertEquals("Returned should equal the saved",saved,returned);
    }
  }
}
