{
  final Id applicationId=new SimpleId("application");
  ApplicationScope context=new ApplicationScopeImpl(applicationId);
  final Id id=new SimpleId("test");
  final int size=10;
  final List<MvccLogEntry> savedEntries=new ArrayList<>(size);
  for (int i=0; i < size; i++) {
    final UUID version=UUIDGenerator.newTimeUUID();
    MvccLogEntry saved=new MvccLogEntryImpl(id,version,Stage.COMMITTED,MvccLogEntry.State.COMPLETE);
    logEntryStrategy.write(context,saved).execute();
    savedEntries.add(saved);
  }
  final List<MvccLogEntry> results=logEntryStrategy.loadReversed(context,id,null,size);
  assertEquals(size,results.size());
  for (int i=0; i < size; i++) {
    assertEquals(savedEntries.get(i),results.get(i));
  }
  for (  final MvccLogEntry mvccLogEntry : savedEntries) {
    logEntryStrategy.delete(context,id,mvccLogEntry.getVersion()).execute();
  }
  final List<MvccLogEntry> emptyResults=logEntryStrategy.loadReversed(context,id,null,size);
  assertEquals(0,emptyResults.size());
}
