{
  if ((args == null) || (args.length < 1)) {
    System.out.println("No command specified");
    return;
  }
  String command=args[0];
  Class<?> clazz=null;
  try {
    clazz=Class.forName(command);
  }
 catch (  ClassNotFoundException e) {
  }
  if (clazz == null) {
    try {
      clazz=Class.forName("org.apache.usergrid.tools." + command);
    }
 catch (    ClassNotFoundException e) {
    }
  }
  if (clazz == null) {
    try {
      clazz=Class.forName("org.apache.usergrid.tools." + StringUtils.capitalize(command));
    }
 catch (    ClassNotFoundException e) {
      e.printStackTrace();
    }
  }
  if (clazz == null) {
    System.out.println("Unable to find command");
    return;
  }
  args=Arrays.copyOfRange(args,1,args.length);
  try {
    if (ToolBase.class.isAssignableFrom(clazz)) {
      ToolBase tool=(ToolBase)clazz.newInstance();
      tool.startTool(args);
    }
 else {
      MethodUtils.invokeStaticMethod(clazz,"main",(Object)args);
    }
  }
 catch (  NoSuchMethodException e) {
    System.out.println("Unable to invoke command");
    e.printStackTrace();
  }
catch (  IllegalAccessException e) {
    System.out.println("Unable to invoke command");
    e.printStackTrace();
  }
catch (  InvocationTargetException e) {
    System.out.println("Error while invoking command");
    e.printStackTrace();
  }
catch (  InstantiationException e) {
    System.out.println("Error while instantiating tool object");
    e.printStackTrace();
  }
}
