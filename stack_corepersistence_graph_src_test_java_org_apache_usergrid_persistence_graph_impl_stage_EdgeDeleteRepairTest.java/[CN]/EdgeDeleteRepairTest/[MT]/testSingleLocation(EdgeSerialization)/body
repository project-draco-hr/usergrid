{
  final Id sourceId=createId("source");
  final Id targetId=createId("target");
  final String edgeType="edge";
  final Edge edge1=createEdge(sourceId,edgeType,targetId);
  edgeSerialization.writeEdge(scope,edge1).execute();
  final Edge edge2=createEdge(sourceId,edgeType,targetId);
  edgeSerialization.writeEdge(scope,edge2).execute();
  MarkedEdge deleted=edgeDeleteRepair.repair(scope,edge1).toBlockingObservable().single();
  assertEquals(edge1,deleted);
  Iterator<MarkedEdge> itr=edgeSerialization.getEdgeVersions(scope,new SimpleSearchByEdge(sourceId,edgeType,targetId,UUIDGenerator.newTimeUUID(),null));
  assertEquals(edge2,itr.next());
  assertFalse(itr.hasNext());
}
