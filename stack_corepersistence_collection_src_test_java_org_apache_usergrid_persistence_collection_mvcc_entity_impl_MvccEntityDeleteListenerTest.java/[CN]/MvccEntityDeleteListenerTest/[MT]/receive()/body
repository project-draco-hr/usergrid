{
  CollectionScope scope=mock(CollectionScope.class);
  UUID id=UUID.randomUUID();
  MvccEntity entity=mock(MvccEntity.class);
  Id entityId=new SimpleId(id,"test");
  when(entity.getId()).thenReturn(entityId);
  when(entity.getVersion()).thenReturn(id);
  MvccEntityEvent<MvccEntity> entityEvent=new MvccEntityEvent<MvccEntity>(scope,id,entity);
  MutationBatch batch=mock(MutationBatch.class);
  ArrayList<MvccEntity> entityList=new ArrayList<MvccEntity>();
  entityList.add(entity);
  when(mvccEntitySerializationStrategy.delete(scope,entityId,id)).thenReturn(batch);
  when(mvccEntitySerializationStrategy.loadHistory(scope,entityId,id,1000)).thenReturn(entityList.iterator());
  Observable<MvccEntity> observable=listener.receive(entityEvent);
  MvccEntity entityEventReturned=observable.toBlockingObservable().last();
  assertEquals(entity,entityEventReturned);
}
