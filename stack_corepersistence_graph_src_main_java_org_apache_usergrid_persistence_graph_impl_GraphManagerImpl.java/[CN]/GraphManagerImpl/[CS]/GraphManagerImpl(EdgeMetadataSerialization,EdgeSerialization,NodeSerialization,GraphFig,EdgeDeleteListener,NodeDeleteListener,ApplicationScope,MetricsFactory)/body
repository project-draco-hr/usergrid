{
  ValidationUtils.validateApplicationScope(scope);
  Preconditions.checkNotNull(edgeMetadataSerialization,"edgeMetadataSerialization must not be null");
  Preconditions.checkNotNull(storageEdgeSerialization,"storageEdgeSerialization must not be null");
  Preconditions.checkNotNull(nodeSerialization,"nodeSerialization must not be null");
  Preconditions.checkNotNull(graphFig,"consistencyFig must not be null");
  Preconditions.checkNotNull(scope,"scope must not be null");
  Preconditions.checkNotNull(nodeDeleteListener,"nodeDeleteListener must not be null");
  this.scope=scope;
  this.edgeMetadataSerialization=edgeMetadataSerialization;
  this.storageEdgeSerialization=storageEdgeSerialization;
  this.nodeSerialization=nodeSerialization;
  this.graphFig=graphFig;
  this.edgeDeleteListener=edgeDeleteListener;
  this.nodeDeleteListener=nodeDeleteListener;
  this.writeEdgeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"write.edge");
  this.markEdgeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"mark.edge");
  this.deleteEdgeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"delete.edge");
  this.markNodeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"mark.node");
  this.deleteNodeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"delete.node");
  this.loadEdgesFromSourceTimer=metricsFactory.getTimer(GraphManagerImpl.class,"load.from");
  this.loadEdgesToTargetTimer=metricsFactory.getTimer(GraphManagerImpl.class,"load.to");
  this.loadEdgesVersionsTimer=metricsFactory.getTimer(GraphManagerImpl.class,"load.versions");
  this.loadEdgesFromSourceByTypeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"load.from.type");
  this.loadEdgesToTargetByTypeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"load.to.type");
  this.getEdgeTypesFromSourceTimer=metricsFactory.getTimer(GraphManagerImpl.class,"get.edge.from");
  this.getIdTypesFromSourceTimer=metricsFactory.getTimer(GraphManagerImpl.class,"get.idtype.from");
  this.getEdgeTypesToTargetTimer=metricsFactory.getTimer(GraphManagerImpl.class,"get.edge.to");
  this.getIdTypesToTargetTimer=metricsFactory.getTimer(GraphManagerImpl.class,"get.idtype.to");
}
