{
  ValidationUtils.validateApplicationScope(scope);
  Preconditions.checkNotNull(edgeMetadataSerialization,"edgeMetadataSerialization must not be null");
  Preconditions.checkNotNull(storageEdgeSerialization,"storageEdgeSerialization must not be null");
  Preconditions.checkNotNull(nodeSerialization,"nodeSerialization must not be null");
  Preconditions.checkNotNull(graphFig,"consistencyFig must not be null");
  Preconditions.checkNotNull(scope,"scope must not be null");
  Preconditions.checkNotNull(nodeDeleteListener,"nodeDeleteListener must not be null");
  this.scope=scope;
  this.edgeMetadataSerialization=edgeMetadataSerialization;
  this.storageEdgeSerialization=storageEdgeSerialization;
  this.nodeSerialization=nodeSerialization;
  this.graphFig=graphFig;
  this.edgeDeleteListener=edgeDeleteListener;
  this.nodeDeleteListener=nodeDeleteListener;
  this.markNodeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"node.mark");
  this.deleteNodeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"node.delete");
  this.writeEdgeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"edge.write");
  this.markEdgeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"edge.mark");
  this.deleteEdgeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"edge.delete");
  this.loadEdgesFromSourceTimer=metricsFactory.getTimer(GraphManagerImpl.class,"edge.load_from");
  this.loadEdgesToTargetTimer=metricsFactory.getTimer(GraphManagerImpl.class,"edge.load_to");
  this.loadEdgesVersionsTimer=metricsFactory.getTimer(GraphManagerImpl.class,"edge.load_versions");
  this.loadEdgesFromSourceByTypeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"edge.load_from_type");
  this.loadEdgesToTargetByTypeTimer=metricsFactory.getTimer(GraphManagerImpl.class,"edge.load_to_type");
  this.getEdgeTypesFromSourceTimer=metricsFactory.getTimer(GraphManagerImpl.class,"edge.get_edge_from");
  this.getEdgeTypesToTargetTimer=metricsFactory.getTimer(GraphManagerImpl.class,"edge.get_to");
  this.getIdTypesFromSourceTimer=metricsFactory.getTimer(GraphManagerImpl.class,"idtype.get_from");
  this.getIdTypesToTargetTimer=metricsFactory.getTimer(GraphManagerImpl.class,"idtype.get_to");
}
