{
  return HystrixObservable.user(Observable.from(node).subscribeOn(Schedulers.io()).map(new Func1<Id,Id>(){
    @Override public Id call(    final Id id){
      final UUID eventTimestamp=UUIDGenerator.newTimeUUID();
      final MutationBatch nodeMutation=nodeSerialization.mark(scope,id,timestamp);
      try {
        LOG.debug("Marking node {} as deleted to node mark",node);
        nodeMutation.execute();
      }
 catch (      ConnectionException e) {
        throw new GraphRuntimeException("Unable to connect to cassandra",e);
      }
      HystrixObservable.async(nodeDeleteListener.receive(scope,id,eventTimestamp)).subscribeOn(Schedulers.io()).subscribe(nodeDelete);
      return id;
    }
  }
));
}
