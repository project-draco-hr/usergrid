{
  this.uniqueValueSerializationStrategy=uniqueValueSerializationStrategy;
  this.entitySerializationStrategy=entitySerializationStrategy;
  this.uniqueCleanup=uniqueCleanup;
  this.versionCompact=versionCompact;
  this.serializationFig=serializationFig;
  this.rxTaskScheduler=rxTaskScheduler;
  this.actorSystemManager=actorSystemManager;
  this.uniqueValuesService=uniqueValuesService;
  ValidationUtils.validateApplicationScope(applicationScope);
  this.writeStart=writeStart;
  this.writeVerifyUnique=writeVerifyUnique;
  this.writeOptimisticVerify=writeOptimisticVerify;
  this.writeCommit=writeCommit;
  this.rollback=rollback;
  this.markStart=markStart;
  this.markCommit=markCommit;
  this.keyspace=keyspace;
  this.applicationScope=applicationScope;
  this.mvccLogEntrySerializationStrategy=mvccLogEntrySerializationStrategy;
  this.writeTimer=metricsFactory.getTimer(EntityCollectionManagerImpl.class,"base.write");
  this.deleteTimer=metricsFactory.getTimer(EntityCollectionManagerImpl.class,"base.delete");
  this.fieldIdTimer=metricsFactory.getTimer(EntityCollectionManagerImpl.class,"base.fieldId");
  this.fieldEntityTimer=metricsFactory.getTimer(EntityCollectionManagerImpl.class,"base.fieldEntity");
  this.loadTimer=metricsFactory.getTimer(EntityCollectionManagerImpl.class,"base.load");
  this.getLatestTimer=metricsFactory.getTimer(EntityCollectionManagerImpl.class,"base.latest");
}
