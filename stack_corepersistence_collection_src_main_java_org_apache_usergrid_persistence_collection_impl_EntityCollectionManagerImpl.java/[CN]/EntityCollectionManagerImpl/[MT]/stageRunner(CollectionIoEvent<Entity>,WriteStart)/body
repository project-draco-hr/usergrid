{
  return Observable.from(writeData).map(writeState).flatMap(new Func1<CollectionIoEvent<MvccEntity>,Observable<CollectionIoEvent<MvccEntity>>>(){
    @Override public Observable<CollectionIoEvent<MvccEntity>> call(    final CollectionIoEvent<MvccEntity> mvccEntityCollectionIoEvent){
      Observable<CollectionIoEvent<MvccEntity>> unique=Observable.from(mvccEntityCollectionIoEvent).subscribeOn(Schedulers.io()).flatMap(writeVerifyUnique);
      Observable<CollectionIoEvent<MvccEntity>> optimistic=Observable.from(mvccEntityCollectionIoEvent).subscribeOn(Schedulers.io()).map(writeOptimisticVerify);
      return Observable.merge(unique,optimistic).last();
    }
  }
);
}
