{
  EdgeManager em=emf.createEdgeManager(scope);
  final Id sourceId=createId("source");
  Edge edge1=createEdge(sourceId,"test",createId("target"));
  em.writeEdge(edge1).toBlockingObservable().singleOrDefault(null);
  Edge edge2=createEdge(sourceId,"test",createId("target"));
  em.writeEdge(edge2).toBlockingObservable().singleOrDefault(null);
  Edge edge3=createEdge(sourceId,"test",createId("target"));
  em.writeEdge(edge3).toBlockingObservable().singleOrDefault(null);
  SearchByEdgeType search=createSearchByEdge(edge1.getSourceNode(),edge1.getType(),edge1.getVersion(),null);
  Observable<Edge> edges=em.loadEdgesFromSource(search);
  Iterator<Edge> returned=edges.toBlockingObservable().getIterator();
  assertEquals("Correct edge returned",edge1,returned.next());
  assertFalse("No more edges",returned.hasNext());
  search=createSearchByEdge(edge1.getSourceNode(),edge1.getType(),edge3.getVersion(),edge2);
  edges=em.loadEdgesFromSource(search);
  returned=edges.toBlockingObservable().getIterator();
  assertEquals("Paged correctly",edge3,returned.next());
  assertFalse("End of stream",returned.hasNext());
}
