{
  final AtomicLong atomicLong=new AtomicLong();
  return allEntitiesInSystemObservable.getData().parallel(new Func1<Observable<EntityIdScope>,Observable<EntityIdScope>>(){
    @Override public Observable<EntityIdScope> call(    final Observable<EntityIdScope> entityIdScopeObservable){
      return entityIdScopeObservable.doOnNext(new Action1<EntityIdScope>(){
        @Override public void call(        final EntityIdScope entityIdScope){
          final MapScope ms=CpNamingUtils.getEntityTypeMapScope(entityIdScope.getCollectionScope().getApplication());
          final MapManager mapManager=managerCache.getMapManager(ms);
          final UUID entityUuid=entityIdScope.getId().getUuid();
          final String entityType=entityIdScope.getId().getType();
          mapManager.putString(entityUuid.toString(),entityType);
          if (atomicLong.incrementAndGet() % 100 == 0) {
            observer.update(getMaxVersion(),String.format("Updated %d entities",atomicLong.get()));
          }
        }
      }
);
    }
  }
).count().toBlocking().last();
}
