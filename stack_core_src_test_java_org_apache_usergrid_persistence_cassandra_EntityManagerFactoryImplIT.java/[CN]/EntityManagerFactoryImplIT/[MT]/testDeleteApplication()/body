{
  ReIndexService reIndexService=setup.getInjector().getInstance(ReIndexService.class);
  int maxRetries=10;
  String rand=UUIDGenerator.newTimeUUID().toString();
  String appName="test-app-" + rand;
  String orgName="test-org-" + rand;
  final UUID deletedAppId=setup.createApplication(orgName,appName);
  EntityManager em=setup.getEmf().getEntityManager(deletedAppId);
  Map<String,Object> properties1=new LinkedHashMap<String,Object>();
  properties1.put("Name","12 Angry Men");
  properties1.put("Year",1957);
  Entity film1=em.create("film",properties1);
  Map<String,Object> properties2=new LinkedHashMap<String,Object>();
  properties2.put("Name","Reservoir Dogs");
  properties2.put("Year",1992);
  Entity film2=em.create("film",properties2);
  for (int j=0; j < maxRetries; j++) {
    if (setup.getEmf().lookupApplication(orgName + "/" + appName).isPresent()) {
      break;
    }
    Thread.sleep(500);
  }
  this.app.refreshIndex();
  setup.getEmf().deleteApplication(deletedAppId);
  this.app.refreshIndex();
  this.app.refreshIndex();
  Func2<UUID,Map<String,UUID>,Boolean> findApps=new Func2<UUID,Map<String,UUID>,Boolean>(){
    @Override public Boolean call(    UUID applicationId,    Map<String,UUID> apps){
      boolean found=false;
      for (      String appName : apps.keySet()) {
        UUID appId=apps.get(appName);
        if (appId.equals(applicationId)) {
          found=true;
          break;
        }
      }
      return found;
    }
  }
;
  boolean found=findApps.call(deletedAppId,emf.getDeletedApplications());
  assertTrue("Deleted app must be found in in deleted apps collection",found);
  found=setup.getEmf().lookupApplication(orgName + "/" + appName).isPresent();
  assertFalse("Lookup of deleted app must fail",found);
  found=findApps.call(deletedAppId,emf.getApplications());
  assertFalse("Deleted app must not be found in apps collection",found);
  emf.restoreApplication(deletedAppId);
  final ReIndexRequestBuilder builder=reIndexService.getBuilder().withApplicationId(deletedAppId);
  ReIndexService.ReIndexStatus status=reIndexService.rebuildIndex(builder);
  int count=0;
  do {
    status=reIndexService.getStatus(status.getJobId());
    count++;
    if (count > 0) {
      if (count > 10) {
        break;
      }
      Thread.sleep(1000);
    }
  }
 while (status.getStatus() != ReIndexService.Status.COMPLETE);
  this.app.refreshIndex();
  found=findApps.call(deletedAppId,emf.getDeletedApplications());
  assertFalse("Restored app found in deleted apps collection",found);
  this.app.refreshIndex();
  Map<String,UUID> apps=setup.getEmf().getApplications();
  found=findApps.call(deletedAppId,apps);
  assertTrue("Restored app not found in apps collection",found);
  assertTrue(setup.getEmf().lookupApplication(orgName + "/" + appName).isPresent());
}
