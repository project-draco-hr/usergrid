{
  Preconditions.checkNotNull(value,"value is required");
  Preconditions.checkNotNull(timeToLive,"timeToLive is required");
  log.debug("Writing unique value scope={} id={} version={} name={} value={} ttl={} ",new Object[]{value.getCollectionScope().getName(),value.getEntityId(),value.getEntityVersion(),value.getField().getName(),value.getField().getValue(),timeToLive});
  final EntityVersion ev=new EntityVersion(value.getEntityId(),value.getEntityVersion());
  final Integer ttl;
  if (timeToLive.equals(Integer.MAX_VALUE)) {
    ttl=null;
  }
 else {
    ttl=timeToLive;
  }
  return doWrite(value.getCollectionScope(),value.getField(),new UniqueValueSerializationStrategyImpl.RowOp(){
    @Override public void doOp(    final ColumnListMutation<EntityVersion> colMutation){
      colMutation.putColumn(ev,0x0,ttl);
    }
  }
);
}
