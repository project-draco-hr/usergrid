{
  final TestUser user=context.getActiveUser();
  String email=user.getEmail();
  UserInfo userInfo=setup.getMgmtSvc().getAdminUserByEmail(email);
  String resetToken=setup.getMgmtSvc().getPasswordResetTokenForAdminUser(userInfo.getUuid(),15000);
  reindex("test-organization","test-app");
  Form formData=new Form();
  formData.add("token",resetToken);
  formData.add("password1","sesame");
  formData.add("password2","sesame");
  String html=resource().path("/management/users/" + userInfo.getUsername() + "/resetpw").type(MediaType.APPLICATION_FORM_URLENCODED_TYPE).post(String.class,formData);
  assertTrue(html.contains("password set"));
  reindex("test-organization","test-app");
  JsonNode node=mapper.readTree(resource().path("/management/token").queryParam("grant_type","password").queryParam("username",email).queryParam("password","sesame").accept(MediaType.APPLICATION_JSON).get(String.class));
  Long changeTime=node.get("passwordChanged").longValue();
  assertTrue(System.currentTimeMillis() - changeTime < 2000);
  Map<String,String> payload=hashMap("oldpassword","sesame").map("newpassword","test");
  node=mapper.readTree(resource().path("/management/users/" + userInfo.getUsername() + "/password").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(String.class,payload));
  reindex("test-organization","test-app");
  node=mapper.readTree(resource().path("/management/token").queryParam("grant_type","password").queryParam("username",email).queryParam("password","test").accept(MediaType.APPLICATION_JSON).get(String.class));
  Long changeTime2=node.get("passwordChanged").longValue();
  assertTrue(changeTime < changeTime2);
  assertTrue(System.currentTimeMillis() - changeTime2 < 2000);
  node=mapper.readTree(resource().path("/management/me").queryParam("grant_type","password").queryParam("username",email).queryParam("password","test").accept(MediaType.APPLICATION_JSON).get(String.class));
  Long changeTime3=node.get("passwordChanged").longValue();
  assertEquals(changeTime2,changeTime3);
}
