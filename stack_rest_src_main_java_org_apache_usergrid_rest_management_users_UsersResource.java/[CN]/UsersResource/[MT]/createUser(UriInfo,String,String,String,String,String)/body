{
  if (tokens.isExternalSSOProviderEnabled() && !isServiceAdmin()) {
    throw new IllegalArgumentException("External SSO integration is enabled, admin users registering without an org" + " must do so via provider: " + properties.getProperty(TokenServiceImpl.USERGRID_EXTERNAL_SSO_PROVIDER));
  }
  if (StringUtils.isBlank(email)) {
    throw new IllegalArgumentException("email form parameter is required");
  }
  if ("me".equals(username)) {
    throw new IllegalArgumentException("Username 'me' is reserved");
  }
  logger.info("Create user: {}",(StringUtils.isNotBlank(username) ? username : email));
  ApiResponse response=createApiResponse();
  response.setAction("create user");
  UserInfo user=null;
  if (tokens.isExternalSSOProviderEnabled()) {
    user=management.createAdminUser(null,username,name,email,password,true,false);
  }
 else {
    user=management.createAdminUser(null,username,name,email,password,false,false);
  }
  Map<String,Object> result=new LinkedHashMap<String,Object>();
  if (user != null) {
    result.put("user",user);
    response.setData(result);
    response.setSuccess();
  }
 else {
    throw mappableSecurityException(AuthErrorInfo.BAD_CREDENTIALS_SYNTAX_ERROR);
  }
  management.createAdminUserPostProcessing(user,null);
  return response;
}
