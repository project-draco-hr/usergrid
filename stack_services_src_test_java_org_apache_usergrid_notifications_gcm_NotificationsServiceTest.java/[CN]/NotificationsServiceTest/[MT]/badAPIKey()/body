{
  if (!USE_REAL_CONNECTIONS) {
    ns.providerAdapters.put("google",new MockSuccessfulProviderAdapter(){
      @Override public void sendNotification(      String providerId,      Notifier notifier,      Object payload,      Notification notification,      TaskTracker tracker) throws Exception {
        Exception e=new IOException();
        throw new ConnectionException(e.getMessage(),e);
      }
    }
);
  }
  app.clear();
  String payload="Hello, World!";
  Map<String,String> payloads=new HashMap<String,String>(1);
  payloads.put(notifier.getUuid().toString(),payload);
  app.put("payloads",payloads);
  app.put("queued",System.currentTimeMillis());
  Entity e=app.testRequest(ServiceAction.POST,1,"notifications").getEntity();
  app.testRequest(ServiceAction.GET,1,"notifications",e.getUuid());
  Notification notification=app.getEm().get(e.getUuid(),Notification.class);
  assertEquals(notification.getPayloads().get(notifier.getUuid().toString()),payload);
  ns.addDevice(notification,device1);
  app.getEm().setProperty(notifier,"apiKey",API_KEY + "x");
  try {
    ns.getQueueManager().processBatchAndReschedule(notification,null);
    fail("Should have received a ConnectionException");
  }
 catch (  ConnectionException ex) {
  }
}
