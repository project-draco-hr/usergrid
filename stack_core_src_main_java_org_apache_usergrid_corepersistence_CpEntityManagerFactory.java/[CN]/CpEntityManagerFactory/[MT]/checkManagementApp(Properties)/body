{
  int maxRetries=100;
  try {
    maxRetries=Integer.parseInt(properties.getProperty(MANAGEMENT_APP_INIT_MAXRETRIES,"100"));
  }
 catch (  Exception e) {
    logger.error("Error parsing " + MANAGEMENT_APP_INIT_MAXRETRIES + ". Will use "+ maxRetries,e);
  }
  int interval=1000;
  try {
    interval=Integer.parseInt(properties.getProperty(MANAGEMENT_APP_INIT_INTERVAL,"1000"));
  }
 catch (  Exception e) {
    logger.error("Error parsing " + MANAGEMENT_APP_INIT_INTERVAL + ". Will use "+ maxRetries,e);
  }
  int retries=0;
  boolean managementAppFound=false;
  boolean bootstrapping=false;
  Set<Class> seenBefore=new HashSet<>(10);
  while (!managementAppFound && retries++ < maxRetries) {
    try {
      managementApp=_getEntityManager(getManagementAppId()).getApplication();
      managementAppFound=true;
    }
 catch (    Throwable t) {
      if (t instanceof CollectionRuntimeException) {
        CollectionRuntimeException cre=(CollectionRuntimeException)t;
        if (cre.isBootstrapping()) {
          bootstrapping=true;
          break;
        }
      }
      Throwable cause=t;
      StringBuilder sb=new StringBuilder();
      sb.append(retries).append(": Error (");
      if (t instanceof UncheckedExecutionException) {
        UncheckedExecutionException uee=(UncheckedExecutionException)t;
        if (uee.getCause() instanceof RuntimeException) {
          cause=uee.getCause().getCause();
          sb.append(cause.getClass().getSimpleName()).append(") ").append(uee.getCause().getMessage());
        }
 else {
          cause=uee.getCause();
          sb.append(cause.getClass().getSimpleName()).append(") ").append(t.getMessage());
        }
      }
 else {
        sb.append(t.getCause().getClass().getSimpleName()).append(") ").append(t.getMessage());
      }
      String msg=sb.toString();
      if (!seenBefore.contains(cause.getClass())) {
        logger.error(msg,t);
      }
 else {
        logger.error(msg);
      }
      seenBefore.add(cause.getClass());
      try {
        Thread.sleep(interval);
      }
 catch (      InterruptedException ignored) {
      }
    }
  }
  if (!managementAppFound && !bootstrapping) {
    throw new RuntimeException("Unable to get management app after " + retries + " retries");
  }
}
