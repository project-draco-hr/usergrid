{
  EntityManager em=getEntityManager(CpNamingUtils.MANAGEMENT_APPLICATION_ID);
  init();
  final String appName=buildAppName(organizationName,name);
  if (lookupApplication(appName) != null) {
    throw new ApplicationAlreadyExistsException(appName);
  }
  getSetup().setupApplicationKeyspace(applicationId,appName);
  final Optional<UUID> cachedValue=orgApplicationCache.getOrganizationId(organizationName);
  if (!cachedValue.isPresent()) {
    final String orgName=organizationName;
    try {
      final Entity orgInfo=em.create("organization",new HashMap<String,Object>(){
{
          put(PROPERTY_NAME,orgName);
        }
      }
);
      orgApplicationCache.evictOrgId(name);
    }
 catch (    DuplicateUniquePropertyExistsException e) {
      orgApplicationCache.evictOrgId(organizationName);
    }
  }
  final UUID appId=applicationId;
  Map<String,Object> appInfoMap=new HashMap<String,Object>(){
{
      put(PROPERTY_NAME,appName);
      put(PROPERTY_UUID,appId);
    }
  }
;
  try {
    em.create(appId,CpNamingUtils.APPLICATION_INFO,appInfoMap);
  }
 catch (  DuplicateUniquePropertyExistsException e) {
    throw new ApplicationAlreadyExistsException(appName);
  }
  em.refreshIndex();
  if (properties == null) {
    properties=new TreeMap<String,Object>(CASE_INSENSITIVE_ORDER);
  }
  properties.put(PROPERTY_NAME,appName);
  EntityManager appEm=getEntityManager(applicationId);
  appEm.create(applicationId,TYPE_APPLICATION,properties);
  appEm.createIndex();
  appEm.resetRoles();
  appEm.refreshIndex();
  logger.info("Initialized application {}",appName);
  orgApplicationCache.evictAppId(appName);
  return applicationId;
}
