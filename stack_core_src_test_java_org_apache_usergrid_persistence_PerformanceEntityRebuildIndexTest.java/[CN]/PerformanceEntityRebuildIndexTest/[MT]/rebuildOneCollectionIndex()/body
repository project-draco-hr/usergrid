{
  logger.info("Started rebuildIndex()");
  String rand=RandomStringUtils.randomAlphanumeric(5);
  final UUID appId=setup.createApplication("org_" + rand,"app_" + rand);
  final EntityManager em=setup.getEmf().getEntityManager(appId);
  Map<String,Object> entityMap=new HashMap<String,Object>(){
{
      put("key1",1000);
      put("key2",2000);
      put("key3","Some value");
    }
  }
;
  final long stopTime=System.currentTimeMillis() + RUNTIME_MS;
  List<EntityRef> entityRefs=new ArrayList<EntityRef>();
  int entityCount=0;
  int herderCount=0;
  int shepardCount=0;
  while (System.currentTimeMillis() < stopTime) {
    final Entity entity;
    try {
      entityMap.put("key",entityCount);
      if (entityCount % 2 == 0) {
        entity=em.create("catherder",entityMap);
        herderCount++;
      }
 else {
        entity=em.create("catshepard",entityMap);
        shepardCount++;
      }
      em.refreshIndex();
    }
 catch (    Exception ex) {
      throw new RuntimeException("Error creating entity",ex);
    }
    entityRefs.add(new SimpleEntityRef(entity.getType(),entity.getUuid()));
    if (entityCount % 10 == 0) {
      logger.info("Created {} entities",entityCount);
    }
    entityCount++;
    try {
      Thread.sleep(WRITE_DELAY_MS);
    }
 catch (    InterruptedException ignored) {
    }
  }
  logger.info("Created {} entities",entityCount);
  em.refreshIndex();
  logger.debug("Read the data");
  readData(em,"catherders",herderCount,0);
  readData(em,"catshepards",shepardCount,0);
  logger.debug("Deleting apps");
  deleteIndex(em.getApplicationId());
  logger.debug("Reading data, should fail this time ");
  try {
    readData(em,"testTypes",entityCount,0);
    fail("should have failed to read data");
  }
 catch (  Exception expected) {
  }
  logger.debug("Preparing to rebuild all indexes");
  ;
  final String meterName=this.getClass().getSimpleName() + ".rebuildIndex";
  final Meter meter=registry.meter(meterName);
  EntityManagerFactory.ProgressObserver po=new EntityManagerFactory.ProgressObserver(){
    int counter=0;
    @Override public void onProgress(    final EntityRef entity){
      meter.mark();
      logger.debug("Indexing {}:{}",entity.getType(),entity.getUuid());
      if (counter % 100 == 0) {
        logger.info("Reindexed {} entities",counter);
      }
      counter++;
    }
  }
;
  try {
    setup.getEmf().rebuildCollectionIndex(em.getApplicationId(),"catherders",false,po);
    setup.getEmf().rebuildCollectionIndex(em.getApplicationId(),"catherders",true,po);
    reporter.report();
    registry.remove(meterName);
    logger.info("Rebuilt index");
  }
 catch (  Exception ex) {
    logger.error("Error rebuilding index",ex);
    fail();
  }
  readData(em,"catherders",herderCount,0);
  readData(em,"catshepards",0,0);
}
