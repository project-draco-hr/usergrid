{
  logger.info("Started rebuildIndex()");
  final EntityManager em=app.getEntityManager();
  final long stopTime=System.currentTimeMillis() + RUNTIME;
  final Map<String,Object> entityMap=new HashMap<>();
  entityMap.put("key1",1000);
  entityMap.put("key2",2000);
  entityMap.put("key3","Some value");
  List<EntityRef> entityRefs=new ArrayList<EntityRef>();
  int entityCount=0;
  while (System.currentTimeMillis() < stopTime) {
    entityMap.put("key",entityCount);
    final Entity created;
    try {
      created=em.create("testType",entityMap);
    }
 catch (    Exception ex) {
      throw new RuntimeException("Error creating entity",ex);
    }
    entityRefs.add(new SimpleEntityRef(created.getType(),created.getUuid()));
    if (entityCount % 100 == 0) {
      logger.info("Created {} entities",entityCount);
    }
    entityCount++;
    try {
      Thread.sleep(writeDelayMs);
    }
 catch (    InterruptedException ignored) {
    }
  }
  logger.info("Created {} entities",entityCount);
  em.refreshIndex();
  logger.debug("Read the data");
  readData("testTypes",entityCount);
  logger.debug("Deleting app index and system app index");
  deleteIndex(CpEntityManagerFactory.SYSTEM_APP_ID);
  deleteIndex(em.getApplicationId());
  logger.debug("Reading data, should fail this time ");
  try {
    readData("testTypes",entityCount);
    fail("should have failed to read data");
  }
 catch (  Exception expected) {
  }
  logger.debug("Preparing to rebuild all indexes");
  ;
  final String meterName=this.getClass().getSimpleName() + ".rebuildIndex";
  final Meter meter=registry.meter(meterName);
  EntityManagerFactory.ProgressObserver po=new EntityManagerFactory.ProgressObserver(){
    int counter=0;
    @Override public void onProgress(    EntityRef s,    EntityRef t,    String etype){
      meter.mark();
      logger.debug("Indexing from {}:{} to {}:{} edgeType {}",new Object[]{s.getType(),s.getUuid(),t.getType(),t.getUuid(),etype});
      if (!logger.isDebugEnabled() && counter % 100 == 0) {
        logger.info("Reindexed {} entities",counter);
      }
      counter++;
    }
  }
;
  try {
    setup.getEmf().rebuildAllIndexes(po);
    registry.remove(meterName);
    logger.info("Rebuilt index");
  }
 catch (  Exception ex) {
    logger.error("Error rebuilding index",ex);
    fail();
  }
  readData("testTypes",entityCount);
}
