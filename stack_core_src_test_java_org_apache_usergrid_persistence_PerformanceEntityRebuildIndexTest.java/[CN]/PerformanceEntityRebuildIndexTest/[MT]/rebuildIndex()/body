{
  logger.info("Started rebuildIndex()");
  String rand=RandomStringUtils.randomAlphanumeric(5);
  final UUID appId=setup.createApplication("org_" + rand,"app_" + rand);
  final EntityManager em=setup.getEmf().getEntityManager(appId);
  final ReIndexService reIndexService=setup.getInjector().getInstance(ReIndexService.class);
  Map<String,Object> entityMap=new HashMap<String,Object>(){
{
      put("key1",1000);
      put("key2",2000);
      put("key3","Some value");
    }
  }
;
  Map<String,Object> cat1map=new HashMap<String,Object>(){
{
      put("name","enzo");
      put("color","orange");
    }
  }
;
  Map<String,Object> cat2map=new HashMap<String,Object>(){
{
      put("name","marquee");
      put("color","grey");
    }
  }
;
  Map<String,Object> cat3map=new HashMap<String,Object>(){
{
      put("name","bertha");
      put("color","tabby");
    }
  }
;
  Entity cat1=em.create("cat",cat1map);
  Entity cat2=em.create("cat",cat2map);
  Entity cat3=em.create("cat",cat3map);
  List<EntityRef> entityRefs=new ArrayList<>();
  for (int i=0; i < ENTITIES_TO_INDEX; i++) {
    final Entity entity;
    try {
      entityMap.put("key",i);
      entity=em.create("testType",entityMap);
      em.createConnection(entity,"herds",cat1);
      em.createConnection(entity,"herds",cat2);
      em.createConnection(entity,"herds",cat3);
    }
 catch (    Exception ex) {
      throw new RuntimeException("Error creating entity",ex);
    }
    entityRefs.add(new SimpleEntityRef(entity.getType(),entity.getUuid()));
    if (i % 10 == 0) {
      logger.info("Created {} entities",i);
    }
  }
  logger.info("Created {} entities",ENTITIES_TO_INDEX);
  app.refreshIndex();
  logger.debug("Read the data");
  final String collectionName="testtypes";
  readData(em,collectionName,ENTITIES_TO_INDEX,3);
  logger.debug("Deleting app index");
  deleteIndex(em.getApplicationId());
  logger.debug("Reading data, should fail this time ");
  readData(em,collectionName,0,0);
  logger.debug("Preparing to rebuild all indexes");
  ;
  try {
    final ReIndexRequestBuilder builder=reIndexService.getBuilder().withApplicationId(em.getApplicationId());
    ReIndexService.ReIndexStatus status=reIndexService.rebuildIndex(builder);
    assertNotNull(status.getJobId(),"JobId is present");
    logger.info("Rebuilt index");
    waitForRebuild(status,reIndexService);
    logger.info("Rebuilt index");
    app.refreshIndex();
  }
 catch (  Exception ex) {
    logger.error("Error rebuilding index",ex);
    fail();
  }
  Thread.sleep(2000);
  readData(em,collectionName,ENTITIES_TO_INDEX,3);
}
