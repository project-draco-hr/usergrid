{
  final FieldBuffer fieldBuffer;
  try {
    fieldBuffer=FIELD_BUFFER_SERIALIZER.fromByteBuffer(byteBuffer);
  }
 catch (  Exception e) {
    throw new DataCorruptionException("Unable to de-serialze entity",e);
  }
  FieldBufferParser parser=new FieldBufferParser(fieldBuffer);
  byte version=parser.readByte();
  if (VERSION != version) {
    throw new UnsupportedOperationException("A version of type " + version + " is unsupported");
  }
  byte state=parser.readByte();
  if (STATE_DELETED == state) {
    return new EntityWrapper(MvccEntity.Status.COMPLETE,Optional.<Entity>absent());
  }
  Entity storedEntity;
  byte[] array=parser.readBytes();
  try {
    storedEntity=MAPPER.readValue(array,Entity.class);
  }
 catch (  Exception e) {
    throw new DataCorruptionException("Unable to read entity data",e);
  }
  final Optional<Entity> entity=Optional.of(storedEntity);
  if (STATE_COMPLETE == state) {
    return new EntityWrapper(MvccEntity.Status.COMPLETE,entity);
  }
  return new EntityWrapper(MvccEntity.Status.PARTIAL,entity);
}
