{
  if (wrapper == null) {
    return null;
  }
  FieldBufferBuilder builder=new FieldBufferBuilder(3);
  builder.addByte(VERSION);
  if (!wrapper.entity.isPresent()) {
    builder.addByte(STATE_DELETED);
    return FIELD_BUFFER_SERIALIZER.toByteBuffer(builder.build());
  }
  if (wrapper.status == MvccEntity.Status.COMPLETE) {
    builder.addByte(STATE_COMPLETE);
  }
 else {
    builder.addByte(STATE_PARTIAL);
  }
  final Entity entity=wrapper.entity.get();
  final byte[] entityBytes;
  try {
    entityBytes=MAPPER.writeValueAsBytes(entity);
  }
 catch (  JsonProcessingException e) {
    throw new RuntimeException("Unable to serialize entity",e);
  }
  final int maxEntrySize=serializationFig.getMaxEntitySize();
  if (entityBytes.length > maxEntrySize) {
    throw new EntityTooLargeException(entity,maxEntrySize,entityBytes.length,"Your entity cannot exceed " + maxEntrySize + " bytes. The entity you tried to save was "+ entityBytes.length+ " bytes");
  }
  builder.addBytes(entityBytes);
  bytesInHistorgram.update(entityBytes.length);
  return FIELD_BUFFER_SERIALIZER.toByteBuffer(builder.build());
}
