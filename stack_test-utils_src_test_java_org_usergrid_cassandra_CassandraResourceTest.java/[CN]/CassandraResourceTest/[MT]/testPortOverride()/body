{
  int rpcPort;
  int storagePort;
  int sslStoragePort;
  do {
    rpcPort=AvailablePortFinder.getNextAvailable(CassandraResource.DEFAULT_RPC_PORT + 1);
  }
 while (rpcPort == CassandraResource.DEFAULT_RPC_PORT);
  LOG.info("Setting rpc_port to {}",rpcPort);
  do {
    storagePort=AvailablePortFinder.getNextAvailable(CassandraResource.DEFAULT_STORAGE_PORT + 1);
  }
 while (storagePort == CassandraResource.DEFAULT_STORAGE_PORT || storagePort == rpcPort);
  LOG.info("Setting storage_port to {}",storagePort);
  do {
    sslStoragePort=AvailablePortFinder.getNextAvailable(CassandraResource.DEFAULT_SSL_STORAGE_PORT + 1);
  }
 while (sslStoragePort == CassandraResource.DEFAULT_SSL_STORAGE_PORT || storagePort == sslStoragePort);
  LOG.info("Setting ssl_storage_port to {}",sslStoragePort);
  final CassandraResource cassandraResource=new CassandraResource(rpcPort,storagePort,sslStoragePort);
  cassandraResource.before();
  cassandraResource.after();
  LOG.info("Got the test bean: ");
}
