{
  Kryo kryo=new Kryo();
  kryo.register(Entity.class);
  kryo.register(EntityObject.class);
  kryo.register(Location.class);
  kryo.register(ArrayField.class);
  kryo.register(BooleanField.class);
  kryo.register(ByteBufferField.class);
  kryo.register(DoubleField.class);
  kryo.register(EntityObjectField.class);
  kryo.register(IntegerField.class);
  kryo.register(ListField.class);
  kryo.register(LocationField.class);
  kryo.register(LongField.class);
  kryo.register(SetField.class);
  kryo.register(StringField.class);
  kryo.register(UUIDField.class,new de.javakaffee.kryoserializers.UUIDSerializer());
  long writeTime=0;
  long readTime=0;
  for (int i=0; i < count; i++) {
    long writeStart=System.nanoTime();
    ByteBuffer data=ByteBuffer.allocate(1024);
    ByteBufferOutputStream byteBuffOutputStream=new ByteBufferOutputStream(data);
    Output output=new Output(byteBuffOutputStream);
    Entity entity=createEntity();
    kryo.writeObject(output,entity);
    output.close();
    writeTime+=System.nanoTime() - writeStart;
    data.rewind();
    long readStart=System.nanoTime();
    Input input=new Input(new ByteBufferInputStream(data));
    Entity loaded=kryo.readObject(input,Entity.class);
    input.close();
    readTime+=System.nanoTime() - readStart;
  }
  logger.info("Smile took {} nanos for writing {} entities",writeTime,count);
  logger.info("Smile took {} nanos for reading {} entities",readTime,count);
}
