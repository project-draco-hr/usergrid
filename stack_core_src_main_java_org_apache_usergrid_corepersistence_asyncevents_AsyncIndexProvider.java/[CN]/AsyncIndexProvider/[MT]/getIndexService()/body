{
  final String value=indexProcessorFig.getQueueImplementation();
  final Implementations impl=Implementations.valueOf(value);
switch (impl) {
case LOCAL:
    return new InMemoryAsyncEventService(eventBuilder,rxTaskScheduler,indexProducer,indexProcessorFig.resolveSynchronously());
case SQS:
  throw new IllegalArgumentException("Configuration value of SQS is no longer allowed. Use SNS instead with only a single region");
case SNS:
return new AmazonAsyncEventService(queueManagerFactory,indexProcessorFig,indexProducer,metricsFactory,entityCollectionManagerFactory,indexLocationStrategyFactory,entityIndexFactory,eventBuilder,mapManagerFactory,queueFig,rxTaskScheduler);
default :
throw new IllegalArgumentException("Configuration value of " + getErrorValues() + " are allowed");
}
}
