{
  String queryString="select * where a > 1 and not b = 2";
  ANTLRStringStream in=new ANTLRStringStream(queryString);
  QueryFilterLexer lexer=new QueryFilterLexer(in);
  TokenRewriteStream tokens=new TokenRewriteStream(lexer);
  QueryFilterParser parser=new QueryFilterParser(tokens);
  Query query=parser.ql().query;
  QueryProcessor processor=new QueryProcessor(query,null);
  AndNode rootNode=(AndNode)processor.getFirstNode();
  SliceNode sliceNode=(SliceNode)rootNode.getLeft();
  Iterator<QuerySlice> slices=sliceNode.getAllSlices().iterator();
  QuerySlice slice=slices.next();
  assertEquals("a",slice.getPropertyName());
  assertEquals(BigInteger.valueOf(1),slice.getStart().getValue());
  assertFalse(slice.getStart().isInclusive());
  assertNull(slice.getFinish());
  NotNode notNode=(NotNode)rootNode.getRight();
  sliceNode=(SliceNode)notNode.getChild();
  slices=sliceNode.getAllSlices().iterator();
  slice=slices.next();
  assertEquals("b",slice.getPropertyName());
  assertEquals(BigInteger.valueOf(2),slice.getStart().getValue());
  assertTrue(slice.getStart().isInclusive());
  assertEquals(BigInteger.valueOf(2),slice.getFinish().getValue());
  assertTrue(slice.getFinish().isInclusive());
}
