{
  ANTLRStringStream in=new ANTLRStringStream(queryString);
  QueryFilterLexer lexer=new QueryFilterLexer(in);
  TokenRewriteStream tokens=new TokenRewriteStream(lexer);
  QueryFilterParser parser=new QueryFilterParser(tokens);
  Query query=parser.ql().query;
  QueryProcessor processor=new QueryProcessor(query,null,null,null);
  SliceNode node=(SliceNode)processor.getFirstNode();
  Iterator<QuerySlice> slices=node.getAllSlices().iterator();
  QuerySlice slice=slices.next();
  assertEquals("a",slice.getPropertyName());
  assertEquals(BigInteger.valueOf(1),slice.getStart().getValue());
  assertTrue(slice.getStart().isInclusive());
  assertEquals(BigInteger.valueOf(1),slice.getFinish().getValue());
  assertTrue(slice.getFinish().isInclusive());
  slice=slices.next();
  assertEquals("b",slice.getPropertyName());
  assertEquals(BigInteger.valueOf(2),slice.getStart().getValue());
  assertTrue(slice.getStart().isInclusive());
  assertEquals(BigInteger.valueOf(2),slice.getFinish().getValue());
  assertTrue(slice.getFinish().isInclusive());
  slice=slices.next();
  assertEquals("c",slice.getPropertyName());
  assertEquals(BigInteger.valueOf(3),slice.getStart().getValue());
  assertTrue(slice.getStart().isInclusive());
  assertEquals(BigInteger.valueOf(3),slice.getFinish().getValue());
  assertTrue(slice.getFinish().isInclusive());
}
