{
  if (startDatabaseWithServer) {
    startCassandra();
  }
  httpServer=HttpServer.createSimpleServer(".",port);
  ServletHandler handler=new ServletHandler();
  handler.addContextParameter("contextConfigLocation","classpath:standaloneApplicationContext.xml");
  handler.addServletListener(ContextLoaderListener.class.getName());
  handler.addServletListener(RequestContextListener.class.getName());
  com.sun.jersey.api.json.JSONConfiguration.badgerFish();
  handler.addInitParameter("com.sun.jersey.config.property.packages","org.usergrid");
  handler.addInitParameter("com.sun.jersey.api.json.POJOMappingFeature","true");
  handler.addInitParameter("com.sun.jersey.spi.container.ContainerRequestFilters","org.usergrid.rest.filters.MeteringFilter,org.usergrid.rest.filters.JSONPCallbackFilter,org.usergrid.rest.security.shiro.filters.OAuth2AccessTokenSecurityFilter,org.usergrid.rest.security.shiro.filters.BasicAuthSecurityFilter,org.usergrid.rest.security.shiro.filters.ClientCredentialsSecurityFilter");
  handler.addInitParameter("com.sun.jersey.spi.container.ContainerResponseFilters","org.usergrid.rest.security.CrossOriginRequestFilter,org.usergrid.rest.filters.MeteringFilter");
  handler.addInitParameter("com.sun.jersey.spi.container.ResourceFilters","org.usergrid.rest.security.SecuredResourceFilterFactory,com.sun.jersey.api.container.filter.RolesAllowedResourceFilterFactory");
  handler.addInitParameter("com.sun.jersey.config.feature.DisableWADL","true");
  handler.addInitParameter("com.sun.jersey.config.property.JSPTemplatesBasePath","/WEB-INF/jsp");
  handler.addInitParameter("com.sun.jersey.config.property.WebPageContentRegex","/(((images|css|js|jsp|WEB-INF/jsp)/.*)|(favicon\\.ico))");
  handler.setServletInstance(new SpringServlet());
  handler.setProperty("load-on-startup",1);
  Map<String,String> initParameters=new HashMap<String,String>();
  initParameters.put("targetFilterLifecycle","true");
  handler.addFilter(new DelegatingFilterProxy(),"shiroFilter",initParameters);
  handler.addFilter(new SwaggerServlet(),"swagger",null);
  setupJspMappings();
  httpServer.getServerConfiguration().addHttpHandler(handler,"/*");
  ClasspathStaticHttpHandler static_handler=new ClasspathStaticHttpHandler("/html/css/");
  httpServer.getServerConfiguration().addHttpHandler(static_handler,"/css/*");
  httpServer.getServerConfiguration().setJmxEnabled(true);
  try {
    httpServer.start();
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  if (daemon) {
    while (true) {
      try {
        Thread.sleep(Long.MAX_VALUE);
      }
 catch (      InterruptedException e) {
        logger.warn("Interrupted");
      }
    }
  }
}
