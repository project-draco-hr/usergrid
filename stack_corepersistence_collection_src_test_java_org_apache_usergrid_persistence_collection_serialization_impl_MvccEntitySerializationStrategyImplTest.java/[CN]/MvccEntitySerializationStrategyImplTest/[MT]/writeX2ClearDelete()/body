{
  final UUID applicationId=UUIDGenerator.newTimeUUID();
  final String name="test";
  CollectionContext context=new CollectionContextImpl(applicationId,applicationId,name);
  final UUID entityId=UUIDGenerator.newTimeUUID();
  final UUID version1=UUIDGenerator.newTimeUUID();
  final String type="test";
  Entity entityv1=new Entity(entityId,type);
  entityv1.setVersion(version1);
  MvccEntity saved=new MvccEntityImpl(entityId,version1,Optional.of(entityv1));
  serializationStrategy.write(context,saved).execute();
  MvccEntity returnedV1=serializationStrategy.load(context,entityId,version1);
  assertEquals("Mvcc entities are the same",saved,returnedV1);
  assertEquals(entityId,entityv1.getUuid());
  assertEquals(type,entityv1.getType());
  Entity entityv2=new Entity(entityId,type);
  UUID version2=UUIDGenerator.newTimeUUID();
  entityv2.setVersion(version2);
  UUIDType comparator=UUIDType.instance;
  int value=comparator.compare(UUIDSerializer.get().toByteBuffer(version1),UUIDSerializer.get().toByteBuffer(version2));
  assertTrue(value < 0);
  value=comparator.compare(UUIDSerializer.get().toByteBuffer(version2),UUIDSerializer.get().toByteBuffer(version2));
  assertEquals(0,value);
  MvccEntity savedV2=new MvccEntityImpl(entityId,version2,Optional.of(entityv2));
  serializationStrategy.write(context,savedV2).execute();
  MvccEntity returnedV2=serializationStrategy.load(context,entityId,version2);
  assertEquals("Mvcc entities are the same",savedV2,returnedV2);
  UUID version3=UUIDGenerator.newTimeUUID();
  serializationStrategy.clear(context,entityId,version3).execute();
  final Optional<Entity> empty=Optional.absent();
  MvccEntity clearedV3=new MvccEntityImpl(entityId,version3,empty);
  MvccEntity returnedV3=serializationStrategy.load(context,entityId,version3);
  assertEquals("entities are the same",clearedV3,returnedV3);
  UUID current=UUIDGenerator.newTimeUUID();
  List<MvccEntity> entities=serializationStrategy.load(context,entityId,current,3);
  assertEquals(3,entities.size());
  assertEquals(clearedV3,entities.get(0));
  assertEquals(returnedV2,entities.get(1));
  assertEquals(returnedV1,entities.get(2));
  serializationStrategy.delete(context,entityId,version1).execute();
  serializationStrategy.delete(context,entityId,version2).execute();
  entities=serializationStrategy.load(context,entityId,current,3);
  assertEquals(1,entities.size());
  assertEquals(clearedV3,entities.get(0));
  serializationStrategy.delete(context,entityId,version3).execute();
  entities=serializationStrategy.load(context,entityId,current,3);
  assertEquals(0,entities.size());
}
