{
  final UUID applicationId=UUIDGenerator.newTimeUUID();
  final String name="test";
  EntityCollection context=new EntityCollectionImpl(applicationId,name);
  final UUID entityId=UUIDGenerator.newTimeUUID();
  final UUID version=UUIDGenerator.newTimeUUID();
  final String type="test";
  final long created=1l;
  final long updated=2l;
  Entity entity=new Entity(entityId,type);
  entity.setVersion(version);
  entity.setCreated(created);
  entity.setUpdated(updated);
  MvccEntity saved=new MvccEntityImpl(entityId,version,Optional.of(entity));
  serializationStrategy.write(context,saved).execute();
  MvccEntity returned=serializationStrategy.load(context,entityId,version);
  assertEquals("Mvcc entities are the same",saved,returned);
  assertEquals(entityId,entity.getUuid());
  assertEquals(type,entity.getType());
  assertEquals(created,entity.getCreated());
  assertEquals(updated,entity.getUpdated());
  serializationStrategy.clear(context,entityId,version).execute();
  returned=serializationStrategy.load(context,entityId,version);
  assertEquals(entityId,returned.getUuid());
  assertEquals(version,returned.getVersion());
  assertFalse(returned.getEntity().isPresent());
  serializationStrategy.delete(context,entityId,version).execute();
  returned=serializationStrategy.load(context,entityId,version);
  assertNull(returned);
}
