{
  final Id organizationId=new SimpleId("organization");
  final Id applicationId=new SimpleId("application");
  final String name="test";
  CollectionScope context=new CollectionScopeImpl(organizationId,applicationId,name);
  final UUID entityId=UUIDGenerator.newTimeUUID();
  final UUID version=UUIDGenerator.newTimeUUID();
  final String type="test";
  final Id id=new SimpleId(entityId,type);
  Entity entity=new Entity(id);
  EntityUtils.setVersion(entity,version);
  BooleanField boolField=new BooleanField("boolean",false);
  DoubleField doubleField=new DoubleField("double",1d);
  IntegerField intField=new IntegerField("long",1);
  LongField longField=new LongField("int",1l);
  StringField stringField=new StringField("name","test");
  UUIDField uuidField=new UUIDField("uuid",UUIDGenerator.newTimeUUID());
  entity.setField(boolField);
  entity.setField(doubleField);
  entity.setField(intField);
  entity.setField(longField);
  entity.setField(stringField);
  entity.setField(uuidField);
  MvccEntity saved=new MvccEntityImpl(id,version,MvccEntity.Status.COMPLETE,Optional.of(entity));
  serializationStrategy.write(context,saved).execute();
  MvccEntity returned=serializationStrategy.load(context,id,version);
  assertEquals("Mvcc entities are the same",saved,returned);
  assertEquals(id,returned.getId());
  Field<Boolean> boolFieldReturned=returned.getEntity().get().getField(boolField.getName());
  assertEquals(boolField,boolFieldReturned);
  Field<Double> doubleFieldReturned=returned.getEntity().get().getField(doubleField.getName());
  assertEquals(doubleField,doubleFieldReturned);
  Field<Integer> intFieldReturned=returned.getEntity().get().getField(intField.getName());
  assertEquals(intField,intFieldReturned);
  Field<Long> longFieldReturned=returned.getEntity().get().getField(longField.getName());
  assertEquals(longField,longFieldReturned);
  Field<String> stringFieldReturned=returned.getEntity().get().getField(stringField.getName());
  assertEquals(stringField,stringFieldReturned);
  Field<UUID> uuidFieldReturned=returned.getEntity().get().getField(uuidField.getName());
  assertEquals(uuidField,uuidFieldReturned);
  Set<Field> results=new HashSet<Field>();
  results.addAll(returned.getEntity().get().getFields());
  assertTrue(results.contains(boolField));
  assertTrue(results.contains(doubleField));
  assertTrue(results.contains(intField));
  assertTrue(results.contains(longField));
  assertTrue(results.contains(stringField));
  assertTrue(results.contains(uuidField));
  assertEquals(6,results.size());
  assertEquals(id,entity.getId());
  assertEquals(version,entity.getVersion());
  serializationStrategy.delete(context,id,version).execute();
  returned=serializationStrategy.load(context,id,version);
  assertNull(returned);
}
