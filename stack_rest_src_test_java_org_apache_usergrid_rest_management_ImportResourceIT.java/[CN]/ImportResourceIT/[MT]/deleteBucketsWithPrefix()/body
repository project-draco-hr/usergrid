{
  logger.debug("\n\nDelete buckets with prefix {}\n",bucketPrefix);
  String accessId=System.getProperty(SDKGlobalConfiguration.ACCESS_KEY_ENV_VAR);
  String secretKey=System.getProperty(SDKGlobalConfiguration.SECRET_KEY_ENV_VAR);
  Properties overrides=new Properties();
  overrides.setProperty("s3" + ".identity",accessId);
  overrides.setProperty("s3" + ".credential",secretKey);
  final Iterable<? extends Module> MODULES=ImmutableSet.of(new JavaUrlHttpCommandExecutorServiceModule(),new Log4JLoggingModule(),new NettyPayloadModule());
  BlobStoreContext context=ContextBuilder.newBuilder("s3").credentials(accessId,secretKey).modules(MODULES).overrides(overrides).buildView(BlobStoreContext.class);
  BlobStore blobStore=context.getBlobStore();
  final PageSet<? extends StorageMetadata> blobStoreList=blobStore.list();
  for (  Object o : blobStoreList.toArray()) {
    StorageMetadata s=(StorageMetadata)o;
    if (s.getName().startsWith(bucketPrefix)) {
      try {
        blobStore.deleteContainer(s.getName());
      }
 catch (      ContainerNotFoundException cnfe) {
        logger.warn("Attempted to delete bucket {} but it is already deleted",cnfe);
      }
      logger.debug("Deleted bucket {}",s.getName());
    }
  }
}
