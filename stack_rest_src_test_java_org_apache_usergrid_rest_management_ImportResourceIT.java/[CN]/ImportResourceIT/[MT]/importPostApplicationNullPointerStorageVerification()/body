{
  String org=clientSetup.getOrganizationName();
  String app=clientSetup.getAppName();
  Response.Status responseStatus=Response.Status.OK;
  Entity payload=payloadBuilder();
  Entity properties=(Entity)payload.get("properties");
  Entity storage_info=(Entity)properties.get("storage_info");
  storage_info.remove("s3_key");
  try {
    this.management().orgs().org(org).app().addToPath(app).addToPath("imports").post(Entity.class,payload);
  }
 catch (  ClientErrorException uie) {
    responseStatus=Response.Status.fromStatusCode(uie.getResponse().getStatus());
  }
  assertEquals(Response.Status.BAD_REQUEST,responseStatus);
  payload=payloadBuilder();
  properties=(Entity)payload.get("properties");
  storage_info=(Entity)properties.get("storage_info");
  storage_info.remove("s3_access_id");
  try {
    this.management().orgs().org(org).app().addToPath(app).addToPath("imports").post(Entity.class,payload);
  }
 catch (  ClientErrorException uie) {
    responseStatus=Response.Status.fromStatusCode(uie.getResponse().getStatus());
  }
  assertEquals(Response.Status.BAD_REQUEST,responseStatus);
  payload=payloadBuilder();
  properties=(Entity)payload.get("properties");
  storage_info=(Entity)properties.get("storage_info");
  storage_info.remove("bucket_location");
  try {
    this.management().orgs().org(org).app().addToPath(app).addToPath("imports").post(Entity.class,payload);
  }
 catch (  ClientErrorException uie) {
    responseStatus=Response.Status.fromStatusCode(uie.getResponse().getStatus());
  }
  assertEquals(Response.Status.BAD_REQUEST,responseStatus);
}
