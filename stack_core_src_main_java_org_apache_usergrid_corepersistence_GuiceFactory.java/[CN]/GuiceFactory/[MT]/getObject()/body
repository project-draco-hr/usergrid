{
  if (this.injector != null) {
    return injector;
  }
  try {
    logger.info("Loading Core Persistence properties");
    String hostsString="";
    String pcf_hosts=systemProperties.getProperty("pcf_cassandra_hosts");
    if (pcf_hosts != null && !pcf_hosts.isEmpty()) {
      chc.setHosts(pcf_hosts);
    }
    CassandraHost[] hosts=chc.buildCassandraHosts();
    if (hosts.length == 0) {
      throw new RuntimeException("Fatal error: no Cassandra hosts configured");
    }
    for (    CassandraHost host : hosts) {
      if (StringUtils.isEmpty(host.getHost())) {
        throw new RuntimeException("Fatal error: Cassandra hostname cannot be empty");
      }
      hostsString+=host.getHost() + ",";
    }
    hostsString=hostsString.substring(0,hostsString.length() - 1);
    logger.info("hostsString: {}",hostsString);
    Properties cpProps=new Properties();
    cpProps.put("cassandra.hosts",hostsString);
    cpProps.put("cassandra.port",hosts[0].getPort());
    cpProps.put("cassandra.cluster_name",getAndValidateProperty("cassandra.cluster"));
    cpProps.put("collections.keyspace.strategy.class",getAndValidateProperty("cassandra.keyspace.strategy"));
    cpProps.put("collections.keyspace.strategy.options",getAndValidateProperty("cassandra.keyspace.replication"));
    if (logger.isDebugEnabled()) {
      logger.debug("Set Cassandra properties for Core Persistence: {}",cpProps.toString());
    }
    cpProps.putAll(systemProperties);
    ConfigurationManager.loadProperties(cpProps);
  }
 catch (  Exception e) {
    throw new RuntimeException("Fatal error loading configuration.",e);
  }
  List<Module> moduleList=new ArrayList<>();
  if (applicationContext.containsBean("serviceModule")) {
    Module serviceModule=(Module)applicationContext.getBean("serviceModule");
    moduleList.add(serviceModule);
  }
  moduleList.add(new CoreModule());
  moduleList.add(new PersistenceModule(applicationContext));
  injector=Guice.createInjector(moduleList);
  return injector;
}
