{
  QueryFilterParser.booleanliteral_return retval=new QueryFilterParser.booleanliteral_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token BOOLEAN4=null;
  Object BOOLEAN4_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      BOOLEAN4=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_booleanliteral1024);
      BOOLEAN4_tree=new BooleanLiteral(BOOLEAN4);
      adaptor.addChild(root_0,BOOLEAN4_tree);
    }
    retval.stop=input.LT(-1);
    retval.tree=(Object)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
  finally {
  }
  return retval;
}
