{
  UUID applicationId=createApplication("testGroups");
  assertNotNull(applicationId);
  EntityManager em=emf.getEntityManager(applicationId);
  assertNotNull(em);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put("username","edanuff");
  properties.put("email","ed@anuff.com");
  Entity user1=em.create("user",properties);
  assertNotNull(user1);
  properties=new LinkedHashMap<String,Object>();
  properties.put("username","djacobs");
  properties.put("email","djacobs@gmail.com");
  Entity user2=em.create("user",properties);
  assertNotNull(user2);
  properties=new LinkedHashMap<String,Object>();
  properties.put("path","group1");
  Entity group=em.create("group",properties);
  assertNotNull(group);
  em.addToCollection(group,"users",user1);
  em.addToCollection(group,"users",user2);
  Results r=em.getCollection(group,"users",null,null,10,Results.Level.LINKED_PROPERTIES,false);
  logger.info("Users in group: " + JsonUtils.mapToFormattedJsonString(r.getEntities()));
  assertEquals(2,r.size());
  r=em.getCollection(user1,"groups",null,null,10,Results.Level.LINKED_PROPERTIES,false);
  logger.info("User in groups: " + JsonUtils.mapToFormattedJsonString(r.getEntities()));
  assertEquals(1,r.size());
  properties=new LinkedHashMap<String,Object>();
  properties.put("nickname","ed");
  em.updateProperties(new SimpleCollectionRef(group,"users",user1),properties);
  r=em.getCollection(group,"users",null,null,10,Results.Level.LINKED_PROPERTIES,false);
  logger.info(JsonUtils.mapToFormattedJsonString(r.getEntities()));
  assertEquals(2,r.size());
  r=em.searchCollection(group,"users",new Query().addEqualityFilter("member.nickname","ed").withResultsLevel(Results.Level.LINKED_PROPERTIES));
  logger.info(JsonUtils.mapToFormattedJsonString(r.getEntities()));
  assertEquals(1,r.size());
  em.removeFromCollection(user1,"groups",group);
  r=em.getCollection(group,"users",null,null,10,Results.Level.LINKED_PROPERTIES,false);
  logger.info("Users in group: " + JsonUtils.mapToFormattedJsonString(r.getEntities()));
  assertEquals(1,r.size());
  r=em.getCollection(user1,"groups",null,null,10,Results.Level.LINKED_PROPERTIES,false);
  logger.info("User in groups: " + JsonUtils.mapToFormattedJsonString(r.getEntities()));
  assertEquals(0,r.size());
}
