{
  if (columnNameIterators.size() == 1) {
    iterator=columnNameIterators.iterator().next();
    return;
  }
  Observable<T>[] observables=new Observable[columnNameIterators.size()];
  int i=0;
  for (  ColumnNameIterator<C,T> columnNameIterator : columnNameIterators) {
    observables[i]=Observable.from(columnNameIterator,Schedulers.io());
    i++;
  }
  Observable<T> merged=OrderedMerge.orderedMerge(comparator,bufferSize,observables).distinctUntilChanged();
  InnerIterator innerIterator=new InnerIterator(bufferSize);
  merged.subscribe(innerIterator);
  iterator=innerIterator;
}
