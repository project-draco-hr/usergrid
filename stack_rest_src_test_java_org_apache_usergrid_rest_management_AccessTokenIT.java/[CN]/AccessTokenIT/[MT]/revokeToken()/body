{
  String token1=super.adminToken();
  String token2=super.adminToken();
  JsonNode response=mapper.readTree(resource().path("/management/users/test").queryParam("access_token",token1).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  assertEquals("test@usergrid.com",response.get("data").get("email").asText());
  response=mapper.readTree(resource().path("/management/users/test").queryParam("access_token",token2).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  assertEquals("test@usergrid.com",response.get("data").get("email").asText());
  response=mapper.readTree(resource().path("/management/users/test/revoketokens").queryParam("access_token",superAdminToken()).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(String.class));
  refreshIndex("test-organization","test-app");
  ClientResponse.Status status=null;
  try {
    response=mapper.readTree(resource().path("/management/users/test").queryParam("access_token",token1).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  }
 catch (  UniformInterfaceException uie) {
    status=uie.getResponse().getClientResponseStatus();
  }
  assertEquals(ClientResponse.Status.UNAUTHORIZED,status);
  status=null;
  try {
    response=mapper.readTree(resource().path("/management/users/test").queryParam("access_token",token2).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  }
 catch (  UniformInterfaceException uie) {
    status=uie.getResponse().getClientResponseStatus();
  }
  assertEquals(ClientResponse.Status.UNAUTHORIZED,status);
  String token3=super.adminToken();
  String token4=super.adminToken();
  response=mapper.readTree(resource().path("/management/users/test").queryParam("access_token",token3).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  assertEquals("test@usergrid.com",response.get("data").get("email").asText());
  response=mapper.readTree(resource().path("/management/users/test").queryParam("access_token",token4).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  assertEquals("test@usergrid.com",response.get("data").get("email").asText());
  response=mapper.readTree(resource().path("/management/users/test/revoketoken").queryParam("access_token",token3).queryParam("token",token3).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).post(String.class));
  status=null;
  try {
    response=mapper.readTree(resource().path("/management/users/test").queryParam("access_token",token3).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
  }
 catch (  UniformInterfaceException uie) {
    status=uie.getResponse().getClientResponseStatus();
  }
  assertEquals(ClientResponse.Status.UNAUTHORIZED,status);
  status=null;
  try {
    response=mapper.readTree(resource().path("/management/users/test").queryParam("access_token",token4).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON_TYPE).get(String.class));
    status=ClientResponse.Status.OK;
  }
 catch (  UniformInterfaceException uie) {
    status=uie.getResponse().getClientResponseStatus();
  }
  assertEquals(ClientResponse.Status.OK,status);
}
