{
  final GraphManager graphManager=graphManagerFactory.createEdgeManager(applicationScope);
  final Optional<Edge> startFromCursor=getCursor();
  final String edgeName=getEdgeTypeName();
  return observable.flatMap(new Func1<Id,Observable<Id>>(){
    @Override public Observable<Id> call(    final Id id){
      final SimpleSearchByEdgeType search=new SimpleSearchByEdgeType(id,edgeName,Long.MAX_VALUE,SearchByEdgeType.Order.DESCENDING,startFromCursor);
      return graphManager.loadEdgesFromSource(search).doOnNext(new Action1<Edge>(){
        @Override public void call(        final Edge edge){
          setCursor(edge);
        }
      }
).map(new Func1<Edge,Id>(){
        @Override public Id call(        final Edge edge){
          return edge.getTargetNode();
        }
      }
);
    }
  }
);
}
