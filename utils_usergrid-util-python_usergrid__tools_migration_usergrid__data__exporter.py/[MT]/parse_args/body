def parse_args():
    parser = argparse.ArgumentParser(description='Usergrid Org/App Migrator')
    parser.add_argument('--log_dir', help='path to the place where logs will be written', default='./', type=str, required=False)
    parser.add_argument('--log_level', help='log level - DEBUG, INFO, WARN, ERROR, CRITICAL', default='INFO', type=str, required=False)
    parser.add_argument('-o', '--org', help='Name of the org to migrate', type=str, required=True)
    parser.add_argument('-a', '--app', help='Name of one or more apps to include, specify none to include all apps', required=False, action='append')
    parser.add_argument('-e', '--include_edge', help='Name of one or more edges/connection types to INCLUDE, specify none to include all edges', required=False, action='append')
    parser.add_argument('--exclude_edge', help='Name of one or more edges/connection types to EXCLUDE, specify none to include all edges', required=False, action='append')
    parser.add_argument('--exclude_collection', help='Name of one or more collections to EXCLUDE, specify none to include all collections', required=False, action='append')
    parser.add_argument('-c', '--collection', help='Name of one or more collections to include, specify none to include all collections', default=[], action='append')
    parser.add_argument('-s', '--source_config', help='The path to the source endpoint/org configuration file', type=str, default='source.json')
    parser.add_argument('--export_path', help='The path to save the export files', type=str, default='.')
    parser.add_argument('--limit', help='The number of entities to return per query request', type=int, default=100)
    parser.add_argument('--entities_per_file', help='The number of entities to put in one JSON file', type=int, default=10000)
    parser.add_argument('--error_retry_sleep', help='The number of seconds to wait between retrieving after an error', type=float, default=30)
    parser.add_argument('--page_sleep_time', help='The number of seconds to wait between retrieving pages from the UsergridQueryIterator', type=float, default=0.5)
    parser.add_argument('--entity_sleep_time', help='The number of seconds to wait between retrieving pages from the UsergridQueryIterator', type=float, default=0.1)
    parser.add_argument('--workers', dest='collection_workers', help='The number of worker processes to do the migration', type=int, default=4)
    parser.add_argument('--queue_size_max', help='The max size of entities to allow in the queue', type=int, default=100000)
    parser.add_argument('--ql', help='The QL to use in the filter for reading data from collections', type=str, default='select * order by created asc')
    parser.add_argument('--nohup', help='specifies not to use stdout for logging', action='store_true')
    parser.add_argument('--graph', help='Use GRAPH instead of Query', dest='graph', action='store_true')
    my_args = parser.parse_args(sys.argv[1:])
    return vars(my_args)
