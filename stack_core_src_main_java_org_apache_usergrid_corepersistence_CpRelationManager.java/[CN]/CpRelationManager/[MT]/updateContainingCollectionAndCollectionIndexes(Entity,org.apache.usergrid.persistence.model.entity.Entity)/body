{
  List<String> results=new ArrayList<String>();
  GraphManager gm=managerCache.getGraphManager(applicationScope);
  Iterator<String> edgeTypesToTarget=gm.getEdgeTypesToTarget(new SimpleSearchEdgeType(cpHeadEntity.getId(),null,null)).toBlockingObservable().getIterator();
  logger.debug("updateContainingCollectionsAndCollections(): " + "Searched for edges to target {}:{}\n   in scope {}\n   found: {}",new Object[]{cpHeadEntity.getId().getType(),cpHeadEntity.getId().getUuid(),applicationScope.getApplication(),edgeTypesToTarget.hasNext()});
  int count=0;
  while (edgeTypesToTarget.hasNext()) {
    String etype=edgeTypesToTarget.next();
    Observable<Edge> edges=gm.loadEdgesToTarget(new SimpleSearchByEdgeType(cpHeadEntity.getId(),etype,Long.MAX_VALUE,SearchByEdgeType.Order.DESCENDING,null));
    Iterator<Edge> iter=edges.toBlockingObservable().getIterator();
    while (iter.hasNext()) {
      Edge edge=iter.next();
      EntityRef sourceEntity=new SimpleEntityRef(edge.getSourceNode().getType(),edge.getSourceNode().getUuid());
      IndexScope indexScope;
      if (isCollectionEdgeType(edge.getType())) {
        String collName=getCollectionName(edge.getType());
        indexScope=new IndexScopeImpl(applicationScope.getApplication(),new SimpleId(sourceEntity.getUuid(),sourceEntity.getType()),CpEntityManager.getCollectionScopeNameFromCollectionName(collName));
      }
 else {
        String connName=getCollectionName(edge.getType());
        indexScope=new IndexScopeImpl(applicationScope.getApplication(),new SimpleId(sourceEntity.getUuid(),sourceEntity.getType()),CpEntityManager.getConnectionScopeName(cpHeadEntity.getId().getType(),connName));
      }
      EntityIndex ei=managerCache.getEntityIndex(indexScope);
      ei.index(cpEntity);
      indexScope=new IndexScopeImpl(applicationScope.getApplication(),new SimpleId(sourceEntity.getUuid(),sourceEntity.getType()),ALL_TYPES);
      ei=managerCache.getEntityIndex(indexScope);
      ei.index(cpEntity);
      count++;
    }
  }
  logger.debug("updateContainingCollectionsAndCollections() updated {} indexes",count);
  return results;
}
