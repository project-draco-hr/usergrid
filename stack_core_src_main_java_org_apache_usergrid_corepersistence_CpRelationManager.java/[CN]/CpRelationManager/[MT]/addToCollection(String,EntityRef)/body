{
  CollectionInfo collection=getDefaultSchema().getCollection(headEntity.getType(),collectionName);
  if ((collection != null) && !collection.getType().equals(itemRef.getType())) {
    return null;
  }
  Id entityId=new SimpleId(itemRef.getUuid(),itemRef.getType());
  org.apache.usergrid.persistence.model.entity.Entity memberEntity=((CpEntityManager)em).load(entityId);
  final Entity itemEntity;
  if (itemRef instanceof Entity) {
    itemEntity=(Entity)itemRef;
  }
 else {
    itemEntity=em.get(itemRef);
  }
  if (itemEntity == null) {
    return null;
  }
  if (memberEntity == null) {
    throw new RuntimeException("Unable to load entity uuid=" + itemRef.getUuid() + " type="+ itemRef.getType());
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Loaded member entity {}:{} from   app {}\n   " + " data {}",new Object[]{itemRef.getType(),itemRef.getUuid(),applicationScope,CpEntityMapUtils.toMap(memberEntity)});
  }
  final Edge edge=createCollectionEdge(cpHeadEntity.getId(),collectionName,memberEntity.getId());
  GraphManager gm=managerCache.getGraphManager(applicationScope);
  gm.writeEdge(edge).toBlocking().last();
  if (logger.isDebugEnabled()) {
    logger.debug("Wrote edge {}",edge);
  }
  indexService.queueNewEdge(applicationScope,memberEntity,edge);
  if (!cpHeadEntity.getId().getType().equals("application")) {
    String pluralType=InflectionUtils.pluralize(cpHeadEntity.getId().getType());
    final Edge reverseEdge=createCollectionEdge(memberEntity.getId(),pluralType,cpHeadEntity.getId());
    gm.writeEdge(reverseEdge).toBlocking().last();
    indexService.queueNewEdge(applicationScope,cpHeadEntity,reverseEdge);
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Added entity {}:{} to collection {}",new Object[]{itemRef.getUuid().toString(),itemRef.getType(),collectionName});
  }
  return itemEntity;
}
