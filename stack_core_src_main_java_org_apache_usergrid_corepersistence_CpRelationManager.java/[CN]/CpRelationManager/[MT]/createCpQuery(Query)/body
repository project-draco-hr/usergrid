{
  org.apache.usergrid.persistence.index.query.Query cpQuery=new org.apache.usergrid.persistence.index.query.Query();
  cpQuery.setCollection(query.getCollection());
  cpQuery.setConnectionType(query.getConnectionType());
  cpQuery.setCursor(query.getCursor());
  cpQuery.setEntityType(query.getEntityType());
  cpQuery.setFinishTime(query.getFinishTime());
  cpQuery.setLimit(query.getLimit());
  cpQuery.setPad(query.isPad());
  cpQuery.setPermissions(query.getPermissions());
  cpQuery.setQl(query.getQl());
  cpQuery.setReversed(query.isReversed());
  cpQuery.setStartTime(query.getStartTime());
  for (  Query.SortPredicate sp : query.getSortPredicates()) {
    org.apache.usergrid.persistence.index.query.Query.SortDirection newdir=org.apache.usergrid.persistence.index.query.Query.SortDirection.ASCENDING;
    if (sp.getDirection().equals(Query.SortDirection.DESCENDING)) {
      newdir=org.apache.usergrid.persistence.index.query.Query.SortDirection.DESCENDING;
    }
    org.apache.usergrid.persistence.index.query.Query.SortPredicate newsp=new org.apache.usergrid.persistence.index.query.Query.SortPredicate(sp.getPropertyName(),newdir);
    cpQuery.addSort(newsp);
  }
  if (cpQuery.isReversed()) {
    org.apache.usergrid.persistence.index.query.Query.SortPredicate newsp=new org.apache.usergrid.persistence.index.query.Query.SortPredicate(PROPERTY_CREATED,org.apache.usergrid.persistence.index.query.Query.SortDirection.DESCENDING);
    cpQuery.addSort(newsp);
  }
  if (cpQuery.getSortPredicates().isEmpty()) {
    org.apache.usergrid.persistence.index.query.Query.SortPredicate newsp=new org.apache.usergrid.persistence.index.query.Query.SortPredicate(PROPERTY_CREATED,org.apache.usergrid.persistence.index.query.Query.SortDirection.ASCENDING);
    cpQuery.addSort(newsp);
  }
  List<org.apache.usergrid.persistence.index.query.tree.Operand> filterClauses=query.getFilterClauses();
  for (  Operand oldop : filterClauses) {
    if (oldop instanceof org.apache.usergrid.persistence.index.query.tree.ContainsOperand) {
      org.apache.usergrid.persistence.index.query.tree.ContainsOperand casted=(org.apache.usergrid.persistence.index.query.tree.ContainsOperand)oldop;
      cpQuery.addContainsFilter(casted.getProperty().getText(),casted.getLiteral().getValue().toString());
    }
 else     if (oldop instanceof org.apache.usergrid.persistence.index.query.tree.Equal) {
      org.apache.usergrid.persistence.index.query.tree.Equal casted=(org.apache.usergrid.persistence.index.query.tree.Equal)oldop;
      cpQuery.addEqualityFilter(casted.getProperty().getText(),casted.getLiteral().getValue());
    }
 else     if (oldop instanceof org.apache.usergrid.persistence.index.query.tree.GreaterThan) {
      org.apache.usergrid.persistence.index.query.tree.GreaterThan casted=(org.apache.usergrid.persistence.index.query.tree.GreaterThan)oldop;
      cpQuery.addGreaterThanFilter(casted.getProperty().getText(),casted.getLiteral().getValue());
    }
 else     if (oldop instanceof org.apache.usergrid.persistence.index.query.tree.GreaterThanEqual) {
      org.apache.usergrid.persistence.index.query.tree.GreaterThanEqual casted=(org.apache.usergrid.persistence.index.query.tree.GreaterThanEqual)oldop;
      cpQuery.addGreaterThanEqualFilter(casted.getProperty().getText(),casted.getLiteral().getValue());
    }
 else     if (oldop instanceof org.apache.usergrid.persistence.index.query.tree.LessThan) {
      org.apache.usergrid.persistence.index.query.tree.LessThan casted=(org.apache.usergrid.persistence.index.query.tree.LessThan)oldop;
      cpQuery.addLessThanFilter(casted.getProperty().getText(),casted.getLiteral().getValue());
    }
 else     if (oldop instanceof org.apache.usergrid.persistence.index.query.tree.LessThanEqual) {
      org.apache.usergrid.persistence.index.query.tree.LessThanEqual casted=(org.apache.usergrid.persistence.index.query.tree.LessThanEqual)oldop;
      cpQuery.addLessThanEqualFilter(casted.getProperty().getText(),casted.getLiteral().getValue());
    }
  }
  if (cpQuery.getRootOperand() == null) {
    if (query.containsSingleNameOrEmailIdentifier()) {
      Identifier ident=query.getSingleIdentifier();
      if (query.getEntityType().equals(User.ENTITY_TYPE) && ident.isEmail()) {
        org.apache.usergrid.persistence.index.query.Query newQuery=org.apache.usergrid.persistence.index.query.Query.fromQL("select * where email='" + query.getSingleNameOrEmailIdentifier() + "'");
        cpQuery.setRootOperand(newQuery.getRootOperand());
      }
 else {
        org.apache.usergrid.persistence.index.query.Query newQuery=org.apache.usergrid.persistence.index.query.Query.fromQL("select * where name='" + query.getSingleNameOrEmailIdentifier() + "'");
        cpQuery.setRootOperand(newQuery.getRootOperand());
      }
    }
 else     if (query.containsSingleUuidIdentifier()) {
      org.apache.usergrid.persistence.index.query.Query newQuery=org.apache.usergrid.persistence.index.query.Query.fromQL("select * where uuid='" + query.getSingleUuidIdentifier() + "'");
      cpQuery.setRootOperand(newQuery.getRootOperand());
    }
  }
  return cpQuery;
}
