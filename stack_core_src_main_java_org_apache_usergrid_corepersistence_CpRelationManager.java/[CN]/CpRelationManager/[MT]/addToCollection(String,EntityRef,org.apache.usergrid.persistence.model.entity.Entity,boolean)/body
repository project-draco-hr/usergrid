{
  final Entity itemEntity;
  if (itemRef instanceof Entity) {
    itemEntity=(Entity)itemRef;
  }
 else {
    itemEntity=em.get(itemRef);
  }
  if (itemEntity == null) {
    return null;
  }
  CollectionInfo collection=getDefaultSchema().getCollection(headEntity.getType(),collName);
  if ((collection != null) && !collection.getType().equals(itemRef.getType())) {
    return null;
  }
  if (memberEntity == null) {
    throw new RuntimeException("Unable to load entity uuid=" + itemRef.getUuid() + " type="+ itemRef.getType());
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Loaded member entity {}:{} from   app {}\n   " + " data {}",new Object[]{itemRef.getType(),itemRef.getUuid(),applicationScope,CpEntityMapUtils.toMap(memberEntity)});
  }
  final Edge edge=createCollectionEdge(cpHeadEntity.getId(),collName,memberEntity.getId());
  GraphManager gm=managerCache.getGraphManager(applicationScope);
  gm.writeEdge(edge).toBlocking().last();
  if (logger.isDebugEnabled()) {
    logger.debug("Wrote edge {}",edge);
  }
  ((CpEntityManager)em).indexEntityIntoCollection(edge,memberEntity);
  if (logger.isDebugEnabled()) {
    logger.debug("Added entity {}:{} to collection {}",new Object[]{itemRef.getUuid().toString(),itemRef.getType(),collName});
  }
  if (connectBack && collection != null && collection.getLinkedCollection() != null) {
    throw new UnsupportedOperationException("Implement me directly in graph ");
  }
  return itemEntity;
}
