{
  final Entity itemEntity;
  if (itemRef instanceof Entity) {
    itemEntity=(Entity)itemRef;
  }
 else {
    itemEntity=em.get(itemRef);
  }
  if (itemEntity == null) {
    return null;
  }
  CollectionInfo collection=getDefaultSchema().getCollection(headEntity.getType(),collName);
  if ((collection != null) && !collection.getType().equals(itemRef.getType())) {
    return null;
  }
  CollectionScope memberScope=new CollectionScopeImpl(applicationScope.getApplication(),applicationScope.getApplication(),CpEntityManager.getCollectionScopeNameFromEntityType(itemRef.getType()));
  EntityCollectionManager memberMgr=managerCache.getEntityCollectionManager(memberScope);
  org.apache.usergrid.persistence.model.entity.Entity memberEntity=memberMgr.load(new SimpleId(itemRef.getUuid(),itemRef.getType())).toBlockingObservable().last();
  if (memberEntity == null) {
    throw new RuntimeException("Unable to load entity uuid=" + itemRef.getUuid() + " type="+ itemRef.getType());
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Loaded member entity {}:{} from scope\n   app {}\n   owner {}\n   name {} data {}",new Object[]{itemRef.getType(),itemRef.getUuid(),memberScope.getApplication(),memberScope.getOwner(),memberScope.getName(),CpEntityMapUtils.toMap(memberEntity)});
  }
  String edgeType=getEdgeTypeFromCollectionName(collName,memberEntity.getId().getType());
  logger.debug("addToCollection(): Creating edge type {} from {}:{} to {}:{}",new Object[]{edgeType,headEntity.getType(),headEntity.getUuid(),itemRef.getType(),itemRef.getUuid()});
  UUID timeStampUuid=memberEntity.getId().getUuid() != null && UUIDUtils.isTimeBased(memberEntity.getId().getUuid()) ? memberEntity.getId().getUuid() : UUIDUtils.newTimeUUID();
  long uuidHash=UUIDUtils.getUUIDLong(timeStampUuid);
  Edge edge=new SimpleEdge(cpHeadEntity.getId(),edgeType,memberEntity.getId(),uuidHash);
  GraphManager gm=managerCache.getGraphManager(applicationScope);
  gm.writeEdge(edge).toBlockingObservable().last();
  IndexScope collectionIndexScope=new IndexScopeImpl(applicationScope.getApplication(),cpHeadEntity.getId(),CpEntityManager.getCollectionScopeNameFromCollectionName(collName));
  EntityIndex collectionIndex=managerCache.getEntityIndex(collectionIndexScope);
  collectionIndex.index(memberEntity);
  IndexScope entityAllTypesScope=new IndexScopeImpl(applicationScope.getApplication(),cpHeadEntity.getId(),ALL_TYPES);
  EntityIndex entityAllCollectionIndex=managerCache.getEntityIndex(entityAllTypesScope);
  entityAllCollectionIndex.index(memberEntity);
  IndexScope appAllTypesScope=new IndexScopeImpl(applicationScope.getApplication(),applicationScope.getApplication(),ALL_TYPES);
  EntityIndex allCollectionIndex=managerCache.getEntityIndex(appAllTypesScope);
  allCollectionIndex.index(memberEntity);
  logger.debug("Added entity {}:{} to collection {}",new String[]{itemRef.getUuid().toString(),itemRef.getType(),collName});
  logger.debug("With head entity scope is {}:{}:{}",new String[]{headEntityScope.getApplication().toString(),headEntityScope.getOwner().toString(),headEntityScope.getName()});
  if (connectBack && collection != null && collection.getLinkedCollection() != null) {
    getRelationManager(itemEntity).addToCollection(collection.getLinkedCollection(),headEntity,false);
  }
  return itemEntity;
}
