{
  if (headEntity.getUuid().equals(applicationId)) {
    if (collName.equals(COLLECTION_ROLES)) {
      Entity itemEntity=em.get(itemRef);
      if (itemEntity != null) {
        RoleRef roleRef=SimpleRoleRef.forRoleEntity(itemEntity);
        em.deleteRole(roleRef.getApplicationRoleName());
        return;
      }
      em.delete(itemEntity);
      return;
    }
    em.delete(itemRef);
    return;
  }
  CollectionScope memberScope=getCollectionScopeNameFromEntityType(applicationScope.getApplication(),itemRef.getType());
  if (logger.isDebugEnabled()) {
    logger.debug("Loading entity to remove from collection " + "{}:{} from scope\n   app {}\n   owner {}\n   name {}",new Object[]{itemRef.getType(),itemRef.getUuid(),memberScope.getApplication(),memberScope.getOwner(),memberScope.getName()});
  }
  Id entityId=new SimpleId(itemRef.getUuid(),itemRef.getType());
  org.apache.usergrid.persistence.model.entity.Entity memberEntity=((CpEntityManager)em).load(new CpEntityManager.EntityScope(memberScope,entityId));
  final EntityIndex ei=managerCache.getEntityIndex(applicationScope);
  final EntityIndexBatch batch=ei.createBatch();
  IndexScope indexScope=new IndexScopeImpl(cpHeadEntity.getId(),CpNamingUtils.getCollectionScopeNameFromCollectionName(collName));
  batch.deindex(indexScope,memberEntity);
  IndexScope itemScope=new IndexScopeImpl(memberEntity.getId(),CpNamingUtils.getCollectionScopeNameFromCollectionName(Schema.defaultCollectionName(cpHeadEntity.getId().getType())));
  batch.deindex(itemScope,cpHeadEntity);
  batch.execute();
  GraphManager gm=managerCache.getGraphManager(applicationScope);
  Edge collectionToItemEdge=new SimpleEdge(cpHeadEntity.getId(),CpNamingUtils.getEdgeTypeFromCollectionName(collName),memberEntity.getId(),UUIDUtils.getUUIDLong(memberEntity.getId().getUuid()));
  gm.deleteEdge(collectionToItemEdge).toBlockingObservable().last();
  Edge itemToCollectionEdge=new SimpleEdge(memberEntity.getId(),CpNamingUtils.getEdgeTypeFromCollectionName(Schema.defaultCollectionName(cpHeadEntity.getId().getType())),cpHeadEntity.getId(),UUIDUtils.getUUIDLong(cpHeadEntity.getId().getUuid()));
  gm.deleteEdge(itemToCollectionEdge).toBlockingObservable().last();
  if (headEntity.getType().equals(Group.ENTITY_TYPE)) {
    if (collName.equals(COLLECTION_ROLES)) {
      String path=(String)((Entity)itemRef).getMetadata("path");
      if (path.startsWith("/roles/")) {
        Entity itemEntity=em.get(new SimpleEntityRef(memberEntity.getId().getType(),memberEntity.getId().getUuid()));
        RoleRef roleRef=SimpleRoleRef.forRoleEntity(itemEntity);
        em.deleteRole(roleRef.getApplicationRoleName());
      }
    }
  }
}
