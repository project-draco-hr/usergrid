{
  if (query == null) {
    query=new Query();
    query.setCollection(collectionName);
  }
  headEntity=em.validate(headEntity);
  CollectionInfo collection=getDefaultSchema().getCollection(headEntity.getType(),collectionName);
  if (collection == null) {
    throw new RuntimeException("Cannot find collection-info for '" + collectionName + "' of "+ headEntity.getType()+ ":"+ headEntity.getUuid());
  }
  query.setEntityType(collection.getType());
  query=adjustQuery(query);
  final FilterPipeline<Id> filterPipeline=new FilterPipeline(applicationScope,query.getCursor(),query.getLimit()).withFilter(filterFactory.getEntityIdFilter(cpHeadEntity.getId()));
  final FilterPipeline<org.apache.usergrid.persistence.model.entity.Entity> entityFilterPipeline;
  if (query.isGraphSearch()) {
    entityFilterPipeline=filterPipeline.withFilter(filterFactory.readGraphCollectionFilter(collectionName)).withFilter(filterFactory.entityLoadFilter());
  }
 else {
    final String entityType=collection.getType();
    entityFilterPipeline=filterPipeline.withFilter(filterFactory.elasticSearchCollectionFilter(query.getQl().get(),collectionName,entityType)).withFilter(filterFactory.candidateEntityFilter());
  }
  final Observable<ResultsPage> resultsObservable=entityFilterPipeline.withFilter(filterFactory.entityResumeFilter()).withCollector(collectorFactory.getResultsPageCollector()).execute();
  return new ObservableQueryExecutor(resultsObservable).next();
}
