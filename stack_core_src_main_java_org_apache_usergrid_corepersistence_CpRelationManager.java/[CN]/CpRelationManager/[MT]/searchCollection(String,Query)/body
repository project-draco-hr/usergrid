{
  if (query == null) {
    query=new Query();
  }
  headEntity=em.validate(headEntity);
  CollectionInfo collection=getDefaultSchema().getCollection(headEntity.getType(),collName);
  if (collection == null) {
    throw new RuntimeException("Cannot find collection-info for '" + collName + "' of "+ headEntity.getType()+ ":"+ headEntity.getUuid());
  }
  IndexScope indexScope=new IndexScopeImpl(applicationScope.getApplication(),cpHeadEntity.getId(),CpEntityManager.getCollectionScopeNameFromCollectionName(collName));
  EntityIndex ei=managerCache.getEntityIndex(applicationScope);
  logger.debug("Searching scope {}:{}:{}",new String[]{indexScope.getApplication().toString(),indexScope.getOwner().toString(),indexScope.getName()});
  query.setEntityType(collection.getType());
  query=adjustQuery(query);
  int maxQueries=10;
  Results results=null;
  int queryCount=0;
  int originalLimit=query.getLimit();
  boolean satisfied=false;
  while (!satisfied && queryCount++ < maxQueries) {
    CandidateResults crs=ei.search(indexScope,query);
    if (results == null) {
      results=buildResults(query,crs,collName);
    }
 else {
      Results newResults=buildResults(query,crs,collName);
      results.merge(newResults);
    }
    if (crs.isEmpty() || !crs.hasCursor()) {
      satisfied=true;
    }
 else     if (results.size() == query.getLimit()) {
      satisfied=true;
    }
 else     if (crs.hasCursor()) {
      satisfied=false;
      query.setCursor(results.getCursor());
      query.setLimit(originalLimit - results.size());
      logger.warn("Satisfy query limit {}, new limit {} query count {}",new Object[]{originalLimit,query.getLimit(),queryCount});
    }
  }
  return results;
}
