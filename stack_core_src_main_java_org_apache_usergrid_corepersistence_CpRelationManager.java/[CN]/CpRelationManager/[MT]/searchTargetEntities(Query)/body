{
  Preconditions.checkNotNull(query,"query cannot be null");
  final String connection=query.getConnectionType();
  Preconditions.checkNotNull(connection,"connection must be specified");
  headEntity=em.validate(headEntity);
  final Query toExecute=adjustQuery(query);
  final Optional<String> entityType=Optional.fromNullable(query.getEntityType());
  final Id sourceId=headEntity.asId();
  final Optional<String> queryString=query.isGraphSearch() ? Optional.<String>absent() : query.getQl();
  final boolean isConnecting=query.isConnecting();
  if (query.getResultsLevel() == Level.REFS || query.getResultsLevel() == Level.IDS) {
    return new ConnectionRefQueryExecutor(toExecute.getCursor()){
      @Override protected Observable<ResultsPage<ConnectionRef>> buildNewResultsPage(      final Optional<String> cursor){
        final ConnectionSearch search=new ConnectionSearch(applicationScope,sourceId,entityType,connection,toExecute.getLimit(),queryString,cursor,isConnecting);
        return connectionService.searchConnectionAsRefs(search);
      }
    }
.next();
  }
  return new EntityQueryExecutor(toExecute.getCursor()){
    @Override protected Observable<ResultsPage<org.apache.usergrid.persistence.model.entity.Entity>> buildNewResultsPage(    final Optional<String> cursor){
      final ConnectionSearch search=new ConnectionSearch(applicationScope,sourceId,entityType,connection,toExecute.getLimit(),queryString,cursor,isConnecting);
      return connectionService.searchConnection(search);
    }
  }
.next();
}
