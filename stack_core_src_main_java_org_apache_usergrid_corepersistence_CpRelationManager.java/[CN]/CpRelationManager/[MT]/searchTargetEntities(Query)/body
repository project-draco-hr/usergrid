{
  Preconditions.checkNotNull(query,"query cannot be null");
  final String connection=query.getConnectionType();
  Preconditions.checkNotNull(connection,"connection must be specified");
  headEntity=em.validate(headEntity);
  query=adjustQuery(query);
  final Optional<String> entityType=Optional.fromNullable(query.getEntityType());
  final IdBuilder pipelineBuilder=pipelineBuilderFactory.create(applicationScope).withCursor(query.getCursor()).withLimit(query.getLimit()).fromId(cpHeadEntity.getId());
  if (query.getResultsLevel() == Level.REFS) {
    final IdBuilder traversedIds;
    if (query.isGraphSearch()) {
      traversedIds=pipelineBuilder.traverseConnection(connection,entityType);
    }
 else {
      traversedIds=pipelineBuilder.searchConnection(connection,query.getQl().get(),entityType).loadIds();
    }
    final Observable<ResultsPage<ConnectionRef>> results=traversedIds.loadConnectionRefs(cpHeadEntity.getId(),connection).build();
    return new ConnectionRefQueryExecutor(results).next();
  }
  if (query.getResultsLevel() == Level.IDS) {
    throw new UnsupportedOperationException("Not yet implemented");
  }
  final Observable<ResultsPage<org.apache.usergrid.persistence.model.entity.Entity>> results;
  if (query.isGraphSearch()) {
    results=pipelineBuilder.traverseConnection(connection,entityType).loadEntities().build();
  }
 else {
    results=pipelineBuilder.searchConnection(connection,query.getQl().get(),entityType).loadEntities().build();
  }
  return new EntityQueryExecutor(results).next();
}
