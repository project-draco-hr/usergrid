{
  final ActorRef requestActor;
  if (region != null) {
    requestActor=getRequestActorsByRegion().get(region);
  }
 else {
    requestActor=lookupRequestActorForType(entity.getId().getType());
  }
  if (requestActor == null) {
    throw new RuntimeException("No request actor for region or type, cannot verify unique fields!");
  }
  UniqueValueActor.Request request=new UniqueValueActor.Reservation(scope,entity.getId(),version,field);
  UniqueValueActor.Reservation res=reservationCache.get(request.getConsistentHashKey());
  if (res != null && !res.getOwner().equals(request.getOwner())) {
    throw new UniqueValueException("Error property not unique (cache)",field);
  }
  sendUniqueValueRequest(entity,requestActor,request);
}
