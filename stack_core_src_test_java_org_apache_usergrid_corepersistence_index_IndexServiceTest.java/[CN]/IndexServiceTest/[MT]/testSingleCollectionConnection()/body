{
  ApplicationScope applicationScope=new ApplicationScopeImpl(new SimpleId(UUID.randomUUID(),"application"));
  final Entity testEntity=new Entity(createId("thing"),UUIDGenerator.newTimeUUID());
  testEntity.setField(new StringField("string","foo"));
  final EntityCollectionManager collectionManager=entityCollectionManagerFactory.createCollectionManager(applicationScope);
  collectionManager.write(testEntity).toBlocking().last();
  final GraphManager graphManager=graphManagerFactory.createEdgeManager(applicationScope);
  final Edge collectionEdge=CpNamingUtils.createCollectionEdge(applicationScope.getApplication(),"things",testEntity.getId());
  graphManager.writeEdge(collectionEdge).toBlocking().last();
  final Id connectingId=createId("connecting");
  final Edge edge=CpNamingUtils.createConnectionEdge(connectingId,"likes",testEntity.getId());
  final Edge connectionSearch=graphManager.writeEdge(edge).toBlocking().last();
  final int batches=indexService.indexEntity(applicationScope,testEntity).count().toBlocking().last();
  assertEquals(1,batches);
  final ApplicationEntityIndex applicationEntityIndex=entityIndexFactory.createApplicationEntityIndex(applicationScope);
  final SearchEdge collectionSearchEdge=CpNamingUtils.createSearchEdgeFromSource(collectionEdge);
  final CandidateResults collectionResults=getResults(applicationEntityIndex,collectionSearchEdge,SearchTypes.fromTypes(testEntity.getId().getType()),"select *",100,1,100);
  assertEquals(1,collectionResults.size());
  assertEquals(testEntity.getId(),collectionResults.get(0).getId());
  final SearchEdge connectionSearchEdge=CpNamingUtils.createSearchEdgeFromSource(connectionSearch);
  final CandidateResults connectionResults=getResults(applicationEntityIndex,connectionSearchEdge,SearchTypes.fromTypes(testEntity.getId().getType()),"select *",100,1,100);
  assertEquals(1,connectionResults.size());
  assertEquals(testEntity.getId(),connectionResults.get(0).getId());
}
