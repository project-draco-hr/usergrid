{
  ApplicationScope applicationScope=new ApplicationScopeImpl(new SimpleId(UUID.randomUUID(),"application"));
  final EntityIndex EntityIndex=entityIndexFactory.createEntityIndex(indexLocationStrategyFactory.getIndexLocationStrategy(applicationScope));
  final GraphManager graphManager=graphManagerFactory.createEdgeManager(applicationScope);
  final Entity testEntity=new Entity(createId("thing"),UUIDGenerator.newTimeUUID());
  testEntity.setField(new StringField("string","foo"));
  final Edge connectionSearch=createTestEntityAndReturnConnectionEdge(applicationScope,graphManager,testEntity);
  final SearchEdge connectionSearchEdge=CpNamingUtils.createSearchEdgeFromSource(connectionSearch);
  CandidateResults connectionResultsEmpty=EntityIndex.search(connectionSearchEdge,SearchTypes.fromTypes("thing"),"select *",10,0);
  assertEquals(1,connectionResultsEmpty.size());
  final Edge toBeMarkedEdge=graphManager.markEdge(connectionSearch).toBlocking().firstOrDefault(null);
  final Edge toBeDeletedEdge=graphManager.deleteEdge(toBeMarkedEdge).toBlocking().firstOrDefault(null);
  IndexOperationMessage indexOperationMessage=indexService.deleteIndexEdge(applicationScope,toBeDeletedEdge).toBlocking().lastOrDefault(null);
  assertEquals(1,indexOperationMessage.getDeIndexRequests().size());
  indexProducer.put(indexOperationMessage).toBlocking().last();
  Thread.sleep(1000);
  connectionResultsEmpty=EntityIndex.search(connectionSearchEdge,SearchTypes.fromTypes("thing"),"select *",10,0);
  assertEquals(0,connectionResultsEmpty.size());
}
